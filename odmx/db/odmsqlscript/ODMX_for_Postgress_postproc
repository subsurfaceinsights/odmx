 /* Post-processed DDL based on DbWrench export. 2014-8-18 10pm PDT */


DROP SCHEMA IF EXISTS odmx CASCADE;
DROP SCHEMA IF EXISTS odmx_materialized_views CASCADE;

/* Add single base schema for all odmx entities */
CREATE SCHEMA odmx;
COMMENT ON SCHEMA odmx IS 'Schema holding all ODMX (X) entities (tables, etc).';
/* SSI SPECIFIC SCHEMA */
CREATE SCHEMA odmx_materialized_views;
COMMENT ON SCHEMA odmx_materialized_views IS 'Schema holding all SSI materialized views';

CREATE EXTENSION if not exists postgis;
/* Not sure whether these are needed
CREATE EXTENSION if not exists postgis_topology;
CREATE EXTENSION if not exists fuzzystrmatch;
CREATE EXTENSION if not exists postgis_tiger_geoCoder; */
/* ================================================================
   ================================================================ */


















/************ Add: Sequences ***************/

/* Autogenerated Sequences */

CREATE SEQUENCE odmx.external_connection_connection_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.external_connection_connection_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.image_equipment_bridge_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.image_equipment_bridge_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.image_persons_bridge_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.image_persons_bridge_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.images_image_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.images_image_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.image_sampling_feature_bridge_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.image_sampling_feature_bridge_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.instrument_actions_instrument_action_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.instrument_actions_instrument_action_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.organization_sampling_feature_bridge_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.organization_sampling_feature_bridge_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.sampling_features_aliases_sampling_features_aliases_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.sampling_features_aliases_sampling_features_aliases_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.variable_mapping_variable_mapping_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.variable_mapping_variable_mapping_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.variables_taxonomic_classifiers_bridge_variables_taxonomic_classifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.variables_taxonomic_classifiers_bridge_variables_taxonomic_classifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.cv_units_units_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.cv_units_units_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.units_quantity_kind_bridge_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.units_quantity_kind_bridge_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.result_normalization_values_result_normalization_values_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.result_normalization_values_result_normalization_values_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.equipment_persons_bridge_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.equipment_persons_bridge_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.equipment_position_equipment_position_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.equipment_position_equipment_position_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.heartbeat_heartbeat_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.heartbeat_heartbeat_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.assembly_assembled_contigs_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.assembly_assembled_contigs_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.bridge_genes_gene_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.bridge_genes_gene_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.bridge_mag_annotation_event_gene_annotation_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.bridge_mag_annotation_event_gene_annotation_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.bridge_mags_mag_collections_bridge_mags_mag_collections_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.bridge_mags_mag_collections_bridge_mags_mag_collections_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.contigs_contigs_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.contigs_contigs_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.coverage_coverage_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.coverage_coverage_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.extracted_dna_extracted_dnaid_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.extracted_dna_extracted_dnaid_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.gene_annotations_gene_annotation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.gene_annotations_gene_annotation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.genes_gene_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.genes_gene_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.mag_annotation_event_mag_annotation_event_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.mag_annotation_event_mag_annotation_event_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.mag_collections_mag_collections_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.mag_collections_mag_collections_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.mags_mags_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.mags_mags_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.qcd_reads_qcd_reads_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.qcd_reads_qcd_reads_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.raw_reads_raw_reads_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.raw_reads_raw_reads_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.result_derivation_equations_result_derivation_equations_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.result_derivation_equations_result_derivation_equations_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.features_of_interest_features_of_interest_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.features_of_interest_features_of_interest_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.specimen_collection_specimen_collection_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.specimen_collection_specimen_collection_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.specimen_to_specimen_collection_bridge_specimen_to_specimen_collection_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.specimen_to_specimen_collection_bridge_specimen_to_specimen_collection_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.calibration_multiplier_offset_calibration_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.calibration_multiplier_offset_calibration_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.data_channel_data_channel_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.data_channel_data_channel_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.datasource_description_datasource_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.datasource_description_datasource_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.datastream_provenance_datastream_provenance_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.datastream_provenance_datastream_provenance_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.datastream_provenance_files_datastream_provenance_file_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.datastream_provenance_files_datastream_provenance_file_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.phenocam_calculated_channel_phenocam_calculated_channel_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.phenocam_calculated_channel_phenocam_calculated_channel_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.phenocam_cubes_phenocam_cube_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.phenocam_cubes_phenocam_cube_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.phenocam_data_phenocam_dataset_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.phenocam_data_phenocam_dataset_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.phenocam_imgs_phenocam_image_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.phenocam_imgs_phenocam_image_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.qaqc_detail_qaq_detail_log_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.qaqc_detail_qaq_detail_log_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.sampling_feature_timeseries_datastreams_datastream_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.sampling_feature_timeseries_datastreams_datastream_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.variable_qa_min_max_variable_qa_min_max_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.variable_qa_min_max_variable_qa_min_max_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.soilprobe_monitoring_soilprobe_monitoring_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.soilprobe_monitoring_soilprobe_monitoring_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.soilprobe_monitoring_ert_datastream_soilprobe_monitoring_ert_datastream_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.soilprobe_monitoring_ert_datastream_soilprobe_monitoring_ert_datastream_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.soilprobe_monitoring_temperature_datastream_soilprobe_monitoring_temperature_datastream_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.soilprobe_monitoring_temperature_datastream_soilprobe_monitoring_temperature_datastream_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.survey_electrode_geometry_survey_electrode_geometry_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.survey_electrode_geometry_survey_electrode_geometry_id_seq IS 'DbWrench Autogenerated Sequence.';


CREATE SEQUENCE odmx.action_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.action_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.annotations_annotation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.annotations_annotation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.categorical_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.categorical_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.equipment_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.equipment_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.measurement_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.measurement_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.method_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.method_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.point_coverage_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.point_coverage_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.profile_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.profile_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.result_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.result_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.sampling_feature_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.sampling_feature_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.section_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.section_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.spectra_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.spectra_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.timeseries_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.timeseries_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.trajectory_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.trajectory_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.transect_result_value_annotations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.transect_result_value_annotations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.action_by_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.action_by_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.actions_action_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.actions_action_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.affiliations_affiliation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.affiliations_affiliation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.datasets_results_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.datasets_results_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.datasets_dataset_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.datasets_dataset_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.feature_actions_feature_action_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.feature_actions_feature_action_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.methods_method_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.methods_method_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.organizations_organization_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.organizations_organization_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.people_person_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.people_person_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.processing_levels_processing_level_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.processing_levels_processing_level_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.related_actions_relation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.related_actions_relation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.results_result_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.results_result_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.sampling_features_sampling_feature_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.sampling_features_sampling_feature_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.taxonomic_classifiers_taxonomic_classifier_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.taxonomic_classifiers_taxonomic_classifier_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.units_units_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.units_units_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.variables_variable_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.variables_variable_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.reference_material_values_reference_material_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.reference_material_values_reference_material_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.reference_materials_reference_material_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.reference_materials_reference_material_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.results_data_quality_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.results_data_quality_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.calibration_reference_equipment_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.calibration_reference_equipment_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.calibration_standards_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.calibration_standards_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.datalogger_file_columns_datalogger_file_column_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.datalogger_file_columns_datalogger_file_column_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.datalogger_files_datalogger_file_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.datalogger_files_datalogger_file_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.datalogger_program_files_program_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.datalogger_program_files_program_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.equipment_models_equipment_model_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.equipment_models_equipment_model_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.equipment_used_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.equipment_used_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.equipment_equipment_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.equipment_equipment_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.instrument_output_variables_instrument_output_variable_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.instrument_output_variables_instrument_output_variable_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.related_equipment_relation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.related_equipment_relation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.action_extension_property_values_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.action_extension_property_values_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.citation_extension_property_values_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.citation_extension_property_values_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.extension_properties_property_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.extension_properties_property_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.method_extension_property_values_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.method_extension_property_values_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.result_extension_property_values_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.result_extension_property_values_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.sampling_feature_extension_property_values_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.sampling_feature_extension_property_values_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.variable_extension_property_values_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.variable_extension_property_values_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.citation_external_identifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.citation_external_identifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.external_identifier_systems_external_identifier_system_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.external_identifier_systems_external_identifier_system_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.method_external_identifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.method_external_identifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.person_external_identifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.person_external_identifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.reference_material_external_identifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.reference_material_external_identifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.sampling_feature_external_identifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.sampling_feature_external_identifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.spatial_reference_external_identifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.spatial_reference_external_identifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.taxonomic_classifier_external_identifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.taxonomic_classifier_external_identifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.variable_external_identifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.variable_external_identifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.action_directives_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.action_directives_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.directives_directive_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.directives_directive_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.author_lists_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.author_lists_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.citations_citation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.citations_citation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.dataset_citations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.dataset_citations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.derivation_equations_derivation_equation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.derivation_equations_derivation_equation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.method_citations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.method_citations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.related_annotations_relation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.related_annotations_relation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.related_citations_relation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.related_citations_relation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.related_datasets_relation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.related_datasets_relation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.related_results_relation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.related_results_relation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.categorical_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.categorical_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.measurement_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.measurement_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.point_coverage_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.point_coverage_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.profile_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.profile_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.section_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.section_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.spectra_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.spectra_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.timeseries_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.timeseries_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.trajectory_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.trajectory_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.transect_result_values_value_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.transect_result_values_value_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.related_features_relation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.related_features_relation_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.spatial_offsets_spatial_offset_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.spatial_offsets_spatial_offset_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.spatial_references_spatial_reference_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.spatial_references_spatial_reference_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.specimen_taxonomic_classifiers_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.specimen_taxonomic_classifiers_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.model_affiliations_bridge_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.model_affiliations_bridge_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.models_model_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.models_model_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.related_models_related_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.related_models_related_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE odmx.simulations_simulation_id_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE odmx.simulations_simulation_id_seq IS 'DbWrench Autogenerated Sequence.';



/************ Update: Tables ***************/

/******************** Add Table: odmx.action_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.action_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.action_annotations_bridge_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.action_annotations ADD CONSTRAINT pk_action_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.action_annotations.action_id IS 'Foreign key of the Action being annotated.';

COMMENT ON COLUMN odmx.action_annotations.annotation_id IS 'Foreign key of the annotation being added to the Action.';

COMMENT ON TABLE odmx.action_annotations IS 'Notes for or groups of one or more Actions.';


/******************** Add Table: odmx.annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.annotations
(
	annotation_id INTEGER DEFAULT nextval('odmx.annotations_annotation_id_seq'::regclass) NOT NULL,
	annotation_type_cv VARCHAR NOT NULL,
	annotation_code VARCHAR NULL,
	annotation_text VARCHAR(500) NOT NULL,
	annotation_date_time TIMESTAMP NULL,
	annotation_utc_offset INTEGER NULL,
	annotation_link VARCHAR NULL,
	annotator_id INTEGER NULL,
	citation_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.annotations ADD CONSTRAINT pk_annotations
	PRIMARY KEY (annotation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.annotations.annotation_id IS 'Primary key for Annotations.';

COMMENT ON COLUMN odmx.annotations.annotation_type_cv IS 'CV for types of annotations.';

COMMENT ON COLUMN odmx.annotations.annotation_code IS 'A short text code that identifies the annotation (e.g., "A'' for "Approved data").';

COMMENT ON COLUMN odmx.annotations.annotation_text IS 'Full text of the annotation.';

COMMENT ON COLUMN odmx.annotations.annotation_date_time IS 'Date and time at which the annotation was created.';

COMMENT ON COLUMN odmx.annotations.annotation_utc_offset IS 'UTCOffset for the annotation creation date/time.';

COMMENT ON COLUMN odmx.annotations.annotator_id IS 'Foregn key identifier for the person that created the annotation';

COMMENT ON TABLE odmx.annotations IS 'Contains text annotations added to one or more records within various ODMX tables.  Annotations can be used to record notes about a particular SamplingFeature, Action, Result, etc. or to create groups of records such as Specimens, Sites, People, etc.';


/******************** Add Table: odmx.categorical_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.categorical_result_value_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.categorical_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.categorical_result_value_annotations ADD CONSTRAINT pk_categorical_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.categorical_result_value_annotations IS 'Annotations for Categorical ResultValues';


/******************** Add Table: odmx.equipment_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.equipment_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.equipment_annotations_bridge_id_seq'::regclass) NOT NULL,
	equipment_id INTEGER NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.equipment_annotations ADD CONSTRAINT pk_equipment_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.equipment_annotations IS 'Bridge table linking Annotations to Equipment';


/******************** Add Table: odmx.measurement_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.measurement_result_value_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.measurement_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.measurement_result_value_annotations ADD CONSTRAINT pk_measurement_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.measurement_result_value_annotations.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.measurement_result_value_annotations.value_id IS 'Foreign key of the result value being annotated';

COMMENT ON COLUMN odmx.measurement_result_value_annotations.annotation_id IS 'Foreign key of the annotation applied to the result value';

COMMENT ON TABLE odmx.measurement_result_value_annotations IS 'Annotations for Measurement ResultValues';


/******************** Add Table: odmx.method_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.method_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.method_annotations_bridge_id_seq'::regclass) NOT NULL,
	method_id INTEGER NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.method_annotations ADD CONSTRAINT pk_method_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.method_annotations.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.method_annotations.method_id IS 'Foreign key of the method being annotated';

COMMENT ON COLUMN odmx.method_annotations.annotation_id IS 'Foreign key of the annotation added to the method';

COMMENT ON TABLE odmx.method_annotations IS 'Notes for or groups of one or more Methods.';


/******************** Add Table: odmx.point_coverage_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.point_coverage_result_value_annotations
(
	bridge_id BIGINT DEFAULT nextval('odmx.point_coverage_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.point_coverage_result_value_annotations ADD CONSTRAINT pk_point_coverage_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.point_coverage_result_value_annotations IS 'Annotations for Point Coverage ResultValues';


/******************** Add Table: odmx.profile_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.profile_result_value_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.profile_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.profile_result_value_annotations ADD CONSTRAINT pk_profile_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.profile_result_value_annotations IS 'Annotations for Profile ResultValues';


/******************** Add Table: odmx.result_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.result_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.result_annotations_bridge_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL,
	begin_date_time TIMESTAMP NOT NULL,
	end_date_time TIMESTAMP NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.result_annotations ADD CONSTRAINT pk_result_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.result_annotations.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.result_annotations.result_id IS 'Foreign key of the result being annotated';

COMMENT ON COLUMN odmx.result_annotations.annotation_id IS 'Foreign key of the annotation added to the result';

COMMENT ON COLUMN odmx.result_annotations.begin_date_time IS 'Beginning date/time of the annotation';

COMMENT ON COLUMN odmx.result_annotations.end_date_time IS 'Ending date/time of the annotation';

COMMENT ON TABLE odmx.result_annotations IS 'Notes for or groups of one or more Results [sets].';


/******************** Add Table: odmx.sampling_feature_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.sampling_feature_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.sampling_feature_annotations_bridge_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.sampling_feature_annotations ADD CONSTRAINT pk_sampling_feature_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.sampling_feature_annotations.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.sampling_feature_annotations.sampling_feature_id IS 'Foreign key of the SamplingFeature being annotated.';

COMMENT ON COLUMN odmx.sampling_feature_annotations.annotation_id IS 'Foreign key of the Annotation applied to the SamplingFeature.';

COMMENT ON TABLE odmx.sampling_feature_annotations IS 'Notes for or groups of one or more Sampling Features.';


/******************** Add Table: odmx.section_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.section_result_value_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.section_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.section_result_value_annotations ADD CONSTRAINT pk_section_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.section_result_value_annotations IS 'Annotations for Section ResultValues';


/******************** Add Table: odmx.spectra_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.spectra_result_value_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.spectra_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.spectra_result_value_annotations ADD CONSTRAINT pk_spectra_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.spectra_result_value_annotations IS 'Annotations for Spectra ResultValues';


/******************** Add Table: odmx.timeseries_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.timeseries_result_value_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.timeseries_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.timeseries_result_value_annotations ADD CONSTRAINT pk_timeseries_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.timeseries_result_value_annotations IS 'Annotations for Time Series ResultValues';


/******************** Add Table: odmx.trajectory_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.trajectory_result_value_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.trajectory_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.trajectory_result_value_annotations ADD CONSTRAINT pk_trajectory_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.trajectory_result_value_annotations IS 'Annotations for Trajectory ResultValues';


/******************** Add Table: odmx.transect_result_value_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.transect_result_value_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.transect_result_value_annotations_bridge_id_seq'::regclass) NOT NULL,
	value_id BIGINT NOT NULL,
	annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.transect_result_value_annotations ADD CONSTRAINT pk_transect_result_value_annotations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.transect_result_value_annotations IS 'Annotations for Transect ResultValues';


/******************** Add Table: odmx.cv_action_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_action_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL,
	produces_result BOOL NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_action_type ADD CONSTRAINT pk_cv_action_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_action_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_action_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_action_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_action_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_action_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_action_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_action_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_action_type IS 'Table containing terms used in the ActionType controlled vocabulary.';


/******************** Add Table: odmx.cv_aggregation_statistic ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_aggregation_statistic
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_aggregation_statistic ADD CONSTRAINT pk_cv_aggregation_statistic
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_aggregation_statistic.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_aggregation_statistic.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_aggregation_statistic.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_aggregation_statistic.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_aggregation_statistic.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_aggregation_statistic.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_aggregation_statistic.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_aggregation_statistic IS 'Table containing terms used in the AggregationStatistic controlled vocabulary.';


/******************** Add Table: odmx.cv_annotation_source ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_annotation_source
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.cv_annotation_source ADD CONSTRAINT pk_cv_annotation_source
	PRIMARY KEY (term);


/******************** Add Table: odmx.cv_annotation_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_annotation_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_annotation_type ADD CONSTRAINT pk_cv_annotation_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_annotation_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_annotation_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_annotation_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_annotation_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_annotation_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_annotation_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_annotation_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_annotation_type IS 'Table containing terms used in the AnnotationType controlled vocabulary.';


/******************** Add Table: odmx.cv_censor_code ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_censor_code
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_censor_code ADD CONSTRAINT pk_cv_censor_code
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_censor_code.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_censor_code.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_censor_code.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_censor_code.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_censor_code.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_censor_code.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_censor_code.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_censor_code IS 'Table containing terms used in the CensorCode controlled vocabulary.';


/******************** Add Table: odmx.cv_data_quality_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_data_quality_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_data_quality_type ADD CONSTRAINT pk_cv_data_quality_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_data_quality_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_data_quality_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_data_quality_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_data_quality_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_data_quality_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_data_quality_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_data_quality_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_data_quality_type IS 'Table containing terms used in the DataQualityType controlled vocabulary.';


/******************** Add Table: odmx.cv_dataset_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_dataset_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_dataset_type ADD CONSTRAINT pk_cv_dataset_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_dataset_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_dataset_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_dataset_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_dataset_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_dataset_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_dataset_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_dataset_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_dataset_type IS 'Table containing terms used in the DatasetType controlled vocabulary.';


/******************** Add Table: odmx.cv_datastream_access_level ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_datastream_access_level
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_datastream_access_level ADD CONSTRAINT pk_cv_datastream_access_level
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_datastream_access_level.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_datastream_access_level.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_datastream_access_level.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_datastream_access_level.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_datastream_access_level.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_datastream_access_level.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_datastream_access_level.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_datastream_access_level IS 'Table containing terms used in the VariableDomain controlled vocabulary.';


/******************** Add Table: odmx.cv_datastream_classifier ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_datastream_classifier
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_datastream_classifier ADD CONSTRAINT pk_cv_datastream_classifier
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_datastream_classifier.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_datastream_classifier.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_datastream_classifier.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_datastream_classifier.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_datastream_classifier.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_datastream_classifier.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_datastream_classifier.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_datastream_classifier IS 'Table containing terms used in the VariableDomain controlled vocabulary.';


/******************** Add Table: odmx.cv_datastream_source_category ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_datastream_source_category
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_datastream_source_category ADD CONSTRAINT pk_cv_datastream_source_category
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_datastream_source_category.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_datastream_source_category.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_datastream_source_category.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_datastream_source_category.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_datastream_source_category.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_datastream_source_category.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_datastream_source_category.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_datastream_source_category IS 'Table containing terms used in the VariableDomain controlled vocabulary.';


/******************** Add Table: odmx.cv_datastream_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_datastream_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_datastream_type ADD CONSTRAINT pk_cv_datastream_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_datastream_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_datastream_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_datastream_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_datastream_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_datastream_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_datastream_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_datastream_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_datastream_type IS 'Table containing terms used in the DatasetType controlled vocabulary.';


/******************** Add Table: odmx.cv_directive_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_directive_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_directive_type ADD CONSTRAINT pk_cv_directive_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_directive_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_directive_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_directive_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_directive_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_directive_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_directive_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_directive_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_directive_type IS 'Table containing terms used in the DirectiveType controlled vocabulary.';


/******************** Add Table: odmx.cv_elevation_datum ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_elevation_datum
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_elevation_datum ADD CONSTRAINT pk_cv_elevation_datum
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_elevation_datum.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_elevation_datum.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_elevation_datum.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_elevation_datum.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_elevation_datum.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_elevation_datum.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_elevation_datum.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_elevation_datum IS 'Table containing terms used in the ElevationDatum controlled vocabulary.';


/******************** Add Table: odmx.cv_equipment_status ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_equipment_status
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_equipment_status ADD CONSTRAINT pk_cv_elevation_datum_dup
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_equipment_status.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_equipment_status.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_equipment_status.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_equipment_status.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_equipment_status.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_equipment_status.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_equipment_status.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_equipment_status IS 'Table containing terms used in the ElevationDatum controlled vocabulary.';


/******************** Add Table: odmx.cv_equipment_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_equipment_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_equipment_type ADD CONSTRAINT pk_cv_equipment_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_equipment_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_equipment_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_equipment_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_equipment_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_equipment_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_equipment_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_equipment_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_equipment_type IS 'Table containing terms used in the EquipmentType controlled vocabulary.';


/******************** Add Table: odmx.cv_features_of_interest_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_features_of_interest_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_features_of_interest_type ADD CONSTRAINT pk_cv_features_of_interest_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_features_of_interest_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_features_of_interest_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_features_of_interest_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_features_of_interest_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_features_of_interest_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_features_of_interest_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_features_of_interest_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_features_of_interest_type IS 'Table containing terms used in the FeatureOfInterestType controlled vocabulary.';


/******************** Add Table: odmx.cv_image_channel ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_image_channel
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_image_channel ADD CONSTRAINT pk_cv_image_channel
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_image_channel.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_image_channel.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_image_channel.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_image_channel.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_image_channel.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_image_channel.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_image_channel.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_image_channel IS 'Table containing terms used in the Image Channel controlled vocabulary.';


/******************** Add Table: odmx.cv_medium ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_medium
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_medium ADD CONSTRAINT pk_cv_medium
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_medium.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_medium.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_medium.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_medium.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_medium.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_medium.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_medium.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_medium IS 'Table containing terms used in the Medium controlled vocabulary.';


/******************** Add Table: odmx.cv_method_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_method_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_method_type ADD CONSTRAINT pk_cv_method_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_method_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_method_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_method_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_method_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_method_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_method_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_method_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_method_type IS 'Table containing terms used in the MethodType controlled vocabulary.';


/******************** Add Table: odmx.cv_organization_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_organization_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_organization_type ADD CONSTRAINT pk_cv_organization_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_organization_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_organization_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_organization_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_organization_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_organization_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_organization_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_organization_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_organization_type IS 'Table containing terms used in the OrganizationType controlled vocabulary.';


/******************** Add Table: odmx.cv_persons_role ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_persons_role
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.cv_persons_role ADD CONSTRAINT pk_cv_persons_role
	PRIMARY KEY (term);


/******************** Add Table: odmx.cv_property_data_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_property_data_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_property_data_type ADD CONSTRAINT pk_cv_property_data_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_property_data_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_property_data_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_property_data_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_property_data_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_property_data_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_property_data_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_property_data_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_property_data_type IS 'Table containing terms used in the PropertyDataType controlled vocabulary.';


/******************** Add Table: odmx.cv_quality_code ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_quality_code
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NOT NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL,
	qa_flag VARCHAR(1) NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_quality_code ADD CONSTRAINT pk_cv_quality_code
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_quality_code.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_quality_code.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_quality_code.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_quality_code.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_quality_code.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_quality_code.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_quality_code.note IS 'A note about the vocabulary';

COMMENT ON COLUMN odmx.cv_quality_code.qa_flag IS 'A single character which is used in the flagging of data';

COMMENT ON TABLE odmx.cv_quality_code IS 'Table containing terms used in the QualityCode controlled vocabulary.';


/******************** Add Table: odmx.cv_quantity_kind ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_quantity_kind
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL,
	default_unit VARCHAR NULL,
	default_unit_abbreviation VARCHAR NULL,
	dimension_symbol VARCHAR NULL,
	dimension_unitless INTEGER NOT NULL,
	dimension_length INTEGER NOT NULL,
	dimension_mass INTEGER NOT NULL,
	dimension_time INTEGER NOT NULL,
	dimension_current INTEGER NOT NULL,
	dimension_temperature INTEGER NOT NULL,
	dimension_amount INTEGER NOT NULL,
	dimension_light INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_quantity_kind ADD CONSTRAINT pk_cv_quantity_kind
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_quantity_kind.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_quantity_kind.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_quantity_kind.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_quantity_kind.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_quantity_kind.provenance IS 'The organization or source which defines this term';

COMMENT ON COLUMN odmx.cv_quantity_kind.provenance_uri IS 'A link to the source vocabulary from which the term was derived or which provides further information';

COMMENT ON COLUMN odmx.cv_quantity_kind.note IS 'An optional note about this quantitykind unit';

COMMENT ON COLUMN odmx.cv_quantity_kind.default_unit IS 'The default unit';

COMMENT ON COLUMN odmx.cv_quantity_kind.default_unit_abbreviation IS 'Abbreviation for the default unit';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_symbol IS 'The dimension symbol. This should align with the other units (dimension_length and so on)';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_unitless IS 'an integer (between -10 and 10, indicating the unitless dimensionality)';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_length IS 'an integer (between -10 and 10, indicating the length dimensionality)';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_mass IS 'an integer (between -10 and 10, indicating the mass  dimensionality)';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_time IS 'an integer (between -10 and 10, indicating the time dimensionality)';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_current IS 'an integer (between -10 and 10, indicating the current dimensionality)';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_temperature IS 'an integer (between -10 and 10, indicating the temperature dimensionality)';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_amount IS 'an integer (between -10 and 10, indicating the amount dimensionality)';

COMMENT ON COLUMN odmx.cv_quantity_kind.dimension_light IS 'an integer (between -10 and 10, indicating the light dimensionality)';

COMMENT ON TABLE odmx.cv_quantity_kind IS 'Table containing terms used in the QuantityKind  controlled vocabulary.';


/******************** Add Table: odmx.cv_relationship_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_relationship_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_relationship_type ADD CONSTRAINT pk_cv_relationship_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_relationship_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_relationship_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_relationship_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_relationship_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_relationship_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_relationship_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_relationship_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_relationship_type IS 'Table containing terms used in the RelationshipType controlled vocabulary.';


/******************** Add Table: odmx.cv_result_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_result_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_result_type ADD CONSTRAINT pk_cv_result_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_result_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_result_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_result_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_result_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_result_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_result_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_result_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_result_type IS 'Table containing terms used in the ResultType controlled vocabulary.';


/******************** Add Table: odmx.cv_sampling_feature_geo_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_sampling_feature_geo_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_sampling_feature_geo_type ADD CONSTRAINT pk_cv_sampling_feature_geo_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_sampling_feature_geo_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_sampling_feature_geo_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_sampling_feature_geo_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_sampling_feature_geo_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_sampling_feature_geo_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_sampling_feature_geo_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_sampling_feature_geo_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_sampling_feature_geo_type IS 'Table containing terms used in the SamplingFeatureGeoType controlled vocabulary.';


/******************** Add Table: odmx.cv_sampling_feature_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_sampling_feature_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL,
	dimensionality VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_sampling_feature_type ADD CONSTRAINT pk_cv_sampling_feature_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_sampling_feature_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_sampling_feature_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_sampling_feature_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_sampling_feature_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_sampling_feature_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_sampling_feature_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_sampling_feature_type.note IS 'A note about the vocabulary';

COMMENT ON COLUMN odmx.cv_sampling_feature_type.dimensionality IS 'The dimensionality of the sampling feature (0D,1D,2D,3D,4D)';

COMMENT ON TABLE odmx.cv_sampling_feature_type IS 'Table containing terms used in the SamplingFeatureType controlled vocabulary.';


/******************** Add Table: odmx.cv_spatial_offset_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_spatial_offset_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL,
	offset1 VARCHAR NULL,
	offset2 VARCHAR NULL,
	offset3 VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_spatial_offset_type ADD CONSTRAINT pk_cv_spatial_offset_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_spatial_offset_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.note IS 'A note about the vocabulary';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.offset1 IS 'Description of  the meaning of the  first offset ';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.offset2 IS 'Description of the meaning of the second offset';

COMMENT ON COLUMN odmx.cv_spatial_offset_type.offset3 IS 'Description of the meaning of the third offset';

COMMENT ON TABLE odmx.cv_spatial_offset_type IS 'Table containing terms used in the SpatialOffsetType controlled vocabulary.';


/******************** Add Table: odmx.cv_specimen_collection ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_specimen_collection
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_specimen_collection ADD CONSTRAINT pk_cv_specimen_collection
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_specimen_collection.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_specimen_collection.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_specimen_collection.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_specimen_collection.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_specimen_collection.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_specimen_collection.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_specimen_collection.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_specimen_collection IS 'Table containing terms used in the Specimen Collection controlled vocabulary.';


/******************** Add Table: odmx.cv_specimen_type ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_specimen_type
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_specimen_type ADD CONSTRAINT pk_cv_specimen_type
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_specimen_type.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_specimen_type.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_specimen_type.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_specimen_type.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_specimen_type.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_specimen_type.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_specimen_type.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_specimen_type IS 'Table containing terms used in the SpecimenType controlled vocabulary.';


/******************** Add Table: odmx.cv_status ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_status
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_status ADD CONSTRAINT pk_cv_status
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_status.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_status.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_status.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_status.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_status.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_status.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_status.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_status IS 'Table containing terms used in the Status controlled vocabulary.';


/******************** Add Table: odmx.cv_taxonomic_classifier_domain ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_taxonomic_classifier_domain
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_taxonomic_classifier_domain ADD CONSTRAINT pk_cv_taxonomic_classifier_domain
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_taxonomic_classifier_domain.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_taxonomic_classifier_domain.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_taxonomic_classifier_domain.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_taxonomic_classifier_domain.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_taxonomic_classifier_domain.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_taxonomic_classifier_domain.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_taxonomic_classifier_domain.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_taxonomic_classifier_domain IS 'Table containing terms used in the TaxonomicClassifierDomain controlled vocabulary.';


/******************** Add Table: odmx.cv_units ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_units
(
	units_id INTEGER DEFAULT nextval('odmx.cv_units_units_id_seq'::regclass) NOT NULL,
	term VARCHAR NOT NULL,
	units_name VARCHAR NOT NULL,
	quantity_kind_cv VARCHAR NOT NULL,
	units_abbreviation VARCHAR NULL,
	units_link VARCHAR(1000) NULL,
	conversion_multiplier FLOAT NOT NULL,
	conversion_offset FLOAT NOT NULL,
	definition VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_units ADD CONSTRAINT pk_cv_units
	PRIMARY KEY (units_id);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_units.units_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.cv_units.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_units.units_name IS 'The human readable version of the vocabulary term. May be the same as the term.t';

COMMENT ON COLUMN odmx.cv_units.quantity_kind_cv IS 'Foreign key on Unitstype';

COMMENT ON COLUMN odmx.cv_units.units_abbreviation IS 'Abbreviation of unit';

COMMENT ON COLUMN odmx.cv_units.units_link IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON TABLE odmx.cv_units IS 'Table containing terms used in the VariableName controlled vocabulary.';


/******************** Add Table: odmx.cv_variable_domain ************************/

/* Build Table Structure */
CREATE TABLE odmx.cv_variable_domain
(
	term VARCHAR NOT NULL,
	name VARCHAR NOT NULL,
	definition VARCHAR NULL,
	category VARCHAR NULL,
	provenance VARCHAR NULL,
	provenance_uri VARCHAR NULL,
	note VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.cv_variable_domain ADD CONSTRAINT pk_cv_variable_domain
	PRIMARY KEY (term);

/* Add Comments */
COMMENT ON COLUMN odmx.cv_variable_domain.term IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.cv_variable_domain.name IS 'The human readable version of the vocabulary term. May be the same as the term.';

COMMENT ON COLUMN odmx.cv_variable_domain.definition IS 'Definition of vocabulary term.';

COMMENT ON COLUMN odmx.cv_variable_domain.category IS 'A category within which the term falls.';

COMMENT ON COLUMN odmx.cv_variable_domain.provenance IS 'The provenance of the vocabulary';

COMMENT ON COLUMN odmx.cv_variable_domain.provenance_uri IS 'A link to the source vocabulary from which the term was derived.';

COMMENT ON COLUMN odmx.cv_variable_domain.note IS 'A note about the vocabulary';

COMMENT ON TABLE odmx.cv_variable_domain IS 'Table containing terms used in the VariableDomain controlled vocabulary.';


/******************** Add Table: odmx.units_quantity_kind_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.units_quantity_kind_bridge
(
	bridge_id INTEGER DEFAULT nextval('odmx.units_quantity_kind_bridge_bridge_id_seq'::regclass) NOT NULL,
	units_id INTEGER NULL,
	term VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.units_quantity_kind_bridge ADD CONSTRAINT pk_units_quantity_kind_bridge
	PRIMARY KEY (bridge_id);


/******************** Add Table: odmx.action_by ************************/

/* Build Table Structure */
CREATE TABLE odmx.action_by
(
	bridge_id INTEGER DEFAULT nextval('odmx.action_by_bridge_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	affiliation_id INTEGER NOT NULL,
	is_action_lead BOOL NOT NULL,
	role_description VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.action_by ADD CONSTRAINT pk_action_by
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.action_by.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.action_by.action_id IS 'Foreign key identifier of an action.';

COMMENT ON COLUMN odmx.action_by.affiliation_id IS 'Foreign key identifier of a person';

COMMENT ON COLUMN odmx.action_by.is_action_lead IS 'Indicator of whether the affiliated person was the lead for the action';

COMMENT ON COLUMN odmx.action_by.role_description IS 'Foreign key identifier for a role played by a person in performing an action';

COMMENT ON TABLE odmx.action_by IS 'Affiliates people with actions and describes thier role in the action.';


/******************** Add Table: odmx.actions ************************/

/* Build Table Structure */
CREATE TABLE odmx.actions
(
	action_id INTEGER DEFAULT nextval('odmx.actions_action_id_seq'::regclass) NOT NULL,
	action_type_cv VARCHAR NOT NULL,
	action_name VARCHAR NULL,
	action_description VARCHAR NULL,
	method_id INTEGER NOT NULL,
	begin_date_time TIMESTAMP NOT NULL,
	begin_date_time_utc_offset INTEGER NOT NULL,
	end_date_time TIMESTAMP NULL,
	end_date_time_utc_offset INTEGER NULL,
	action_file_link VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.actions ADD CONSTRAINT pk_actions
	PRIMARY KEY (action_id);

/* Add Comments */
COMMENT ON COLUMN odmx.actions.action_id IS 'Primariy key identifier';

COMMENT ON COLUMN odmx.actions.action_type_cv IS 'CV term describing the type of action (e.g., observation, sample collection, sample analysis)';

COMMENT ON COLUMN odmx.actions.action_name IS 'A name for an Action or activity.';

COMMENT ON COLUMN odmx.actions.action_description IS 'Text that describes the action';

COMMENT ON COLUMN odmx.actions.method_id IS 'Foreign key identifier for the method used to complete the action';

COMMENT ON COLUMN odmx.actions.begin_date_time IS 'The date/time at which the action began';

COMMENT ON COLUMN odmx.actions.begin_date_time_utc_offset IS 'The UTCOffset for the BeginDateTime';

COMMENT ON COLUMN odmx.actions.end_date_time IS 'The date/time at which the action ended';

COMMENT ON COLUMN odmx.actions.end_date_time_utc_offset IS 'The UTCOffset of for the EndDateTime';

COMMENT ON COLUMN odmx.actions.action_file_link IS 'A URL or path to a file created by or used by the Action, such as instrument output or configuration.';

COMMENT ON TABLE odmx.actions IS 'Describes actions (e.g., observation, sample collection, sample analysis, field visits, field activities, etc.)';


/******************** Add Table: odmx.affiliations ************************/

/* Build Table Structure */
CREATE TABLE odmx.affiliations
(
	affiliation_id INTEGER DEFAULT nextval('odmx.affiliations_affiliation_id_seq'::regclass) NOT NULL,
	person_id INTEGER NOT NULL,
	organization_id INTEGER NULL,
	is_primary_organization_contact BOOL NULL,
	affiliation_start_date DATE NULL,
	affiliation_end_date DATE NULL,
	phone VARCHAR NULL,
	email VARCHAR NULL,
	address VARCHAR NULL,
	city VARCHAR NULL,
	state_province VARCHAR NULL,
	postal_code VARCHAR NULL,
	country VARCHAR NULL,
	person_link VARCHAR NULL,
	job_title VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.affiliations ADD CONSTRAINT pk_affiliations
	PRIMARY KEY (affiliation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.affiliations.affiliation_id IS 'Primay key identifier';

COMMENT ON COLUMN odmx.affiliations.person_id IS 'Foreign key identifer for a person';

COMMENT ON COLUMN odmx.affiliations.organization_id IS 'Foreigh key identifier for an organization';

COMMENT ON COLUMN odmx.affiliations.is_primary_organization_contact IS 'Boolean indication of whether the person is the organizations primary contact person';

COMMENT ON COLUMN odmx.affiliations.affiliation_start_date IS 'The date on which the person became affiliated with the organization';

COMMENT ON COLUMN odmx.affiliations.affiliation_end_date IS 'The date on which the person''s affiliation with the organization ended';

COMMENT ON COLUMN odmx.affiliations.phone IS 'The primary phone number of the person';

COMMENT ON COLUMN odmx.affiliations.email IS 'The primary email address of the person';

COMMENT ON COLUMN odmx.affiliations.address IS 'The primary mailing address of the person, including street, city, state, zip, and country';

COMMENT ON COLUMN odmx.affiliations.person_link IS 'A URL for the website for a person';

COMMENT ON TABLE odmx.affiliations IS 'Describes affiliations of people with organizations.';


/******************** Add Table: odmx.datasets ************************/

/* Build Table Structure */
CREATE TABLE odmx.datasets
(
	dataset_id INTEGER DEFAULT nextval('odmx.datasets_dataset_id_seq'::regclass) NOT NULL,
	dataset_uuid OID NOT NULL,
	dataset_type_cv VARCHAR NOT NULL,
	dataset_code VARCHAR NOT NULL,
	dataset_title VARCHAR NOT NULL,
	dataset_abstract VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.datasets ADD CONSTRAINT pk_datasets
	PRIMARY KEY (dataset_id);

/* Add Comments */
COMMENT ON COLUMN odmx.datasets.dataset_id IS 'Primary key identifier.';

COMMENT ON COLUMN odmx.datasets.dataset_uuid IS 'A universally unique identifier for the dataset.';

COMMENT ON COLUMN odmx.datasets.dataset_type_cv IS 'CV term(s) describing the Topic Category';

COMMENT ON COLUMN odmx.datasets.dataset_code IS 'A short text code identifying the dataset';

COMMENT ON COLUMN odmx.datasets.dataset_title IS 'A text title for the dataset';

COMMENT ON COLUMN odmx.datasets.dataset_abstract IS 'A text abstract describing the dataset';

COMMENT ON TABLE odmx.datasets IS 'Describes groupings of observation results that can be considered datasets';

/* Add Unique Constraints */
ALTER TABLE odmx.datasets
	ADD CONSTRAINT uc_dataset_code UNIQUE (dataset_code);


/******************** Add Table: odmx.datasets_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.datasets_results
(
	bridge_id INTEGER DEFAULT nextval('odmx.datasets_results_bridge_id_seq'::regclass) NOT NULL,
	dataset_id INTEGER NOT NULL,
	result_id BIGINT NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.datasets_results ADD CONSTRAINT pk_datasets_results
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.datasets_results.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.datasets_results.dataset_id IS 'Foreign key identifier of the DataSet';

COMMENT ON COLUMN odmx.datasets_results.result_id IS 'Foreign key identifier of the Result';

COMMENT ON TABLE odmx.datasets_results IS 'Lists the Results that are grouped into a DataSet';


/******************** Add Table: odmx.external_connection ************************/

/* Build Table Structure */
CREATE TABLE odmx.external_connection
(
	connection_id INTEGER DEFAULT nextval('odmx.external_connection_connection_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NULL,
	equipment_id INTEGER NULL,
	action_id INTEGER NULL,
	description VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.external_connection ADD CONSTRAINT pk_external_connection
	PRIMARY KEY (connection_id);

/* Add Comments */
COMMENT ON COLUMN odmx.external_connection.description IS 'Free form description';

COMMENT ON TABLE odmx.external_connection IS 'a table which allows us to link Actions, People and Sampling Features to external data and events';


/******************** Add Table: odmx.feature_actions ************************/

/* Build Table Structure */
CREATE TABLE odmx.feature_actions
(
	feature_action_id INTEGER DEFAULT nextval('odmx.feature_actions_feature_action_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	action_id INTEGER NOT NULL,
	related_features_relation_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.feature_actions ADD CONSTRAINT pk_feature_actions
	PRIMARY KEY (feature_action_id);

/* Add Comments */
COMMENT ON COLUMN odmx.feature_actions.feature_action_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.feature_actions.sampling_feature_id IS 'Foreign key identifier for the SamplingFeature on which or at which the Action was performed';

COMMENT ON COLUMN odmx.feature_actions.action_id IS 'Foreign key identifier of the Action that was performed';

COMMENT ON COLUMN odmx.feature_actions.related_features_relation_id IS 'Foreign key identifier for  the relationship that identifies the parent SamplingFeature. This is useful when the Action is used to create a new SamplingFeature from a parent.';


/******************** Add Table: odmx.image_equipment_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.image_equipment_bridge
(
	bridge_id INTEGER DEFAULT nextval('odmx.image_equipment_bridge_bridge_id_seq'::regclass) NOT NULL,
	equipment_id INTEGER NOT NULL,
	image_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.image_equipment_bridge ADD CONSTRAINT pk_image_equipment_bridge
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.image_equipment_bridge IS 'Bridge between equipment and bridge';


/******************** Add Table: odmx.image_persons_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.image_persons_bridge
(
	bridge_id INTEGER DEFAULT nextval('odmx.image_persons_bridge_bridge_id_seq'::regclass) NOT NULL,
	person_id INTEGER NOT NULL,
	image_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.image_persons_bridge ADD CONSTRAINT pk_image_persons_bridge
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.image_persons_bridge IS 'Bridge table linking images to persons';


/******************** Add Table: odmx.image_sampling_feature_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.image_sampling_feature_bridge
(
	bridge_id INTEGER DEFAULT nextval('odmx.image_sampling_feature_bridge_bridge_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	image_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.image_sampling_feature_bridge ADD CONSTRAINT pk_image_sampling_feature_bridge
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.image_sampling_feature_bridge IS 'Bridge table between sampling features and Images';


/******************** Add Table: odmx.images ************************/

/* Build Table Structure */
CREATE TABLE odmx.images
(
	image_id INTEGER DEFAULT nextval('odmx.images_image_id_seq'::regclass) NOT NULL,
	utc_date_time_taken BIGINT NULL,
	image_description VARCHAR NULL,
	photo_storage_name VARCHAR NOT NULL,
	photo_storage_path VARCHAR NOT NULL,
	photo_storage_type VARCHAR NOT NULL,
	pitch FLOAT NULL,
	roll FLOAT NULL,
	yaw FLOAT NULL,
	altitude_taken FLOAT NULL,
	image_width INTEGER NULL,
	image_height INTEGER NULL,
	exposure_time FLOAT NULL,
	aperture FLOAT NULL,
	flash_used BOOL NULL,
	focal_length FLOAT NULL,
	iso_speed INTEGER NULL,
	metering_mode VARCHAR NULL,
	sensor VARCHAR NULL,
	exposure_mode VARCHAR NULL,
	color_space VARCHAR NULL,
	white_balance VARCHAR NULL,
	exposure_bias FLOAT NULL,
	max_aperture_value FLOAT NULL,
	latitude FLOAT NULL,
	longitude FLOAT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.images ADD CONSTRAINT pk_images
	PRIMARY KEY (image_id);

/* Add Comments */
COMMENT ON COLUMN odmx.images.latitude IS 'Latitude of the image. Can be Null';

COMMENT ON COLUMN odmx.images.longitude IS 'Longitude of the image. Can be null';

COMMENT ON TABLE odmx.images IS 'A table to store image data';


/******************** Add Table: odmx.instrument_actions ************************/

/* Build Table Structure */
CREATE TABLE odmx.instrument_actions
(
	instrument_action_id INTEGER DEFAULT nextval('odmx.instrument_actions_instrument_action_id_seq'::regclass) NOT NULL,
	equipment_id INTEGER NULL,
	action_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.instrument_actions ADD CONSTRAINT pk_instrument_actions
	PRIMARY KEY (instrument_action_id);


/******************** Add Table: odmx.methods ************************/

/* Build Table Structure */
CREATE TABLE odmx.methods
(
	method_id INTEGER DEFAULT nextval('odmx.methods_method_id_seq'::regclass) NOT NULL,
	method_type_cv VARCHAR NOT NULL,
	method_code VARCHAR NOT NULL,
	method_name VARCHAR NOT NULL,
	method_description VARCHAR NULL,
	method_link VARCHAR NULL,
	organization_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.methods ADD CONSTRAINT pk_methods
	PRIMARY KEY (method_id);

/* Add Comments */
COMMENT ON COLUMN odmx.methods.method_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.methods.method_type_cv IS 'CV term describing the type of method (e.g., sample collection, laboratory analytical, field, sample prepratation, etc.)';

COMMENT ON COLUMN odmx.methods.method_code IS 'A text code identifiying the method (e.g., EPA 650.2)';

COMMENT ON COLUMN odmx.methods.method_name IS 'Full text name of the method';

COMMENT ON COLUMN odmx.methods.method_description IS 'Full text description of the method';

COMMENT ON COLUMN odmx.methods.method_link IS 'A URL to a full description of the method';

COMMENT ON COLUMN odmx.methods.organization_id IS 'Foreign key identifier for the Organization with which the method is affiliated';

COMMENT ON TABLE odmx.methods IS 'Describes methods used to perform actions recorded in ODM (e.g., observation methods, sample analysis methods, sample preparation methods, etc.)';

/* Add Unique Constraints */
ALTER TABLE odmx.methods
	ADD CONSTRAINT uc_method_code UNIQUE (method_code);


/******************** Add Table: odmx.organization_sampling_feature_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.organization_sampling_feature_bridge
(
	bridge_id INTEGER DEFAULT nextval('odmx.organization_sampling_feature_bridge_bridge_id_seq'::regclass) NOT NULL,
	organization_id INTEGER NOT NULL,
	sampling_feature_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.organization_sampling_feature_bridge ADD CONSTRAINT pk_organization_sampling_feature_bridge
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.organization_sampling_feature_bridge IS 'Bridge table between organizations and sampling features';


/******************** Add Table: odmx.organizations ************************/

/* Build Table Structure */
CREATE TABLE odmx.organizations
(
	organization_id INTEGER DEFAULT nextval('odmx.organizations_organization_id_seq'::regclass) NOT NULL,
	organization_type_cv VARCHAR NOT NULL,
	organization_code VARCHAR NOT NULL,
	organization_name VARCHAR NOT NULL,
	organization_description VARCHAR NULL,
	organization_link VARCHAR NULL,
	parent_organization_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.organizations ADD CONSTRAINT pk_organizations
	PRIMARY KEY (organization_id);

/* Add Comments */
COMMENT ON COLUMN odmx.organizations.organization_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.organizations.organization_type_cv IS 'CV term defining the type of organization (e.g., government agency, university, etc.)';

COMMENT ON COLUMN odmx.organizations.organization_code IS 'A text code identifying the Organization (e.g., USGS)';

COMMENT ON COLUMN odmx.organizations.organization_name IS 'The full text name of the organization';

COMMENT ON COLUMN odmx.organizations.organization_description IS 'A text description of the organization';

COMMENT ON COLUMN odmx.organizations.organization_link IS 'A URL for the organization''s website';

COMMENT ON COLUMN odmx.organizations.parent_organization_id IS 'Foreign key of the parent organization of the current organization';

COMMENT ON TABLE odmx.organizations IS 'Describes organizations - as in research groups, companies, universities, etc.';

/* Add Unique Constraints */
ALTER TABLE odmx.organizations
	ADD CONSTRAINT uc_organization_code UNIQUE (organization_code);


/******************** Add Table: odmx.persons ************************/

/* Build Table Structure */
CREATE TABLE odmx.persons
(
	person_id INTEGER DEFAULT nextval('odmx.people_person_id_seq'::regclass) NOT NULL,
	person_first_name VARCHAR NOT NULL,
	person_middle_name VARCHAR NULL,
	person_last_name VARCHAR NOT NULL,
	orc_id VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.persons ADD CONSTRAINT pk_persons
	PRIMARY KEY (person_id);

/* Add Comments */
COMMENT ON COLUMN odmx.persons.person_id IS 'Primary key identifier.';

COMMENT ON COLUMN odmx.persons.person_first_name IS 'First name of the person';

COMMENT ON COLUMN odmx.persons.person_middle_name IS 'Middle name of the person';

COMMENT ON COLUMN odmx.persons.person_last_name IS 'Last name of the person';

COMMENT ON COLUMN odmx.persons.orc_id IS 'The unique ORCID associated with the person (16 digit)';

COMMENT ON TABLE odmx.persons IS 'Describes people.';


/******************** Add Table: odmx.processing_levels ************************/

/* Build Table Structure */
CREATE TABLE odmx.processing_levels
(
	processing_level_id INTEGER DEFAULT nextval('odmx.processing_levels_processing_level_id_seq'::regclass) NOT NULL,
	processing_level_code VARCHAR NOT NULL,
	definition VARCHAR NULL,
	explanation VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.processing_levels ADD CONSTRAINT pk_processing_levels
	PRIMARY KEY (processing_level_id);

/* Add Comments */
COMMENT ON COLUMN odmx.processing_levels.processing_level_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.processing_levels.processing_level_code IS 'Text code identifying the level of processing the Result has been subject to';

COMMENT ON COLUMN odmx.processing_levels.definition IS 'Text defintion of the processing level';

COMMENT ON COLUMN odmx.processing_levels.explanation IS 'Text explanation of the processing level';

COMMENT ON TABLE odmx.processing_levels IS 'Describes the processing level of Results';

/* Add Unique Constraints */
ALTER TABLE odmx.processing_levels
	ADD CONSTRAINT uc_processing_level_code UNIQUE (processing_level_code);


/******************** Add Table: odmx.related_actions ************************/

/* Build Table Structure */
CREATE TABLE odmx.related_actions
(
	relation_id INTEGER DEFAULT nextval('odmx.related_actions_relation_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	related_action_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.related_actions ADD CONSTRAINT pk_related_actions
	PRIMARY KEY (relation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.related_actions.relation_id IS 'Primary key for a relationship table (i.e. named "Related...").';

COMMENT ON COLUMN odmx.related_actions.action_id IS 'Foreign key identifier of the Action';

COMMENT ON COLUMN odmx.related_actions.relationship_type_cv IS 'Text description of the relationship between two Actions';

COMMENT ON COLUMN odmx.related_actions.related_action_id IS 'Foreign key identifier for a Action related to the Action identified by ActionID';

COMMENT ON TABLE odmx.related_actions IS 'Describes Actions that are related to one another.';


/******************** Add Table: odmx.results ************************/

/* Build Table Structure */
CREATE TABLE odmx.results
(
	result_id BIGINT DEFAULT nextval('odmx.results_result_id_seq'::regclass) NOT NULL,
	result_uuid VARCHAR(36) NOT NULL,
	feature_action_id INTEGER NOT NULL,
	result_type_cv VARCHAR NOT NULL,
	variable_id INTEGER NOT NULL,
	units_id INTEGER NOT NULL,
	processing_level_id INTEGER NOT NULL,
	result_date_time TIMESTAMP NULL,
	result_date_time_utc_offset BIGINT NULL,
	valid_date_time TIMESTAMP NULL,
	valid_date_time_utc_offset BIGINT NULL,
	status_cv VARCHAR NULL,
	value_count INTEGER NOT NULL,
	no_data_value DOUBLE PRECISION NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.results ADD CONSTRAINT pk_results
	PRIMARY KEY (result_id);

/* Add Comments */
COMMENT ON COLUMN odmx.results.result_id IS 'Primary key identifier.';

COMMENT ON COLUMN odmx.results.result_uuid IS 'A universally unique identifier for the Result';

COMMENT ON COLUMN odmx.results.feature_action_id IS 'Foreign key identifier for the combinaton of SamplingFeature and Action that created the Result';

COMMENT ON COLUMN odmx.results.result_type_cv IS 'CV term describing the result type (e.g., time series, measurement, etc.)';

COMMENT ON COLUMN odmx.results.variable_id IS 'Foreign key identifier for the Variable of the result';

COMMENT ON COLUMN odmx.results.units_id IS 'Foreign key identifier for the Units of the result';

COMMENT ON COLUMN odmx.results.processing_level_id IS 'Foreign key identifier for the ProcessingLevel of the result';

COMMENT ON COLUMN odmx.results.result_date_time IS 'Date and time at which the result became available (could be used as analysis time for samples)';

COMMENT ON COLUMN odmx.results.result_date_time_utc_offset IS 'UTDCOffset of ResultDateTime';

COMMENT ON COLUMN odmx.results.valid_date_time IS 'Date and time for which the result is valid (e.g., for a forecast result).  Should probably be expressed as a duration';

COMMENT ON COLUMN odmx.results.valid_date_time_utc_offset IS 'UTCOffset of ValidDateTime';

COMMENT ON COLUMN odmx.results.status_cv IS 'Status of the result (e.g., finished, ongoing, etc.)';

COMMENT ON COLUMN odmx.results.value_count IS 'Number of data values contained within the result. For instance we could have a timeseries data with 1000s of results or a chemical analysis with a sd';

COMMENT ON COLUMN odmx.results.no_data_value IS 'A numeric value indicating no data.';

COMMENT ON TABLE odmx.results IS 'Describes the results of observation actions (e.g., groups of one or more numeric data values that result from an observation action)';

/* Add Indexes */
CREATE UNIQUE INDEX results_result_uuid_idx ON odmx.results (result_uuid);


/******************** Add Table: odmx.sampling_features ************************/

/* Build Table Structure */
CREATE TABLE odmx.sampling_features
(
	sampling_feature_id INTEGER DEFAULT nextval('odmx.sampling_features_sampling_feature_id_seq'::regclass) NOT NULL,
	sampling_feature_uuid VARCHAR(36) NOT NULL,
	sampling_feature_type_cv VARCHAR NOT NULL,
	sampling_feature_code VARCHAR NOT NULL,
	sampling_feature_name VARCHAR NULL,
	sampling_feature_description VARCHAR NULL,
	sampling_feature_geotype_cv VARCHAR NULL,
	feature_geometry GEOMETRY NULL,
	feature_geometry_wkt VARCHAR(8000) NULL,
	elevation_m FLOAT NULL,
	elevation_datum_cv VARCHAR NULL,
	latitude FLOAT NULL,
	longitude FLOAT NULL,
	epsg VARCHAR(20) NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.sampling_features ADD CONSTRAINT pk_sampling_features
	PRIMARY KEY (sampling_feature_id);

/* Add Comments */
COMMENT ON COLUMN odmx.sampling_features.sampling_feature_id IS 'Primary key identifier.';

COMMENT ON COLUMN odmx.sampling_features.sampling_feature_uuid IS 'A universally unique identifier for the sampling feature.';

COMMENT ON COLUMN odmx.sampling_features.sampling_feature_type_cv IS 'CV term descripting the type of sampling feature.';

COMMENT ON COLUMN odmx.sampling_features.sampling_feature_code IS 'A short but meaningful text identifier for the sampling feature.';

COMMENT ON COLUMN odmx.sampling_features.sampling_feature_name IS 'Sampling Feature name (free text).';

COMMENT ON COLUMN odmx.sampling_features.sampling_feature_description IS 'Text describing the sampling feature.';

COMMENT ON COLUMN odmx.sampling_features.sampling_feature_geotype_cv IS 'Dimensionality of SamplingFeature: point2d, line2d, etc.';

COMMENT ON COLUMN odmx.sampling_features.feature_geometry IS 'The location geometry of the sampling feature on the Earth expressed using a geometry data type. Can be a Point, Curve (profile, trajectory, etc), Surface (flat polygons, etc) or Solid/Volume (although often limited to 2D geometries). ';

COMMENT ON COLUMN odmx.sampling_features.feature_geometry_wkt IS 'The location geometry of the sampling feature on the Earth expressed as well known text (WKT). Can be a Point, Curve (profile, trajectory, etc.), Surface (flat polygons, etc.), or Solid/Volume (although often limited to 2D geometries).';

COMMENT ON COLUMN odmx.sampling_features.elevation_m IS 'The elevation of the sampling feature in meters, or in the case of Specimen, the elevation from where the SamplingFeature.Specimen was collected';

COMMENT ON COLUMN odmx.sampling_features.elevation_datum_cv IS 'The code for the vertical geodetic datum that specifies the zero point for the Sampling Feature Elevation.';

COMMENT ON COLUMN odmx.sampling_features.latitude IS 'Latitude of centroid of SamplingFeature';

COMMENT ON COLUMN odmx.sampling_features.longitude IS 'Longitude of centroid of SamplingFeature';

COMMENT ON COLUMN odmx.sampling_features.epsg IS 'EPSG of the Spatial Reference System that describes the latitude and longitude coordinates. This refers to codes obtained from http://www.epsg.org/ and maintained in epsg db';

COMMENT ON TABLE odmx.sampling_features IS 'Describes the sampling features on which observations are made.';

/* Add Unique Constraints */
ALTER TABLE odmx.sampling_features
	ADD CONSTRAINT uc_sampling_feature_code UNIQUE (sampling_feature_code);

/* Add Indexes */
CREATE UNIQUE INDEX sampling_features_sampling_feature_uuid_idx ON odmx.sampling_features (sampling_feature_uuid);


/******************** Add Table: odmx.sampling_features_aliases ************************/

/* Build Table Structure */
CREATE TABLE odmx.sampling_features_aliases
(
	sampling_features_aliases_id INTEGER DEFAULT nextval('odmx.sampling_features_aliases_sampling_features_aliases_id_seq'::regclass) NOT NULL,
	alias VARCHAR NOT NULL,
	alias_category VARCHAR NULL,
	sampling_feature_id INTEGER NOT NULL,
	display_priority INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.sampling_features_aliases ADD CONSTRAINT pk_sampling_features_aliases
	PRIMARY KEY (sampling_features_aliases_id);


/******************** Add Table: odmx.taxonomic_classifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.taxonomic_classifiers
(
	taxonomic_classifier_id INTEGER DEFAULT nextval('odmx.taxonomic_classifiers_taxonomic_classifier_id_seq'::regclass) NOT NULL,
	taxonomic_classifier_term VARCHAR NOT NULL,
	taxonomic_classifier_name VARCHAR NOT NULL,
	taxonomic_classifier_alternate_name VARCHAR NULL,
	taxonomic_classifier_definition VARCHAR NULL,
	taxonomic_classifier_domain_cv VARCHAR NULL,
	taxonomic_classifier_source_uri VARCHAR(1000) NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.taxonomic_classifiers ADD CONSTRAINT pk_taxonomic_classifiers
	PRIMARY KEY (taxonomic_classifier_id);

/* Add Comments */
COMMENT ON COLUMN odmx.taxonomic_classifiers.taxonomic_classifier_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.taxonomic_classifiers.taxonomic_classifier_term IS 'Classifier term identifying the object of the variable, such as a species, typically from a biological, chemical, geological or other kind of taxonomy and often associated with an External Idenfication System.';

COMMENT ON COLUMN odmx.taxonomic_classifiers.taxonomic_classifier_name IS 'Classifier name identifying the object of the variable, such as a species, typically from a biological, chemical, geological or other kind of taxonomy and often associated with an External Idenfication System.';

COMMENT ON COLUMN odmx.taxonomic_classifiers.taxonomic_classifier_alternate_name IS 'A common or alternate name for a classification.';

COMMENT ON COLUMN odmx.taxonomic_classifiers.taxonomic_classifier_definition IS 'Definition of the Taxonomic Classifier term.';

COMMENT ON COLUMN odmx.taxonomic_classifiers.taxonomic_classifier_domain_cv IS 'Controlled Vocabulary term for the domain of the Taxonomic Classifier system, which is often associated with an External Idenfication System. ';

COMMENT ON COLUMN odmx.taxonomic_classifiers.taxonomic_classifier_source_uri IS 'A URI which points to the source classification system from which the Taxonomic Classifier term was derived. ';


/******************** Add Table: odmx.variable_mapping ************************/

/* Build Table Structure */
CREATE TABLE odmx.variable_mapping
(
	variable_mapping_id INTEGER DEFAULT nextval('odmx.variable_mapping_variable_mapping_id_seq'::regclass) NOT NULL,
	variable_id INTEGER NULL,
	project_variable_name VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.variable_mapping ADD CONSTRAINT pk_variable_mapping
	PRIMARY KEY (variable_mapping_id);


/******************** Add Table: odmx.variables ************************/

/* Build Table Structure */
CREATE TABLE odmx.variables
(
	variable_id INTEGER DEFAULT nextval('odmx.variables_variable_id_seq'::regclass) NOT NULL,
	variable_term VARCHAR NOT NULL,
	variable_name VARCHAR NOT NULL,
	variable_definition VARCHAR NOT NULL,
	variable_domain_cv VARCHAR NULL,
	sampled_medium_cv VARCHAR NULL,
	quantity_kind_cv VARCHAR NULL,
	variable_source_uri VARCHAR(1000) NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.variables ADD CONSTRAINT pk_variables
	PRIMARY KEY (variable_id);

/* Add Comments */
COMMENT ON COLUMN odmx.variables.variable_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.variables.variable_name IS 'The Human Readable name for the parameter';

COMMENT ON COLUMN odmx.variables.variable_definition IS 'Text definition of the variable';

COMMENT ON COLUMN odmx.variables.variable_domain_cv IS 'CV for the Variable Domain';

COMMENT ON COLUMN odmx.variables.sampled_medium_cv IS 'Controlled vocabulary for sampled Medium';

COMMENT ON COLUMN odmx.variables.quantity_kind_cv IS 'Controlled vocabulary for the type of variable';

COMMENT ON COLUMN odmx.variables.variable_source_uri IS 'Link to additional information on the variable';

COMMENT ON TABLE odmx.variables IS 'Stores information about measured properties.';

/* Add Unique Constraints */
ALTER TABLE odmx.variables
	ADD CONSTRAINT uc_variable_code UNIQUE (variable_source_uri);


/******************** Add Table: odmx.variables_taxonomic_classifiers_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.variables_taxonomic_classifiers_bridge
(
	variables_taxonomic_classifiers_bridge_id INTEGER DEFAULT nextval('odmx.variables_taxonomic_classifiers_bridge_variables_taxonomic_classifiers_bridge_id_seq'::regclass) NOT NULL,
	taxonomic_classifier_id INTEGER NOT NULL,
	variable_id INTEGER NOT NULL,
	relation_classification VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.variables_taxonomic_classifiers_bridge ADD CONSTRAINT pk_variables_taxonomic_classifiers_bridge
	PRIMARY KEY (variables_taxonomic_classifiers_bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.variables_taxonomic_classifiers_bridge IS 'Bridge table between Variables and Taxonomic Classifiers';


/******************** Add Table: odmx.data_quality ************************/

/* Build Table Structure */
CREATE TABLE odmx.data_quality
(
	data_quality_id INTEGER NOT NULL,
	data_quality_type_cv VARCHAR NOT NULL,
	data_quality_code VARCHAR NOT NULL,
	data_quality_value FLOAT NULL,
	data_quality_value_units_id INTEGER NULL,
	data_quality_description VARCHAR NULL,
	data_quality_link VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.data_quality ADD CONSTRAINT pk_data_quality
	PRIMARY KEY (data_quality_id);

/* Add Comments */
COMMENT ON COLUMN odmx.data_quality.data_quality_id IS 'Primary Key for DataQuality entity';

COMMENT ON COLUMN odmx.data_quality.data_quality_type_cv IS '	i.e. Precision_2sigma, MethodDetectionLimit, ReportingLevel, 95%ConfidenceNoFalsePositives.';

COMMENT ON COLUMN odmx.data_quality.data_quality_code IS 'Code for DataQualityType';

COMMENT ON COLUMN odmx.data_quality.data_quality_value IS 'Numeric value of the DataQuality';

COMMENT ON COLUMN odmx.data_quality.data_quality_value_units_id IS 'Units for the DataQualityValue';

COMMENT ON COLUMN odmx.data_quality.data_quality_description IS 'Text description of the DataQuality metadata';

COMMENT ON COLUMN odmx.data_quality.data_quality_link IS 'URL or path to a file or other resource supporting the DataQuality metadata';

/* Add Unique Constraints */
ALTER TABLE odmx.data_quality
	ADD CONSTRAINT uc_data_quality_code UNIQUE (data_quality_code);


/******************** Add Table: odmx.reference_material_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.reference_material_values
(
	reference_material_value_id INTEGER DEFAULT nextval('odmx.reference_material_values_reference_material_value_id_seq'::regclass) NOT NULL,
	reference_material_id INTEGER NOT NULL,
	reference_material_value FLOAT NOT NULL,
	reference_material_accuracy FLOAT NULL,
	variable_id INTEGER NOT NULL,
	units_id INTEGER NOT NULL,
	citation_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.reference_material_values ADD CONSTRAINT pk_reference_material_values
	PRIMARY KEY (reference_material_value_id);

/* Add Comments */
COMMENT ON COLUMN odmx.reference_material_values.reference_material_value_id IS 'The primary key for ReferenceMaterialValues';

COMMENT ON COLUMN odmx.reference_material_values.reference_material_id IS 'A foreign key to ReferenceMaterials';

COMMENT ON COLUMN odmx.reference_material_values.reference_material_value IS 'The established property value for the ReferenceMaterial.';

COMMENT ON COLUMN odmx.reference_material_values.reference_material_accuracy IS 'The established accuracy of the property value for the ReferenceMaterial, in the same units as the value.';

COMMENT ON COLUMN odmx.reference_material_values.variable_id IS 'The property that is quantified by the ReferenceMaterialValue';

COMMENT ON COLUMN odmx.reference_material_values.units_id IS 'The units for the ReferenceMaterialValue and ReferenceMaterialAccuracy';

COMMENT ON COLUMN odmx.reference_material_values.citation_id IS 'The attribution for source that established the ReferenceMaterialValue and ReferenceMaterialAccuracy';

COMMENT ON TABLE odmx.reference_material_values IS 'accepted property values for a Reference Material, which can be certified by an agency or vendor, established in the literature by the research community, or developed for "in house" use only by a laboratory.';


/******************** Add Table: odmx.reference_materials ************************/

/* Build Table Structure */
CREATE TABLE odmx.reference_materials
(
	reference_material_id INTEGER DEFAULT nextval('odmx.reference_materials_reference_material_id_seq'::regclass) NOT NULL,
	reference_material_medium_cv VARCHAR NOT NULL,
	reference_material_organization_id INTEGER NOT NULL,
	reference_material_code VARCHAR NOT NULL,
	reference_material_lot_code VARCHAR NULL,
	reference_material_purchase_date TIMESTAMP NULL,
	reference_material_expiration_date TIMESTAMP NULL,
	reference_material_certificate_link VARCHAR NULL,
	sampling_feature_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.reference_materials ADD CONSTRAINT pk_reference_materials
	PRIMARY KEY (reference_material_id);

/* Add Comments */
COMMENT ON COLUMN odmx.reference_materials.reference_material_id IS 'The primary key to the Reference Material used to calibrate an instrument, assess a measurement method, or assign values to unknown specimens';

COMMENT ON COLUMN odmx.reference_materials.reference_material_medium_cv IS 'The medium of a Reference Material, from the same CV as SpecimenMediumCV. Examples include: water, sediment, air, tissue, etc.';

COMMENT ON COLUMN odmx.reference_materials.reference_material_organization_id IS 'A foreign key to the Organization that manufactured and established property values for the ReferenceMaterial';

COMMENT ON COLUMN odmx.reference_materials.reference_material_code IS 'A code or short name used to identify the reference material.';

COMMENT ON COLUMN odmx.reference_materials.reference_material_lot_code IS 'The lot, or manufactured batch, of the reference material, that is often associated with a certified set of property values';

COMMENT ON COLUMN odmx.reference_materials.reference_material_purchase_date IS 'The purchase date of a reference material, when applicable';

COMMENT ON COLUMN odmx.reference_materials.reference_material_expiration_date IS 'The expiration date of a reference material, when applicable';

COMMENT ON COLUMN odmx.reference_materials.reference_material_certificate_link IS 'A URL or file path to the Certificate that provides established property values for the given lot number.';

COMMENT ON COLUMN odmx.reference_materials.sampling_feature_id IS 'A foreign key to SamplingFeatures.  Only required when the ReferenceMaterial is Analyzed as if it were an unknown specimen.';

COMMENT ON TABLE odmx.reference_materials IS 'Describes materials that are used for the calibration of an instrument, the assessment of a measurement method, or for assigning values to unknown specimens.';

/* Add Unique Constraints */
ALTER TABLE odmx.reference_materials
	ADD CONSTRAINT uc_reference_material_code UNIQUE (reference_material_code);


/******************** Add Table: odmx.result_normalization_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.result_normalization_values
(
	result_normalization_values_id BIGINT DEFAULT nextval('odmx.result_normalization_values_result_normalization_values_id_seq'::regclass) NOT NULL,
	normalized_by_reference_material_value_id INTEGER NOT NULL,
	result_id BIGINT NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.result_normalization_values ADD CONSTRAINT pk_result_normalization_values
	PRIMARY KEY (result_normalization_values_id);

/* Add Comments */
COMMENT ON COLUMN odmx.result_normalization_values.result_id IS 'Unique Identifier';

COMMENT ON TABLE odmx.result_normalization_values IS 'Extends the Results table with a foreign key to NormalizationReferenceMaterialValues when the optional DataQuality schema is implemented.  In a database implementation, we would not implement this as a separate table from Results.';


/******************** Add Table: odmx.results_data_quality ************************/

/* Build Table Structure */
CREATE TABLE odmx.results_data_quality
(
	bridge_id INTEGER DEFAULT nextval('odmx.results_data_quality_bridge_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_quality_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.results_data_quality ADD CONSTRAINT pk_results_data_quality
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.results_data_quality.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.results_data_quality.result_id IS 'Foreign key identifier of the Result';

COMMENT ON COLUMN odmx.results_data_quality.data_quality_id IS 'Foreign key identifier of the DataQuality entity.';


/******************** Add Table: odmx.calibration_actions ************************/

/* Build Table Structure */
CREATE TABLE odmx.calibration_actions
(
	action_id INTEGER NOT NULL,
	calibration_check_value FLOAT NULL,
	instrument_output_variable_id INTEGER NOT NULL,
	calibration_equation VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.calibration_actions ADD CONSTRAINT pk_calibration_actions
	PRIMARY KEY (action_id);

/* Add Comments */
COMMENT ON TABLE odmx.calibration_actions IS 'Information about calibration Actions';


/******************** Add Table: odmx.calibration_reference_equipment ************************/

/* Build Table Structure */
CREATE TABLE odmx.calibration_reference_equipment
(
	bridge_id INTEGER DEFAULT nextval('odmx.calibration_reference_equipment_bridge_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	equipment_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.calibration_reference_equipment ADD CONSTRAINT pk_calibration_reference_equipment
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.calibration_reference_equipment.bridge_id IS 'Primary key identifier ';

COMMENT ON COLUMN odmx.calibration_reference_equipment.action_id IS 'Foreign key identifier of the Calibration Action';

COMMENT ON COLUMN odmx.calibration_reference_equipment.equipment_id IS 'Foreign key identifier of the Equipment used in the Calibration Action';

COMMENT ON TABLE odmx.calibration_reference_equipment IS 'Information about equipment used as referenece for a calibration';


/******************** Add Table: odmx.calibration_standards ************************/

/* Build Table Structure */
CREATE TABLE odmx.calibration_standards
(
	bridge_id INTEGER DEFAULT nextval('odmx.calibration_standards_bridge_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	reference_material_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.calibration_standards ADD CONSTRAINT pk_calibration_standards
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.calibration_standards.bridge_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.calibration_standards.action_id IS 'Foreign key identifier of the calibration Action';

COMMENT ON COLUMN odmx.calibration_standards.reference_material_id IS 'Foreign key identifier of the ReferenceMaterial used in the calibration';

COMMENT ON TABLE odmx.calibration_standards IS 'Bridge table linking field calibrations to the reference materials used';


/******************** Add Table: odmx.datalogger_file_columns ************************/

/* Build Table Structure */
CREATE TABLE odmx.datalogger_file_columns
(
	datalogger_file_column_id INTEGER DEFAULT nextval('odmx.datalogger_file_columns_datalogger_file_column_id_seq'::regclass) NOT NULL,
	result_id BIGINT NULL,
	datalogger_file_id INTEGER NOT NULL,
	instrument_output_quantity_kind_id INTEGER NOT NULL,
	column_label VARCHAR NOT NULL,
	column_description VARCHAR NULL,
	measurement_equation VARCHAR NULL,
	scan_interval FLOAT NULL,
	scan_interval_units_id INTEGER NULL,
	recording_interval FLOAT NULL,
	recording_interval_units_id INTEGER NULL,
	aggregation_statistic_cv VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.datalogger_file_columns ADD CONSTRAINT pk_datalogger_file_columns
	PRIMARY KEY (datalogger_file_column_id);

/* Add Comments */
COMMENT ON COLUMN odmx.datalogger_file_columns.datalogger_file_column_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.datalogger_file_columns.result_id IS 'Foreign key identifier for the Result associated with the datalogger file column';

COMMENT ON COLUMN odmx.datalogger_file_columns.datalogger_file_id IS 'Foreign key identifier for the datalogger file in which the column appears';

COMMENT ON COLUMN odmx.datalogger_file_columns.instrument_output_quantity_kind_id IS 'Foreign key identifier for the instrument output variable recorded in the column';

COMMENT ON COLUMN odmx.datalogger_file_columns.column_label IS 'Text column label';

COMMENT ON COLUMN odmx.datalogger_file_columns.column_description IS 'Text description of the contents of the column';

COMMENT ON COLUMN odmx.datalogger_file_columns.measurement_equation IS 'Text specificaiton of the equation used to calculate the column contents';

COMMENT ON COLUMN odmx.datalogger_file_columns.scan_interval IS 'Scanning time interval used in the datalogger program';

COMMENT ON COLUMN odmx.datalogger_file_columns.scan_interval_units_id IS 'Foreign key identifier for the Units of the scanning time interval';

COMMENT ON COLUMN odmx.datalogger_file_columns.recording_interval IS 'Recording time interval used in the datalogger program';

COMMENT ON COLUMN odmx.datalogger_file_columns.recording_interval_units_id IS 'Foreign key identifier for the Units of the recording time interval';

COMMENT ON TABLE odmx.datalogger_file_columns IS 'Information about columns in datalogger files';


/******************** Add Table: odmx.datalogger_files ************************/

/* Build Table Structure */
CREATE TABLE odmx.datalogger_files
(
	datalogger_file_id INTEGER DEFAULT nextval('odmx.datalogger_files_datalogger_file_id_seq'::regclass) NOT NULL,
	program_id INTEGER NOT NULL,
	datalogger_file_name VARCHAR NOT NULL,
	datalogger_file_description VARCHAR NULL,
	datalogger_file_link VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.datalogger_files ADD CONSTRAINT pk_datalogger_files
	PRIMARY KEY (datalogger_file_id);

/* Add Comments */
COMMENT ON COLUMN odmx.datalogger_files.datalogger_file_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.datalogger_files.program_id IS 'Foreign key identifier of the datalogger program that created the file';

COMMENT ON COLUMN odmx.datalogger_files.datalogger_file_name IS 'Text name of the datalogger file';

COMMENT ON COLUMN odmx.datalogger_files.datalogger_file_description IS 'Text description of the datalogger file';

COMMENT ON COLUMN odmx.datalogger_files.datalogger_file_link IS 'URL or file path to the datalogger file';

COMMENT ON TABLE odmx.datalogger_files IS 'Destibes datalogger files created by a deployment action';


/******************** Add Table: odmx.datalogger_program_files ************************/

/* Build Table Structure */
CREATE TABLE odmx.datalogger_program_files
(
	program_id INTEGER DEFAULT nextval('odmx.datalogger_program_files_program_id_seq'::regclass) NOT NULL,
	affiliation_id INTEGER NOT NULL,
	program_name VARCHAR NOT NULL,
	program_description VARCHAR NULL,
	program_version VARCHAR NULL,
	program_file_link VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.datalogger_program_files ADD CONSTRAINT pk_datalogger_program_files
	PRIMARY KEY (program_id);

/* Add Comments */
COMMENT ON COLUMN odmx.datalogger_program_files.program_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.datalogger_program_files.affiliation_id IS 'Foreign key identifier of the affiliation for the person that created the program';

COMMENT ON COLUMN odmx.datalogger_program_files.program_name IS 'Text name of the datalogger program file';

COMMENT ON COLUMN odmx.datalogger_program_files.program_description IS 'Text description of the datalogger program file';

COMMENT ON COLUMN odmx.datalogger_program_files.program_version IS 'Text description of the version of the datalogger program file';

COMMENT ON COLUMN odmx.datalogger_program_files.program_file_link IS 'URL or file path to the datalogger program file';

COMMENT ON TABLE odmx.datalogger_program_files IS 'Information about datalogger program files';


/******************** Add Table: odmx.equipment ************************/

/* Build Table Structure */
CREATE TABLE odmx.equipment
(
	equipment_id INTEGER DEFAULT nextval('odmx.equipment_equipment_id_seq'::regclass) NOT NULL,
	equipment_uuid VARCHAR NOT NULL,
	equipment_code VARCHAR NOT NULL,
	equipment_name VARCHAR NOT NULL,
	equipment_model_id INTEGER NOT NULL,
	equipment_serial_number VARCHAR NULL,
	equipment_vendor_id INTEGER NULL,
	equipment_purchase_date TIMESTAMP NULL,
	equipment_purchase_order_number VARCHAR NULL,
	equipment_description VARCHAR NULL,
	equipment_documentation_link VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.equipment ADD CONSTRAINT pk_equipment
	PRIMARY KEY (equipment_id);

/* Add Comments */
COMMENT ON COLUMN odmx.equipment.equipment_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.equipment.equipment_uuid IS 'A UUID which uniquely identifies a piece of equipment';

COMMENT ON COLUMN odmx.equipment.equipment_code IS 'A text code that identifies the equipment model - should correspond to the EquiomentModelName';

COMMENT ON COLUMN odmx.equipment.equipment_name IS 'A text name for the piece of equipment';

COMMENT ON COLUMN odmx.equipment.equipment_model_id IS 'Foreign key identifier for the model of the equipment';

COMMENT ON COLUMN odmx.equipment.equipment_serial_number IS 'Manufacturer''s serial number for the specific piece of equipment';

COMMENT ON COLUMN odmx.equipment.equipment_vendor_id IS 'Foreign key identifier for the vendor organization for the piece of equipment';

COMMENT ON COLUMN odmx.equipment.equipment_purchase_date IS 'Date that the piece of equipment was purchased';

COMMENT ON COLUMN odmx.equipment.equipment_purchase_order_number IS 'A text string identifying the purchase order used to purchase the piece of equipment';

COMMENT ON COLUMN odmx.equipment.equipment_description IS 'Text notes about the specific piece of equipment';

COMMENT ON COLUMN odmx.equipment.equipment_documentation_link IS 'A file name, path, or URL to a photo of the specific piece of equipment';

COMMENT ON TABLE odmx.equipment IS 'Descriptions of specific pieces of equipment.';

/* Add Indexes */
CREATE UNIQUE INDEX equipment_equipment_uuid_idx ON odmx.equipment (equipment_uuid);


/******************** Add Table: odmx.equipment_models ************************/

/* Build Table Structure */
CREATE TABLE odmx.equipment_models
(
	equipment_model_id INTEGER DEFAULT nextval('odmx.equipment_models_equipment_model_id_seq'::regclass) NOT NULL,
	equipment_model_manufacturer_id INTEGER NOT NULL,
	equipment_model_part_number VARCHAR NULL,
	equipment_model_name VARCHAR NOT NULL,
	equipment_type_cv VARCHAR NOT NULL,
	equipment_model_description VARCHAR NULL,
	is_instrument BOOL NOT NULL,
	equipment_model_specifications_file_link VARCHAR NULL,
	equipment_model_description_url VARCHAR NULL,
	is_retired BOOL NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.equipment_models ADD CONSTRAINT pk_equipment_models
	PRIMARY KEY (equipment_model_id);

/* Add Comments */
COMMENT ON COLUMN odmx.equipment_models.equipment_model_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.equipment_models.equipment_model_manufacturer_id IS 'Foreign key identifier of the model manufacturer';

COMMENT ON COLUMN odmx.equipment_models.equipment_model_part_number IS 'Text string for a part number for the equipment model';

COMMENT ON COLUMN odmx.equipment_models.equipment_model_name IS 'Text name of the equipment model';

COMMENT ON COLUMN odmx.equipment_models.equipment_model_description IS 'Text description of the equipment model';

COMMENT ON COLUMN odmx.equipment_models.is_instrument IS 'A boolean indication of whether the equipment is a sensor/instrument used to make observations';

COMMENT ON COLUMN odmx.equipment_models.equipment_model_specifications_file_link IS 'File name, path, or URL to a specifications file for the equipment';

COMMENT ON COLUMN odmx.equipment_models.equipment_model_description_url IS 'A URL to a website or file having a description of the equipment model';

COMMENT ON COLUMN odmx.equipment_models.is_retired IS 'A Boolean which tells whether the instrument is retired';

COMMENT ON TABLE odmx.equipment_models IS 'Describes models of sensors, loggers, and related equipment used in making observations.';


/******************** Add Table: odmx.equipment_persons_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.equipment_persons_bridge
(
	bridge_id INTEGER DEFAULT nextval('odmx.equipment_persons_bridge_bridge_id_seq'::regclass) NOT NULL,
	equipment_id INTEGER NOT NULL,
	person_id INTEGER NOT NULL,
	person_role_cv VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.equipment_persons_bridge ADD CONSTRAINT pk_equipment_persons_bridge
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.equipment_persons_bridge IS 'Bridge between Equipment and Person';


/******************** Add Table: odmx.equipment_position ************************/

/* Build Table Structure */
CREATE TABLE odmx.equipment_position
(
	equipment_position_id INTEGER DEFAULT nextval('odmx.equipment_position_equipment_position_id_seq'::regclass) NOT NULL,
	equipment_id INTEGER NOT NULL,
	position_start_date_utc BIGINT NOT NULL,
	position_end_date_utc BIGINT NULL,
	equipment_z_offset_m FLOAT NULL,
	equipment_ns_offset_m FLOAT NULL,
	equipment_ew_offset_m FLOAT NULL,
	equipment_height_note VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.equipment_position ADD CONSTRAINT pk_equipment_position
	PRIMARY KEY (equipment_position_id);

/* Add Comments */
COMMENT ON COLUMN odmx.equipment_position.equipment_z_offset_m IS 'The Z Offset of the Equipment. Positive is higher up';

COMMENT ON COLUMN odmx.equipment_position.equipment_ns_offset_m IS 'The NS Offset of the Equipment. Positive is towards the N';

COMMENT ON COLUMN odmx.equipment_position.equipment_ew_offset_m IS 'EW offset. Positive is towards the East';

COMMENT ON COLUMN odmx.equipment_position.equipment_height_note IS 'A free form field to annotate details about the equipment Position';

COMMENT ON TABLE odmx.equipment_position IS 'A table which gives the position of equipment relative to its parent equipment or sampling feature';


/******************** Add Table: odmx.equipment_used ************************/

/* Build Table Structure */
CREATE TABLE odmx.equipment_used
(
	bridge_id INTEGER DEFAULT nextval('odmx.equipment_used_bridge_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	equipment_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.equipment_used ADD CONSTRAINT pk_equipment_used
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.equipment_used.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.equipment_used.action_id IS 'Foreign key identifier of the Action';

COMMENT ON COLUMN odmx.equipment_used.equipment_id IS 'Foreign key identifier of the Equipment entity associated with the Action';


/******************** Add Table: odmx.heartbeat ************************/

/* Build Table Structure */
CREATE TABLE odmx.heartbeat
(
	heartbeat_id INTEGER DEFAULT nextval('odmx.heartbeat_heartbeat_id_seq'::regclass) NOT NULL,
	heartbeat_interval_seconds INTEGER NOT NULL,
	last_heartbeat_utc BIGINT NOT NULL,
	equipment_id INTEGER NOT NULL,
	late_threshold_seconds_grace_period INTEGER NOT NULL,
	equipment_status_cv VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.heartbeat ADD CONSTRAINT pk_heartbeat
	PRIMARY KEY (heartbeat_id);

/* Add Comments */
COMMENT ON COLUMN odmx.heartbeat.heartbeat_interval_seconds IS 'This tells us the expected interval in seconds between getting a heartbeat from the system';

COMMENT ON COLUMN odmx.heartbeat.last_heartbeat_utc IS 'UTC time of last heartbeat';

COMMENT ON COLUMN odmx.heartbeat.equipment_id IS 'The equipmentID that this heartbeat is associated with. Note that not every equipment has a heartbeat - this is only relevant for IOT instruments and dataloggers';

COMMENT ON COLUMN odmx.heartbeat.late_threshold_seconds_grace_period IS 'The interval in seconds after the expected heartbeat that we use for  the system being Late';

COMMENT ON TABLE odmx.heartbeat IS 'This table provides update on the system connectivity status';


/******************** Add Table: odmx.instrument_output_quantity_kind ************************/

/* Build Table Structure */
CREATE TABLE odmx.instrument_output_quantity_kind
(
	instrument_output_quantity_kind_id INTEGER DEFAULT nextval('odmx.instrument_output_variables_instrument_output_variable_id_seq'::regclass) NOT NULL,
	equipment_model_id INTEGER NOT NULL,
	quantity_kind VARCHAR NOT NULL,
	instrument_resolution VARCHAR NULL,
	instrument_accuracy VARCHAR NULL,
	instrument_raw_output_units_id INTEGER NOT NULL,
	instrument_standard_output_variable INTEGER NULL,
	instrument_method_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.instrument_output_quantity_kind ADD CONSTRAINT pk_instrument_output_quantity_kind
	PRIMARY KEY (instrument_output_quantity_kind_id);

/* Add Comments */
COMMENT ON COLUMN odmx.instrument_output_quantity_kind.instrument_output_quantity_kind_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.instrument_output_quantity_kind.equipment_model_id IS 'Foreign key identifier of the Equipment Model';

COMMENT ON COLUMN odmx.instrument_output_quantity_kind.quantity_kind IS 'Foreign key identifier of the QuantityKind measured by the Equipment';

COMMENT ON COLUMN odmx.instrument_output_quantity_kind.instrument_resolution IS 'Text description of the resolution of the output variable';

COMMENT ON COLUMN odmx.instrument_output_quantity_kind.instrument_accuracy IS 'Text description of the accuracy of the output variable';

COMMENT ON COLUMN odmx.instrument_output_quantity_kind.instrument_raw_output_units_id IS 'Foreign key identifier of the raw output Units associated with the output variable';

COMMENT ON COLUMN odmx.instrument_output_quantity_kind.instrument_standard_output_variable IS 'In many cases the instrument generated a standard variable (e.g. air temperature or soil moisture) in addition to its quantitykind output. This is an optional link, but provided here';

COMMENT ON TABLE odmx.instrument_output_quantity_kind IS 'Information about the QuantityKind that an instrument is capable of measuring';


/******************** Add Table: odmx.maintenance_actions ************************/

/* Build Table Structure */
CREATE TABLE odmx.maintenance_actions
(
	action_id INTEGER NOT NULL,
	is_factory_service BOOL NOT NULL,
	maintenance_code VARCHAR NULL,
	maintenance_reason VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.maintenance_actions ADD CONSTRAINT pk_maintenance_actions
	PRIMARY KEY (action_id);

/* Add Comments */
COMMENT ON COLUMN odmx.maintenance_actions.action_id IS 'Primary key and foreign key idenfier of the Equipment MaintenanceAction';

COMMENT ON COLUMN odmx.maintenance_actions.is_factory_service IS 'Boolean indicator of whether the Action is a factory service';

COMMENT ON COLUMN odmx.maintenance_actions.maintenance_code IS 'Text code assigned to the service performed';

COMMENT ON COLUMN odmx.maintenance_actions.maintenance_reason IS 'Text description of why the service Action was required';

COMMENT ON TABLE odmx.maintenance_actions IS 'Information about maintenance Actions performed on Equipment';


/******************** Add Table: odmx.related_equipment ************************/

/* Build Table Structure */
CREATE TABLE odmx.related_equipment
(
	relation_id INTEGER DEFAULT nextval('odmx.related_equipment_relation_id_seq'::regclass) NOT NULL,
	equipment_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NULL,
	related_equipment_id INTEGER NOT NULL,
	relationship_start_date_time_utc BIGINT NOT NULL,
	relationship_end_date_time_utc BIGINT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.related_equipment ADD CONSTRAINT pk_related_equipment
	PRIMARY KEY (relation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.related_equipment.relation_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.related_equipment.equipment_id IS 'Foreign key identifier for a piece of Equipment';

COMMENT ON COLUMN odmx.related_equipment.relationship_type_cv IS 'Controlled Vocabulary term indicating the type of relationship between two pieces of equipment';

COMMENT ON COLUMN odmx.related_equipment.related_equipment_id IS 'Foreign key identifier of the related piece of equipment';

COMMENT ON COLUMN odmx.related_equipment.relationship_start_date_time_utc IS 'Beginning date/time of the relationship between the two pieces of equipment';

COMMENT ON COLUMN odmx.related_equipment.relationship_end_date_time_utc IS 'Ending date/time of the relationship between two pieces of equipment';

COMMENT ON TABLE odmx.related_equipment IS 'Information about relationships among Equipment';


/******************** Add Table: odmx.action_extension_property_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.action_extension_property_values
(
	bridge_id INTEGER DEFAULT nextval('odmx.action_extension_property_values_bridge_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	property_id INTEGER NOT NULL,
	property_value VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.action_extension_property_values ADD CONSTRAINT pk_action_extension_property_values
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.action_extension_property_values.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.action_extension_property_values.action_id IS 'Foreign key of the Action';

COMMENT ON COLUMN odmx.action_extension_property_values.property_id IS 'Foreign key of the extension property added to the Action';

COMMENT ON COLUMN odmx.action_extension_property_values.property_value IS 'Value of the extension property added to the Action';


/******************** Add Table: odmx.citation_extension_property_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.citation_extension_property_values
(
	bridge_id INTEGER DEFAULT nextval('odmx.citation_extension_property_values_bridge_id_seq'::regclass) NOT NULL,
	citation_id INTEGER NOT NULL,
	property_id INTEGER NOT NULL,
	property_value VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.citation_extension_property_values ADD CONSTRAINT pk_citation_extension_property_values
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.citation_extension_property_values.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.citation_extension_property_values.citation_id IS 'Foreign key identifier of the Citation being extended';

COMMENT ON COLUMN odmx.citation_extension_property_values.property_id IS 'Foreign key identifier for the Property being applied to the Citation';

COMMENT ON COLUMN odmx.citation_extension_property_values.property_value IS 'Value of the property being applied to the Citation';

COMMENT ON TABLE odmx.citation_extension_property_values IS 'Values for Citation Extension Properties';


/******************** Add Table: odmx.extension_properties ************************/

/* Build Table Structure */
CREATE TABLE odmx.extension_properties
(
	property_id INTEGER DEFAULT nextval('odmx.extension_properties_property_id_seq'::regclass) NOT NULL,
	property_name VARCHAR NOT NULL,
	property_description VARCHAR NULL,
	property_data_type_cv VARCHAR NOT NULL,
	property_units_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.extension_properties ADD CONSTRAINT pk_extension_properties
	PRIMARY KEY (property_id);

/* Add Comments */
COMMENT ON COLUMN odmx.extension_properties.property_id IS 'Unique identifier';

COMMENT ON COLUMN odmx.extension_properties.property_name IS 'Text name of the extension property';

COMMENT ON COLUMN odmx.extension_properties.property_description IS 'Text description of the extension property';

COMMENT ON COLUMN odmx.extension_properties.property_data_type_cv IS 'CV term specifying the data type of the property value';

COMMENT ON COLUMN odmx.extension_properties.property_units_id IS 'Foreign key identifier for the units of the property value';

COMMENT ON TABLE odmx.extension_properties IS 'Describes extension properties added to objects in an ODM database';


/******************** Add Table: odmx.method_extension_property_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.method_extension_property_values
(
	bridge_id INTEGER DEFAULT nextval('odmx.method_extension_property_values_bridge_id_seq'::regclass) NOT NULL,
	method_id INTEGER NOT NULL,
	property_id INTEGER NOT NULL,
	property_value VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.method_extension_property_values ADD CONSTRAINT pk_method_extension_property_values
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.method_extension_property_values.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.method_extension_property_values.method_id IS 'Foreign key identifier for the Method';

COMMENT ON COLUMN odmx.method_extension_property_values.property_id IS 'Foreign key identifier for the extension property';

COMMENT ON COLUMN odmx.method_extension_property_values.property_value IS 'Text or numeric value of the extension property';

COMMENT ON TABLE odmx.method_extension_property_values IS 'Links extnsion properties to a Method';


/******************** Add Table: odmx.result_extension_property_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.result_extension_property_values
(
	bridge_id INTEGER DEFAULT nextval('odmx.result_extension_property_values_bridge_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	property_id INTEGER NOT NULL,
	property_value VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.result_extension_property_values ADD CONSTRAINT pk_result_extension_property_values
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.result_extension_property_values.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.result_extension_property_values.result_id IS 'Foreign key identifier for the result to which the extension property applies';

COMMENT ON COLUMN odmx.result_extension_property_values.property_id IS 'Foreign key identifier for the extension propery';

COMMENT ON COLUMN odmx.result_extension_property_values.property_value IS 'Text or numeric value of the extension property';

COMMENT ON TABLE odmx.result_extension_property_values IS 'Links extension properties to a Result';


/******************** Add Table: odmx.sampling_feature_extension_property_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.sampling_feature_extension_property_values
(
	bridge_id INTEGER DEFAULT nextval('odmx.sampling_feature_extension_property_values_bridge_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	property_id INTEGER NOT NULL,
	property_value VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.sampling_feature_extension_property_values ADD CONSTRAINT pk_sampling_feature_extension_property_values
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.sampling_feature_extension_property_values.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.sampling_feature_extension_property_values.sampling_feature_id IS 'Foreign key of the SamplingFeature being extended';

COMMENT ON COLUMN odmx.sampling_feature_extension_property_values.property_id IS 'Foreign key of the extension property being added to the sampling feature ';

COMMENT ON COLUMN odmx.sampling_feature_extension_property_values.property_value IS 'Value of the property being added to the sampling feature';


/******************** Add Table: odmx.variable_extension_property_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.variable_extension_property_values
(
	bridge_id INTEGER DEFAULT nextval('odmx.variable_extension_property_values_bridge_id_seq'::regclass) NOT NULL,
	variable_id INTEGER NOT NULL,
	property_id INTEGER NOT NULL,
	property_value VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.variable_extension_property_values ADD CONSTRAINT pk_variable_extension_property_values
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.variable_extension_property_values.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.variable_extension_property_values.variable_id IS 'Foreign key of the variable being extended';

COMMENT ON COLUMN odmx.variable_extension_property_values.property_id IS 'Foreign key of the extension property being applied to the variable';

COMMENT ON COLUMN odmx.variable_extension_property_values.property_value IS 'Text or numeric value of the extension property for the variable';


/******************** Add Table: odmx.citation_external_identifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.citation_external_identifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.citation_external_identifiers_bridge_id_seq'::regclass) NOT NULL,
	citation_id INTEGER NOT NULL,
	external_identifier_system_id INTEGER NOT NULL,
	citation_external_identifier VARCHAR NOT NULL,
	citation_external_identifier_uri VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.citation_external_identifiers ADD CONSTRAINT pk_citation_external_identifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.citation_external_identifiers.citation_id IS 'Forign key of the Citation linked to the external identifer';

COMMENT ON COLUMN odmx.citation_external_identifiers.external_identifier_system_id IS 'Foreign Key to ExternalIdentifierSystems';

COMMENT ON COLUMN odmx.citation_external_identifiers.citation_external_identifier IS 'A resolvable, globally unique ID, such as a DOI. Could be a Uniform Resource Name (URN).';

COMMENT ON COLUMN odmx.citation_external_identifiers.citation_external_identifier_uri IS 'Uniform Resource Identifier (URI), preferably in the form of a persistent URL that is self-documenting and maintained by the external identifier system.';


/******************** Add Table: odmx.external_identifier_systems ************************/

/* Build Table Structure */
CREATE TABLE odmx.external_identifier_systems
(
	external_identifier_system_id INTEGER DEFAULT nextval('odmx.external_identifier_systems_external_identifier_system_id_seq'::regclass) NOT NULL,
	external_identifier_system_name VARCHAR NOT NULL,
	identifier_system_organization_id INTEGER NOT NULL,
	external_identifier_system_description VARCHAR NULL,
	external_identifier_system_url VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.external_identifier_systems ADD CONSTRAINT pk_external_identifier_systems
	PRIMARY KEY (external_identifier_system_id);

/* Add Comments */
COMMENT ON COLUMN odmx.external_identifier_systems.external_identifier_system_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.external_identifier_systems.external_identifier_system_name IS 'Defines the identifier system used (i.e. IGSN, SWRC Sample Number, etc.)';

COMMENT ON COLUMN odmx.external_identifier_systems.identifier_system_organization_id IS 'Foreign Key identifer for the organization overseeing or affiliated with the identifier system';

COMMENT ON COLUMN odmx.external_identifier_systems.external_identifier_system_description IS 'Description of identifier system.';

COMMENT ON COLUMN odmx.external_identifier_systems.external_identifier_system_url IS 'Universal Resource Locator (URL) for resolution/translation of an identifier system''s URNs (i.e. http://dx.doi.org/ is the resolver URL for doi:10.1002/2013GL057450)';

COMMENT ON TABLE odmx.external_identifier_systems IS 'A single table for connecting various primary keys with points to outside systems.';


/******************** Add Table: odmx.method_external_identifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.method_external_identifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.method_external_identifiers_bridge_id_seq'::regclass) NOT NULL,
	method_id INTEGER NOT NULL,
	external_identifier_system_id INTEGER NOT NULL,
	method_external_identifier VARCHAR NOT NULL,
	method_external_identifier_uri VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.method_external_identifiers ADD CONSTRAINT pk_method_external_identifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.method_external_identifiers.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.method_external_identifiers.method_id IS 'Foreign Key to SamplingFeatures';

COMMENT ON COLUMN odmx.method_external_identifiers.external_identifier_system_id IS 'Foreign Key to ExternalIdentifierSystems';

COMMENT ON COLUMN odmx.method_external_identifiers.method_external_identifier IS 'A resolvable, globally unique ID, such as a NEMI method number. Could be a Uniform Resource Name (URN).';

COMMENT ON COLUMN odmx.method_external_identifiers.method_external_identifier_uri IS 'Uniform Resource Identifier (URI), preferably in the form of a persistent URL that is self-documenting and maintained by the external identifier system.';


/******************** Add Table: odmx.person_external_identifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.person_external_identifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.person_external_identifiers_bridge_id_seq'::regclass) NOT NULL,
	person_id INTEGER NOT NULL,
	external_identifier_system_id INTEGER NOT NULL,
	person_external_identifier VARCHAR NOT NULL,
	person_external_identifier_uri VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.person_external_identifiers ADD CONSTRAINT pk_person_external_identifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.person_external_identifiers.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.person_external_identifiers.person_id IS 'Foreign Key to People table';

COMMENT ON COLUMN odmx.person_external_identifiers.external_identifier_system_id IS 'Foreign Key to ExternalIdentifierSystems';

COMMENT ON COLUMN odmx.person_external_identifiers.person_external_identifier IS 'A resolvable, globally unique ID, such as an IGSN. Could be a Uniform Resource Name (URN).';

COMMENT ON COLUMN odmx.person_external_identifiers.person_external_identifier_uri IS 'Uniform Resource Identifier (URI), preferably in the form of a persistent URL that is self-documenting.';

COMMENT ON TABLE odmx.person_external_identifiers IS 'Cross reference linking table to allow many to many ';


/******************** Add Table: odmx.reference_material_external_identifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.reference_material_external_identifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.reference_material_external_identifiers_bridge_id_seq'::regclass) NOT NULL,
	reference_material_id INTEGER NOT NULL,
	external_identifier_system_id INTEGER NOT NULL,
	reference_material_external_identifier VARCHAR NOT NULL,
	reference_material_external_identifier_uri VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.reference_material_external_identifiers ADD CONSTRAINT pk_reference_material_external_identifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.reference_material_external_identifiers.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.reference_material_external_identifiers.reference_material_id IS 'Foreign Key to ReferenceMaterials';

COMMENT ON COLUMN odmx.reference_material_external_identifiers.external_identifier_system_id IS 'Foreign Key to ExternalIdentifierSystems';

COMMENT ON COLUMN odmx.reference_material_external_identifiers.reference_material_external_identifier IS 'A resolvable, globally unique ID, such as NBS-19. Could be a Uniform Resource Name (URN).';

COMMENT ON COLUMN odmx.reference_material_external_identifiers.reference_material_external_identifier_uri IS 'Uniform Resource Identifier (URI), preferably in the form of a persistent URL that is self-documenting.';


/******************** Add Table: odmx.sampling_feature_external_identifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.sampling_feature_external_identifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.sampling_feature_external_identifiers_bridge_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	external_identifier_system_id INTEGER NOT NULL,
	sampling_feature_external_identifier VARCHAR NOT NULL,
	sampling_feature_external_identifier_uri VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.sampling_feature_external_identifiers ADD CONSTRAINT pk_sampling_feature_external_identifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.sampling_feature_external_identifiers.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.sampling_feature_external_identifiers.sampling_feature_id IS 'Foreign Key to SamplingFeatures';

COMMENT ON COLUMN odmx.sampling_feature_external_identifiers.external_identifier_system_id IS 'Foreign Key to ExternalIdentifierSystems';

COMMENT ON COLUMN odmx.sampling_feature_external_identifiers.sampling_feature_external_identifier IS 'A resolvable, globally unique ID, such as an IGSN. Could be a Uniform Resource Name (URN).';

COMMENT ON COLUMN odmx.sampling_feature_external_identifiers.sampling_feature_external_identifier_uri IS 'Uniform Resource Identifier (URI), preferably in the form of a persistent URL that is self-documenting.';


/******************** Add Table: odmx.spatial_reference_external_identifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.spatial_reference_external_identifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.spatial_reference_external_identifiers_bridge_id_seq'::regclass) NOT NULL,
	spatial_reference_id INTEGER NOT NULL,
	external_identifier_system_id INTEGER NOT NULL,
	spatial_reference_external_identifier VARCHAR NOT NULL,
	spatial_reference_external_identifier_uri VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.spatial_reference_external_identifiers ADD CONSTRAINT pk_spatial_reference_external_identifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.spatial_reference_external_identifiers.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';


/******************** Add Table: odmx.taxonomic_classifier_external_identifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.taxonomic_classifier_external_identifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.taxonomic_classifier_external_identifiers_bridge_id_seq'::regclass) NOT NULL,
	taxonomic_classifier_id INTEGER NOT NULL,
	external_identifier_system_id INTEGER NOT NULL,
	taxonomic_classifier_external_identifier VARCHAR NOT NULL,
	taxonomic_classifier_external_identifier_uri VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.taxonomic_classifier_external_identifiers ADD CONSTRAINT pk_taxonomic_classifier_external_identifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.taxonomic_classifier_external_identifiers.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.taxonomic_classifier_external_identifiers.taxonomic_classifier_id IS 'Foreign Key to TaxonomicClassifiers';

COMMENT ON COLUMN odmx.taxonomic_classifier_external_identifiers.external_identifier_system_id IS 'Foreign Key to ExternalIdentifierSystems';

COMMENT ON COLUMN odmx.taxonomic_classifier_external_identifiers.taxonomic_classifier_external_identifier IS 'A resolvable, globally unique ID, such as a GBIF ID. Could be a Uniform Resource Name (URN).';

COMMENT ON COLUMN odmx.taxonomic_classifier_external_identifiers.taxonomic_classifier_external_identifier_uri IS 'Uniform Resource Identifier (URI), preferably in the form of a persistent URL that is self-documenting and maintained by the external identifier system.';


/******************** Add Table: odmx.variable_external_identifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.variable_external_identifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.variable_external_identifiers_bridge_id_seq'::regclass) NOT NULL,
	variable_id INTEGER NOT NULL,
	external_identifier_system_id INTEGER NOT NULL,
	variable_external_identifier VARCHAR NOT NULL,
	variable_external_identifier_uri VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.variable_external_identifiers ADD CONSTRAINT pk_variable_external_identifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.variable_external_identifiers.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.variable_external_identifiers.variable_id IS 'Foreign Key to Variables';

COMMENT ON COLUMN odmx.variable_external_identifiers.external_identifier_system_id IS 'Foreign Key to ExternalIdentifierSystems';

COMMENT ON COLUMN odmx.variable_external_identifiers.variable_external_identifier IS 'A resolvable, globally unique ID. Could be a Uniform Resource Name (URN).';

COMMENT ON COLUMN odmx.variable_external_identifiers.variable_external_identifier_uri IS 'Uniform Resource Identifier (URI), preferably in the form of a persistent URL that is self-documenting and maintained by the external identifier system.';


/******************** Add Table: odmx.action_directives ************************/

/* Build Table Structure */
CREATE TABLE odmx.action_directives
(
	bridge_id INTEGER DEFAULT nextval('odmx.action_directives_bridge_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	directive_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.action_directives ADD CONSTRAINT pk_action_directives
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.action_directives.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.action_directives.action_id IS 'Foreign key identifier of the Action';

COMMENT ON COLUMN odmx.action_directives.directive_id IS 'Foreign key identifier of the Directive';


/******************** Add Table: odmx.directives ************************/

/* Build Table Structure */
CREATE TABLE odmx.directives
(
	directive_id INTEGER DEFAULT nextval('odmx.directives_directive_id_seq'::regclass) NOT NULL,
	directive_type_cv VARCHAR NOT NULL,
	directive_description VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.directives ADD CONSTRAINT pk_directives
	PRIMARY KEY (directive_id);

/* Add Comments */
COMMENT ON COLUMN odmx.directives.directive_id IS 'Unique identifier.';

COMMENT ON COLUMN odmx.directives.directive_type_cv IS 'Directive type, such as project, intended analyte/analysis for a Specimen, etc.';

COMMENT ON COLUMN odmx.directives.directive_description IS 'Text description of the directive or purpose under which the action was taken.';

COMMENT ON TABLE odmx.directives IS 'Describes the directive or purpose under which actions are made.  Directives can be projects, intended analyses for a specimen, etc.';


/******************** Add Table: odmx.specimen_batch_positions ************************/

/* Build Table Structure */
CREATE TABLE odmx.specimen_batch_positions
(
	feature_action_id INTEGER NOT NULL,
	batch_position_number INTEGER NOT NULL,
	batch_position_label VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.specimen_batch_positions ADD CONSTRAINT pk_specimen_batch_positions
	PRIMARY KEY (feature_action_id);

/* Add Comments */
COMMENT ON COLUMN odmx.specimen_batch_positions.feature_action_id IS 'Foriegn key identifer for the Specimen Preparation or Analysis Batch';

COMMENT ON COLUMN odmx.specimen_batch_positions.batch_position_number IS 'The position or line number of a specimen within a PreparationBatchAction or an InstrumentAnalysisAction.';

COMMENT ON COLUMN odmx.specimen_batch_positions.batch_position_label IS 'The label text for a specimen within a PreparationBatchAction or an InstrumentAnalysisAction.';

COMMENT ON TABLE odmx.specimen_batch_positions IS 'Extends the FeatureActions table with a foreign key when the optional LabAnalyses schema is implemented.  In a database implementation, we would not implement this as a separate table from FeatureActions, but rather just add the additional field(s).';


/******************** Add Table: odmx.assembly ************************/

/* Build Table Structure */
CREATE TABLE odmx.assembly
(
	assembled_contigs_id INTEGER DEFAULT nextval('odmx.assembly_assembled_contigs_id_seq'::regclass) NOT NULL,
	number_of_contigs INTEGER NULL,
	qcd_reads_id INTEGER NULL,
	total_assembled_length INTEGER NULL,
	n50 VARCHAR NULL,
	assembly_event_id INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE odmx.assembly ADD CONSTRAINT pk_assembly
	PRIMARY KEY (assembled_contigs_id);


/******************** Add Table: odmx.assembly_event ************************/

/* Build Table Structure */
CREATE TABLE odmx.assembly_event
(
	assembly_event_id INTEGER NOT NULL,
	method VARCHAR NULL,
	assembly_event_date TIMESTAMP NULL,
	assembly_event_date_utc_offset INTEGER NULL,
	version VARCHAR NULL,
	assembly_event_type VARCHAR NULL,
	qcd_reads_id INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE odmx.assembly_event ADD CONSTRAINT pk_assembly_event
	PRIMARY KEY (assembly_event_id);


/******************** Add Table: odmx.binning_event ************************/

/* Build Table Structure */
CREATE TABLE odmx.binning_event
(
	mag_binning_event_id INTEGER NOT NULL,
	mag_processing_method VARCHAR NULL,
	percentage_reads_mapped FLOAT NULL,
	number_of_mags INTEGER NULL,
	percentage_of_contigs_in_mags FLOAT NULL,
	assembled_contigs_id INTEGER NULL,
	percentage_binned FLOAT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.binning_event ADD CONSTRAINT pk_binning_event
	PRIMARY KEY (mag_binning_event_id);


/******************** Add Table: odmx.bridge_contigs_mags ************************/

/* Build Table Structure */
CREATE TABLE odmx.bridge_contigs_mags
(
	bridge_contigs_mags_id INTEGER NOT NULL,
	contigs_id INTEGER NULL,
	mags_id INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE odmx.bridge_contigs_mags ADD CONSTRAINT pk_bridge_contigs_mags
	PRIMARY KEY (bridge_contigs_mags_id);


/******************** Add Table: odmx.bridge_genes_gene_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.bridge_genes_gene_annotations
(
	bridge_id INTEGER DEFAULT nextval('odmx.bridge_genes_gene_annotations_bridge_id_seq'::regclass) NOT NULL,
	gene_annotation_id INTEGER NULL,
	gene_id INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE odmx.bridge_genes_gene_annotations ADD CONSTRAINT pk_bridge_genes_gene_annotations
	PRIMARY KEY (bridge_id);


/******************** Add Table: odmx.bridge_mag_annotation_event_gene_annotation ************************/

/* Build Table Structure */
CREATE TABLE odmx.bridge_mag_annotation_event_gene_annotation
(
	bridge_id INTEGER DEFAULT nextval('odmx.bridge_mag_annotation_event_gene_annotation_bridge_id_seq'::regclass) NOT NULL,
	gene_annotation_id INTEGER NULL,
	mag_annotation_event_id INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE odmx.bridge_mag_annotation_event_gene_annotation ADD CONSTRAINT pk_bridge_mag_annotation_event_gene_annotation
	PRIMARY KEY (bridge_id);


/******************** Add Table: odmx.bridge_mags_mag_collections ************************/

/* Build Table Structure */
CREATE TABLE odmx.bridge_mags_mag_collections
(
	bridge_mags_mag_collections_id INTEGER DEFAULT nextval('odmx.bridge_mags_mag_collections_bridge_mags_mag_collections_id_seq'::regclass) NOT NULL,
	mag_collections_id INTEGER NOT NULL,
	mags_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.bridge_mags_mag_collections ADD CONSTRAINT pk_bridge_mags_mag_collections
	PRIMARY KEY (bridge_mags_mag_collections_id);


/******************** Add Table: odmx.bridge_qcd_reads_assembly_event ************************/

/* Build Table Structure */
CREATE TABLE odmx.bridge_qcd_reads_assembly_event
(
	id INTEGER NOT NULL,
	qcd_reads_id INTEGER NULL,
	assembly_event_id INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE odmx.bridge_qcd_reads_assembly_event ADD CONSTRAINT pk_bridge_qcd_reads_assembly_event
	PRIMARY KEY (id);


/******************** Add Table: odmx.contigs ************************/

/* Build Table Structure */
CREATE TABLE odmx.contigs
(
	contigs_id INTEGER DEFAULT nextval('odmx.contigs_contigs_id_seq'::regclass) NOT NULL,
	contig_length INTEGER NULL,
	mag_binning_event_id INTEGER NULL,
	g_cpercentage FLOAT NULL,
	contig_coverage FLOAT NULL,
	fasta_file_path VARCHAR NULL,
	fasta_file_name VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.contigs ADD CONSTRAINT pk_contigs
	PRIMARY KEY (contigs_id);


/******************** Add Table: odmx.coverage ************************/

/* Build Table Structure */
CREATE TABLE odmx.coverage
(
	coverage_id INTEGER DEFAULT nextval('odmx.coverage_coverage_id_seq'::regclass) NOT NULL,
	mags_id INTEGER NULL,
	sampling_feature_id INTEGER NULL,
	result_date_time TIMESTAMP NULL,
	result_date_time_utc_offset INTEGER NULL,
	coverage_value FLOAT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.coverage ADD CONSTRAINT pk_coverage
	PRIMARY KEY (coverage_id);


/******************** Add Table: odmx.extracted_dna ************************/

/* Build Table Structure */
CREATE TABLE odmx.extracted_dna
(
	extracted_dnaid INTEGER DEFAULT nextval('odmx.extracted_dna_extracted_dnaid_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NULL,
	extraction_kit_name VARCHAR NULL,
	extraction_kit_id VARCHAR NULL,
	dna_input_volume_ml FLOAT NULL,
	extraction_date TIMESTAMP NULL,
	extraction_notes VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.extracted_dna ADD CONSTRAINT pk_extracted_dna
	PRIMARY KEY (extracted_dnaid);


/******************** Add Table: odmx.gene_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.gene_annotations
(
	gene_annotation_id INTEGER DEFAULT nextval('odmx.gene_annotations_gene_annotation_id_seq'::regclass) NOT NULL,
	cv_annotation_source VARCHAR NULL,
	source_id VARCHAR NULL,
	source_hit VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.gene_annotations ADD CONSTRAINT pk_gene_annotations
	PRIMARY KEY (gene_annotation_id);


/******************** Add Table: odmx.genes ************************/

/* Build Table Structure */
CREATE TABLE odmx.genes
(
	gene_id INTEGER DEFAULT nextval('odmx.genes_gene_id_seq'::regclass) NOT NULL,
	csu_gene_id VARCHAR NULL,
	gene_start INTEGER NULL,
	gene_end INTEGER NULL,
	has_fna BOOL NULL,
	has_faa BOOL NULL
);

/* Add Primary Key */
ALTER TABLE odmx.genes ADD CONSTRAINT pk_genes
	PRIMARY KEY (gene_id);


/******************** Add Table: odmx.mag_annotation_event ************************/

/* Build Table Structure */
CREATE TABLE odmx.mag_annotation_event
(
	mag_annotation_event_id INTEGER DEFAULT nextval('odmx.mag_annotation_event_mag_annotation_event_id_seq'::regclass) NOT NULL,
	annotation_method VARCHAR NULL,
	mags_id INTEGER NULL,
	mag_annotation VARCHAR DEFAULT 'This would come from a CV' NULL,
	event_date TIMESTAMP NULL,
	event_date_utc_offset INTEGER NULL,
	version VARCHAR NULL,
	genes_faa_file_path VARCHAR NULL,
	genes_fna_file_path VARCHAR NULL,
	genes_gff_file_path VARCHAR NULL,
	scaffolds_fna_file_path VARCHAR NULL,
	gbk_file_path VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.mag_annotation_event ADD CONSTRAINT pk_mag_annotation_event
	PRIMARY KEY (mag_annotation_event_id);


/******************** Add Table: odmx.mag_collections ************************/

/* Build Table Structure */
CREATE TABLE odmx.mag_collections
(
	mag_collections_id INTEGER DEFAULT nextval('odmx.mag_collections_mag_collections_id_seq'::regclass) NOT NULL,
	mag_collections_name VARCHAR NOT NULL,
	final_genes_faa_file_path VARCHAR NULL,
	final_genes_fna_file_path VARCHAR NULL,
	final_genes_gff_file_path VARCHAR NULL,
	final_scaffolds_fna_file_path VARCHAR NULL,
	final_gbk_file_path VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.mag_collections ADD CONSTRAINT pk_mag_collections
	PRIMARY KEY (mag_collections_id);


/******************** Add Table: odmx.mags ************************/

/* Build Table Structure */
CREATE TABLE odmx.mags
(
	mags_id INTEGER DEFAULT nextval('odmx.mags_mags_id_seq'::regclass) NOT NULL,
	mag_name VARCHAR NULL,
	mag_completeness VARCHAR NULL,
	mag_contamination VARCHAR NULL,
	mag_binning_event_id INTEGER NULL,
	mag_taxonomy_from_gtdbtk_domain VARCHAR NULL,
	mag_taxonomy_from_gtdbtk_phylum VARCHAR NULL,
	mag_taxonomy_from_gtdbtk_class VARCHAR NULL,
	mag_taxonomy_from_gtdbtk_order VARCHAR NULL,
	mag_taxonomy_from_gtdbtk_family VARCHAR NULL,
	mag_taxonomy_from_gtdbtk_genus VARCHAR NULL,
	mag_taxonomy_from_gtdbtk_species VARCHAR NULL,
	mag_taxonomy_from_gtdbtk_strain VARCHAR NULL,
	manual_curation BOOL NULL,
	in_mag_collection BOOL NULL
);

/* Add Primary Key */
ALTER TABLE odmx.mags ADD CONSTRAINT pk_mags
	PRIMARY KEY (mags_id);


/******************** Add Table: odmx.qcd_reads ************************/

/* Build Table Structure */
CREATE TABLE odmx.qcd_reads
(
	qcd_reads_id INTEGER DEFAULT nextval('odmx.qcd_reads_qcd_reads_id_seq'::regclass) NOT NULL,
	qc_processing_method VARCHAR NULL,
	number_of_reads INTEGER NULL,
	raw_reads_id INTEGER NULL,
	processing_method_parameters VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.qcd_reads ADD CONSTRAINT pk_qcd_reads
	PRIMARY KEY (qcd_reads_id);


/******************** Add Table: odmx.raw_reads ************************/

/* Build Table Structure */
CREATE TABLE odmx.raw_reads
(
	raw_reads_id INTEGER DEFAULT nextval('odmx.raw_reads_raw_reads_id_seq'::regclass) NOT NULL,
	extracted_dnaid INTEGER NULL,
	sequencing_facility_id INTEGER NULL,
	raw_read_date TIMESTAMP NULL,
	gbp_reads FLOAT NULL,
	sequencing_facility_id_sample_id VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.raw_reads ADD CONSTRAINT pk_raw_reads
	PRIMARY KEY (raw_reads_id);


/******************** Add Table: odmx.sequencing_facility ************************/

/* Build Table Structure */
CREATE TABLE odmx.sequencing_facility
(
	sequencing_facility_id INTEGER NOT NULL,
	sequencing_facility_name VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.sequencing_facility ADD CONSTRAINT pk_sequencing_facility
	PRIMARY KEY (sequencing_facility_id);


/******************** Add Table: odmx.author_lists ************************/

/* Build Table Structure */
CREATE TABLE odmx.author_lists
(
	bridge_id INTEGER DEFAULT nextval('odmx.author_lists_bridge_id_seq'::regclass) NOT NULL,
	citation_id INTEGER NOT NULL,
	person_id INTEGER NOT NULL,
	author_order INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.author_lists ADD CONSTRAINT pk_author_lists
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.author_lists.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.author_lists.citation_id IS 'Foreign key identifier for a Citation';

COMMENT ON COLUMN odmx.author_lists.person_id IS 'Foreign key identifier for a Person that is an author of the Citation';

COMMENT ON COLUMN odmx.author_lists.author_order IS 'Integer order of the authors of the Citation starting with 1 for first author';

COMMENT ON TABLE odmx.author_lists IS 'Relationship between Citations and their Authors';


/******************** Add Table: odmx.citations ************************/

/* Build Table Structure */
CREATE TABLE odmx.citations
(
	citation_id INTEGER DEFAULT nextval('odmx.citations_citation_id_seq'::regclass) NOT NULL,
	title VARCHAR NOT NULL,
	publisher VARCHAR NOT NULL,
	publication_year INTEGER NOT NULL,
	citation_link VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.citations ADD CONSTRAINT pk_citations
	PRIMARY KEY (citation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.citations.citation_id IS 'Primary key identifier';

COMMENT ON COLUMN odmx.citations.title IS 'Text title of the Citation';

COMMENT ON COLUMN odmx.citations.publisher IS 'Text publisher of the Citation';

COMMENT ON COLUMN odmx.citations.publication_year IS 'Integer publication year (4 digits) of the Citation';

COMMENT ON COLUMN odmx.citations.citation_link IS 'Text link to the Citation (i.e. URL or path).';

COMMENT ON TABLE odmx.citations IS 'Information about Citations';


/******************** Add Table: odmx.dataset_citations ************************/

/* Build Table Structure */
CREATE TABLE odmx.dataset_citations
(
	bridge_id INTEGER DEFAULT nextval('odmx.dataset_citations_bridge_id_seq'::regclass) NOT NULL,
	data_set_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	citation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.dataset_citations ADD CONSTRAINT pk_dataset_citations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.dataset_citations.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.dataset_citations.data_set_id IS 'Foreign key identifier for a DataSet';

COMMENT ON COLUMN odmx.dataset_citations.relationship_type_cv IS 'CV term describing the relationship between the DataSet and the Citation (e.g., cites or is_cited_by), largely conforming to CV used by DataCite.org.';

COMMENT ON COLUMN odmx.dataset_citations.citation_id IS 'Foreign key identifier for a Citation that is associated with the DataSet identified by DataSetID';

COMMENT ON TABLE odmx.dataset_citations IS 'Relationship between DataSets and Citations';


/******************** Add Table: odmx.derivation_equations ************************/

/* Build Table Structure */
CREATE TABLE odmx.derivation_equations
(
	derivation_equation_id INTEGER DEFAULT nextval('odmx.derivation_equations_derivation_equation_id_seq'::regclass) NOT NULL,
	derivation_equation VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.derivation_equations ADD CONSTRAINT pk_derivation_equations
	PRIMARY KEY (derivation_equation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.derivation_equations.derivation_equation_id IS 'Primary key for DerivationEquations, which include calibration equations, normalizations, etc. on one or more RelatedResults to produce a DerivedResult.';

COMMENT ON COLUMN odmx.derivation_equations.derivation_equation IS 'Text of the equation used to derive a Result from one or more RelatedResults, where y is the DerivedResult and x1, x2, ..., xn are the RelatedResults specified in order by RelatedResultSequenceID.';

COMMENT ON TABLE odmx.derivation_equations IS 'DerivationEquations include calibration equations, normalizations, etc. on one or more RelatedResults to produce a DerivedResult.';


/******************** Add Table: odmx.method_citations ************************/

/* Build Table Structure */
CREATE TABLE odmx.method_citations
(
	bridge_id INTEGER DEFAULT nextval('odmx.method_citations_bridge_id_seq'::regclass) NOT NULL,
	method_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	citation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.method_citations ADD CONSTRAINT pk_method_citations
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.method_citations.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.method_citations.method_id IS 'Foreign key identifier for a Method';

COMMENT ON COLUMN odmx.method_citations.relationship_type_cv IS 'CV term describing the relationship between the Methods and the Citation (e.g., references or is_documented_by), largely conforming to CV used by DataCite.org.';

COMMENT ON COLUMN odmx.method_citations.citation_id IS 'Foreign key identifier for a Citation that is associated with the Method identified by MethodID';


/******************** Add Table: odmx.related_annotations ************************/

/* Build Table Structure */
CREATE TABLE odmx.related_annotations
(
	relation_id INTEGER DEFAULT nextval('odmx.related_annotations_relation_id_seq'::regclass) NOT NULL,
	annotation_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	related_annotation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.related_annotations ADD CONSTRAINT pk_related_annotations
	PRIMARY KEY (relation_id);

/* Add Comments */
COMMENT ON TABLE odmx.related_annotations IS 'Stores information about relationships among Annotations';


/******************** Add Table: odmx.related_citations ************************/

/* Build Table Structure */
CREATE TABLE odmx.related_citations
(
	relation_id INTEGER DEFAULT nextval('odmx.related_citations_relation_id_seq'::regclass) NOT NULL,
	citation_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	related_citation_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.related_citations ADD CONSTRAINT pk_related_citations
	PRIMARY KEY (relation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.related_citations.relation_id IS 'Primary key for a relationship table (i.e. named "Related...").';

COMMENT ON COLUMN odmx.related_citations.citation_id IS 'Foreign key identifier for a Citation';

COMMENT ON COLUMN odmx.related_citations.relationship_type_cv IS 'CV term describing the relationship between Citations (e.g., is_supplement_to or is_part_of), largely conforming to CV used by DataCite.org.';

COMMENT ON COLUMN odmx.related_citations.related_citation_id IS 'Foreign key identifier for a Citation that is related to the Citation identified by CitationID';

COMMENT ON TABLE odmx.related_citations IS 'Information about relationships among citations';


/******************** Add Table: odmx.related_datasets ************************/

/* Build Table Structure */
CREATE TABLE odmx.related_datasets
(
	relation_id INTEGER DEFAULT nextval('odmx.related_datasets_relation_id_seq'::regclass) NOT NULL,
	data_set_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	related_dataset_id INTEGER NOT NULL,
	version_code VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.related_datasets ADD CONSTRAINT pk_related_datasets
	PRIMARY KEY (relation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.related_datasets.relation_id IS 'Primary key for a relationship table (i.e. named "Related...").';

COMMENT ON COLUMN odmx.related_datasets.data_set_id IS 'Foreign key identifier for a DataSet';

COMMENT ON COLUMN odmx.related_datasets.relationship_type_cv IS 'CV term describing the relationship between DataSets (e.g., is_new_version_of or continues), largely conforming to CV used by DataCite.org.';

COMMENT ON COLUMN odmx.related_datasets.related_dataset_id IS 'Foreign key identifier for a DataSet related to the DataSet identified by DataSetID';

COMMENT ON COLUMN odmx.related_datasets.version_code IS 'Text version number/code that can be specified if the DataSet is an explicit version of another DataSet and where the RelationshipTypeCV = is_new_version_of.';

COMMENT ON TABLE odmx.related_datasets IS 'Information about relationships among DataSets';


/******************** Add Table: odmx.related_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.related_results
(
	relation_id INTEGER DEFAULT nextval('odmx.related_results_relation_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	related_result_id BIGINT NOT NULL,
	version_code VARCHAR NULL,
	related_result_sequence_number INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.related_results ADD CONSTRAINT pk_related_results
	PRIMARY KEY (relation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.related_results.relation_id IS 'Primary key for a relationship table (i.e. named "Related...").';

COMMENT ON COLUMN odmx.related_results.result_id IS 'Foreign key identifier for a Result';

COMMENT ON COLUMN odmx.related_results.relationship_type_cv IS 'Text description of the relationship between the Results from a controlled vocabulary (e.g., is_derived_from)';

COMMENT ON COLUMN odmx.related_results.related_result_id IS 'Foreign key identifier for a Result that is related to the Result identified by ResultID';

COMMENT ON COLUMN odmx.related_results.version_code IS 'Text version number/code that can be specified if the Result is an explicit version of another Result and where the RelationshipTypeCV = is_new_version_of.';

COMMENT ON COLUMN odmx.related_results.related_result_sequence_number IS 'Integer sequence number indicating the order in which a RelatedResults appears in a DerivationEquation (i.e. 1 for x1, 2 for x2...) and where a Result is_derived_from one or more  RelatedResults.';

COMMENT ON TABLE odmx.related_results IS 'Information about relationships among Results';


/******************** Add Table: odmx.result_derivation_equations ************************/

/* Build Table Structure */
CREATE TABLE odmx.result_derivation_equations
(
	result_derivation_equations_id BIGINT DEFAULT nextval('odmx.result_derivation_equations_result_derivation_equations_id_seq'::regclass) NOT NULL,
	derivation_equation_id INTEGER NOT NULL,
	result_id BIGINT NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.result_derivation_equations ADD CONSTRAINT pk_result_derivation_equations
	PRIMARY KEY (result_derivation_equations_id);

/* Add Comments */
COMMENT ON COLUMN odmx.result_derivation_equations.derivation_equation_id IS 'Foreign key identifier for the DerivationEquation used to derive the Result identified by ResultID';

COMMENT ON TABLE odmx.result_derivation_equations IS 'Relationship between Results and Equations used to derive them';


/******************** Add Table: odmx.categorical_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.categorical_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.categorical_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value VARCHAR NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.categorical_result_values ADD CONSTRAINT pk_categorical_result_values
	PRIMARY KEY (value_id);

/* Add Unique Constraints */
ALTER TABLE odmx.categorical_result_values
	ADD CONSTRAINT uc_categorical_result_values UNIQUE (result_id, data_value, value_date_time, value_date_time_utc_offset);


/******************** Add Table: odmx.categorical_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.categorical_results
(
	result_id BIGINT NOT NULL,
	x_location FLOAT NULL,
	x_location_units_id INTEGER NULL,
	y_location FLOAT NULL,
	y_location_units_id INTEGER NULL,
	z_location FLOAT NULL,
	z_location_units_id INTEGER NULL,
	spatial_reference_id INTEGER NULL,
	quality_code_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.categorical_results ADD CONSTRAINT pk_categorical_results
	PRIMARY KEY (result_id);


/******************** Add Table: odmx.measurement_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.measurement_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.measurement_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value FLOAT NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL,
	aggregation_statistic_cv VARCHAR NOT NULL,
	censor_code_cv VARCHAR NOT NULL,
	quality_code_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.measurement_result_values ADD CONSTRAINT pk_measurement_result_values
	PRIMARY KEY (value_id);

/* Add Comments */
COMMENT ON COLUMN odmx.measurement_result_values.aggregation_statistic_cv IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.measurement_result_values.censor_code_cv IS 'Controlled vocabulary term';

COMMENT ON COLUMN odmx.measurement_result_values.quality_code_cv IS 'Controlled vocabulary term';


/******************** Add Table: odmx.measurement_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.measurement_results
(
	result_id BIGINT NOT NULL,
	x_location FLOAT NULL,
	x_location_units_id INTEGER NULL,
	y_location FLOAT NULL,
	y_location_units_id INTEGER NULL,
	z_location FLOAT NULL,
	z_location_units_id INTEGER NULL,
	spatial_reference_id INTEGER NULL,
	time_aggregation_interval FLOAT NULL,
	time_aggregation_interval_units_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.measurement_results ADD CONSTRAINT pk_measurement_results
	PRIMARY KEY (result_id);


/******************** Add Table: odmx.point_coverage_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.point_coverage_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.point_coverage_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value DOUBLE PRECISION NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL,
	x_location FLOAT NOT NULL,
	x_location_units_id INTEGER NOT NULL,
	y_location FLOAT NOT NULL,
	y_location_units_id INTEGER NOT NULL,
	censor_code_cv VARCHAR NOT NULL,
	quality_code_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.point_coverage_result_values ADD CONSTRAINT pk_point_coverage_result_values
	PRIMARY KEY (value_id);

/* Add Unique Constraints */
ALTER TABLE odmx.point_coverage_result_values
	ADD CONSTRAINT uc_point_coverage_result_values UNIQUE (result_id, data_value, value_date_time, value_date_time_utc_offset, x_location, x_location_units_id, y_location, y_location_units_id, censor_code_cv, quality_code_cv);


/******************** Add Table: odmx.point_coverage_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.point_coverage_results
(
	result_id BIGINT NOT NULL,
	z_location FLOAT NULL,
	z_location_units_id INTEGER NULL,
	spatial_reference_id INTEGER NULL,
	intended_x_spacing FLOAT NULL,
	intended_x_spacing_units_id INTEGER NULL,
	intended_y_spacing FLOAT NULL,
	intended_y_spacing_units_id INTEGER NULL,
	aggregation_statistic_cv VARCHAR NOT NULL,
	time_aggregation_interval FLOAT NOT NULL,
	time_aggregation_interval_units_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.point_coverage_results ADD CONSTRAINT pk_point_coverage_results
	PRIMARY KEY (result_id);


/******************** Add Table: odmx.profile_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.profile_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.profile_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value FLOAT NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL,
	z_location FLOAT NOT NULL,
	z_aggregation_interval FLOAT NOT NULL,
	z_location_units_id INTEGER NOT NULL,
	censor_code_cv VARCHAR NOT NULL,
	quality_code_cv VARCHAR NOT NULL,
	time_aggregation_interval FLOAT NOT NULL,
	time_aggregation_interval_units_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.profile_result_values ADD CONSTRAINT pk_profile_result_values
	PRIMARY KEY (value_id);

/* Add Comments */
COMMENT ON TABLE odmx.profile_result_values IS 'Numeric values of Depth Profile Results.';

/* Add Unique Constraints */
ALTER TABLE odmx.profile_result_values
	ADD CONSTRAINT uc_profile_result_values UNIQUE (result_id, data_value, value_date_time, value_date_time_utc_offset, z_location, z_aggregation_interval, z_location_units_id, censor_code_cv, quality_code_cv, time_aggregation_interval, time_aggregation_interval_units_id);


/******************** Add Table: odmx.profile_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.profile_results
(
	result_id BIGINT NOT NULL,
	x_location FLOAT NULL,
	x_location_units_id INTEGER NULL,
	y_location FLOAT NULL,
	y_location_units_id INTEGER NULL,
	spatial_reference_id INTEGER NULL,
	intended_z_spacing FLOAT NULL,
	intended_z_spacing_units_id INTEGER NULL,
	intended_time_spacing FLOAT NULL,
	intended_time_spacing_units_id INTEGER NULL,
	aggregation_statistic_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.profile_results ADD CONSTRAINT pk_profile_results
	PRIMARY KEY (result_id);

/* Add Comments */
COMMENT ON TABLE odmx.profile_results IS 'Information about Profile Results';


/******************** Add Table: odmx.section_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.section_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.section_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value DOUBLE PRECISION NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL,
	x_location DOUBLE PRECISION NOT NULL,
	x_aggregation_interval FLOAT NOT NULL,
	x_location_units_id INTEGER NOT NULL,
	z_location BIGINT NOT NULL,
	z_aggregation_interval FLOAT NOT NULL,
	z_location_units_id INTEGER NOT NULL,
	censor_code_cv VARCHAR NOT NULL,
	quality_code_cv VARCHAR NOT NULL,
	aggregation_statistic_cv VARCHAR NOT NULL,
	time_aggregation_interval FLOAT NOT NULL,
	time_aggregation_interval_units_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.section_result_values ADD CONSTRAINT pk_section_result_values
	PRIMARY KEY (value_id);

/* Add Unique Constraints */
ALTER TABLE odmx.section_result_values
	ADD CONSTRAINT uc_section_result_values UNIQUE (result_id, data_value, value_date_time, value_date_time_utc_offset, x_location, x_aggregation_interval, x_location_units_id, z_location, z_aggregation_interval, z_location_units_id, censor_code_cv, quality_code_cv, aggregation_statistic_cv, time_aggregation_interval, time_aggregation_interval_units_id);


/******************** Add Table: odmx.section_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.section_results
(
	result_id BIGINT NOT NULL,
	y_location FLOAT NULL,
	y_location_units_id INTEGER NULL,
	spatial_reference_id INTEGER NULL,
	intended_x_spacing FLOAT NULL,
	intended_x_spacing_units_id INTEGER NULL,
	intended_z_spacing FLOAT NULL,
	intended_z_spacing_units_id INTEGER NULL,
	intended_time_spacing FLOAT NULL,
	intended_time_spacing_units_id INTEGER NULL,
	aggregation_statistic_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.section_results ADD CONSTRAINT pk_section_results
	PRIMARY KEY (result_id);


/******************** Add Table: odmx.spectra_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.spectra_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.spectra_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value FLOAT NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL,
	excitation_wavelength FLOAT NOT NULL,
	emission_wavelength FLOAT NOT NULL,
	wavelength_units_id INTEGER NOT NULL,
	censor_code_cv VARCHAR NOT NULL,
	quality_code_cv VARCHAR NOT NULL,
	time_aggregation_interval DOUBLE PRECISION NOT NULL,
	time_aggregation_interval_units_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.spectra_result_values ADD CONSTRAINT pk_spectra_result_values
	PRIMARY KEY (value_id);

/* Add Unique Constraints */
ALTER TABLE odmx.spectra_result_values
	ADD CONSTRAINT uc_spectra_result_values UNIQUE (result_id, data_value, value_date_time, value_date_time_utc_offset, excitation_wavelength, emission_wavelength, wavelength_units_id, censor_code_cv, quality_code_cv, time_aggregation_interval, time_aggregation_interval_units_id);


/******************** Add Table: odmx.spectra_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.spectra_results
(
	result_id BIGINT NOT NULL,
	x_location FLOAT NULL,
	x_location_units_id INTEGER NULL,
	y_location FLOAT NULL,
	y_location_units_id INTEGER NULL,
	z_location FLOAT NULL,
	z_location_units_id INTEGER NULL,
	spatial_reference_id INTEGER NULL,
	intended_wavelength_spacing DOUBLE PRECISION NULL,
	intended_wavelength_spacing_units_id INTEGER NULL,
	aggregation_statistic_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.spectra_results ADD CONSTRAINT pk_spectra_results
	PRIMARY KEY (result_id);


/******************** Add Table: odmx.timeseries_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.timeseries_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.timeseries_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value FLOAT NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL,
	censor_code_cv VARCHAR NOT NULL,
	quality_code_cv VARCHAR NOT NULL,
	time_aggregation_interval FLOAT NOT NULL,
	time_aggregation_interval_units_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.timeseries_result_values ADD CONSTRAINT pk_timeseries_result_values
	PRIMARY KEY (value_id);

/* Add Unique Constraints */
ALTER TABLE odmx.timeseries_result_values
	ADD CONSTRAINT uc_timeseries_result_values UNIQUE (result_id, data_value, value_date_time, value_date_time_utc_offset, censor_code_cv, quality_code_cv, time_aggregation_interval, time_aggregation_interval_units_id);


/******************** Add Table: odmx.timeseries_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.timeseries_results
(
	result_id BIGINT NOT NULL,
	x_location FLOAT NULL,
	x_location_units_id INTEGER NULL,
	y_location FLOAT NULL,
	y_location_units_id INTEGER NULL,
	z_location FLOAT NULL,
	z_location_units_id INTEGER NULL,
	spatial_reference_id INTEGER NULL,
	intended_time_spacing FLOAT NULL,
	intended_time_spacing_units_id INTEGER NULL,
	aggregation_statistic_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.timeseries_results ADD CONSTRAINT pk_timeseries_results
	PRIMARY KEY (result_id);


/******************** Add Table: odmx.trajectory_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.trajectory_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.trajectory_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value FLOAT NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL,
	x_location FLOAT NOT NULL,
	x_location_units_id INTEGER NOT NULL,
	y_location FLOAT NOT NULL,
	y_location_units_id INTEGER NOT NULL,
	z_location FLOAT NOT NULL,
	z_location_units_id INTEGER NOT NULL,
	trajectory_distance FLOAT NOT NULL,
	trajectory_distance_aggregation_interval FLOAT NOT NULL,
	trajectory_distance_units_id INTEGER NOT NULL,
	censor_code_cv VARCHAR NOT NULL,
	quality_code_cv VARCHAR NOT NULL,
	time_aggregation_interval FLOAT NOT NULL,
	time_aggregation_interval_units_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.trajectory_result_values ADD CONSTRAINT pk_trajectory_result_values
	PRIMARY KEY (value_id);

/* Add Unique Constraints */
ALTER TABLE odmx.trajectory_result_values
	ADD CONSTRAINT uc_trajectory_result_values UNIQUE (result_id, data_value, value_date_time, value_date_time_utc_offset, x_location, x_location_units_id, y_location, y_location_units_id, z_location, z_location_units_id, trajectory_distance, trajectory_distance_aggregation_interval, trajectory_distance_units_id, censor_code_cv, quality_code_cv, time_aggregation_interval);


/******************** Add Table: odmx.trajectory_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.trajectory_results
(
	result_id BIGINT NOT NULL,
	spatial_reference_id INTEGER NULL,
	intended_trajectory_spacing FLOAT NULL,
	intended_trajectory_spacing_units_id INTEGER NULL,
	intended_time_spacing FLOAT NULL,
	intended_time_spacing_units_id INTEGER NULL,
	aggregation_statistic_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.trajectory_results ADD CONSTRAINT pk_trajectory_results
	PRIMARY KEY (result_id);


/******************** Add Table: odmx.transect_result_values ************************/

/* Build Table Structure */
CREATE TABLE odmx.transect_result_values
(
	value_id BIGINT DEFAULT nextval('odmx.transect_result_values_value_id_seq'::regclass) NOT NULL,
	result_id BIGINT NOT NULL,
	data_value FLOAT NOT NULL,
	value_date_time TIMESTAMP NOT NULL,
	value_date_time_utc_offset INTEGER NOT NULL,
	x_location FLOAT NOT NULL,
	x_location_units_id INTEGER NOT NULL,
	y_location FLOAT NOT NULL,
	y_location_units_id INTEGER NOT NULL,
	transect_distance FLOAT NOT NULL,
	transect_distance_aggregation_interval FLOAT NOT NULL,
	transect_distance_units_id INTEGER NOT NULL,
	censor_code_cv VARCHAR NOT NULL,
	quality_code_cv VARCHAR NOT NULL,
	aggregation_statistic_cv VARCHAR NOT NULL,
	time_aggregation_interval FLOAT NOT NULL,
	time_aggregation_interval_units_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.transect_result_values ADD CONSTRAINT pk_transect_result_values
	PRIMARY KEY (value_id);

/* Add Unique Constraints */
ALTER TABLE odmx.transect_result_values
	ADD CONSTRAINT uc_transect_result_values UNIQUE (result_id, data_value, value_date_time, value_date_time_utc_offset, x_location, x_location_units_id, y_location, y_location_units_id, transect_distance, transect_distance_aggregation_interval, transect_distance_units_id, censor_code_cv, quality_code_cv, aggregation_statistic_cv, time_aggregation_interval, time_aggregation_interval_units_id);


/******************** Add Table: odmx.transect_results ************************/

/* Build Table Structure */
CREATE TABLE odmx.transect_results
(
	result_id BIGINT NOT NULL,
	z_location FLOAT NULL,
	z_location_units_id INTEGER NULL,
	spatial_reference_id INTEGER NULL,
	intended_transect_spacing FLOAT NULL,
	intended_transect_spacing_units_id INTEGER NULL,
	intended_time_spacing FLOAT NULL,
	intended_time_spacing_units_id INTEGER NULL,
	aggregation_statistic_cv VARCHAR NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.transect_results ADD CONSTRAINT pk_transect_results
	PRIMARY KEY (result_id);


/******************** Add Table: odmx.calculated_datastream_expression ************************/

/* Build Table Structure */
CREATE TABLE odmx.calculated_datastream_expression
(
	calculated_datastream_expression_id INTEGER NOT NULL,
	datastream_id INTEGER NOT NULL,
	python_expression VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.calculated_datastream_expression ADD CONSTRAINT pk_calculated_datastream_expression
	PRIMARY KEY (calculated_datastream_expression_id);


/******************** Add Table: odmx.calibration_multiplier_offset ************************/

/* Build Table Structure */
CREATE TABLE odmx.calibration_multiplier_offset
(
	calibration_id INTEGER DEFAULT nextval('odmx.calibration_multiplier_offset_calibration_id_seq'::regclass) NOT NULL,
	data_source_id INTEGER NOT NULL,
	sensor_id INTEGER NOT NULL,
	parameter_name_in_table VARCHAR(100) NOT NULL,
	start_date_time_utc BIGINT NOT NULL,
	end_date_time_utc BIGINT NOT NULL,
	calibration_multiplier FLOAT NOT NULL,
	calibration_offset FLOAT NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.calibration_multiplier_offset ADD CONSTRAINT pk_calibration_multiplier_offset
	PRIMARY KEY (calibration_id);

/* Add Comments */
COMMENT ON TABLE odmx.calibration_multiplier_offset IS 'Table holding time dependent calibration multiplier and offset dates';


/******************** Add Table: odmx.conversion_multiplier_offset ************************/

/* Build Table Structure */
CREATE TABLE odmx.conversion_multiplier_offset
(
	conversion_multiplier_offset_id INTEGER NOT NULL,
	datasource_id INTEGER NOT NULL,
	sensor_id BIGINT NOT NULL,
	parameter_name_in_table VARCHAR(100) NOT NULL,
	start_date_time_utc BIGINT NOT NULL,
	end_date_time_utc BIGINT NOT NULL,
	conversion_multiplier FLOAT NOT NULL,
	conversion_offset FLOAT NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.conversion_multiplier_offset ADD CONSTRAINT pk_conversion_multiplier_offset
	PRIMARY KEY (conversion_multiplier_offset_id);


/******************** Add Table: odmx.data_channel ************************/

/* Build Table Structure */
CREATE TABLE odmx.data_channel
(
	data_channel_id INTEGER DEFAULT nextval('odmx.data_channel_data_channel_id_seq'::regclass) NOT NULL,
	source_datastream_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.data_channel ADD CONSTRAINT pk_data_channel
	PRIMARY KEY (data_channel_id);


/******************** Add Table: odmx.datasource_description ************************/

/* Build Table Structure */
CREATE TABLE odmx.datasource_description
(
	datasource_id INTEGER DEFAULT nextval('odmx.datasource_description_datasource_id_seq'::regclass) NOT NULL,
	datasource_timezone VARCHAR(100) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	datasource_path VARCHAR NULL,
	feeder_database VARCHAR NOT NULL,
	feeder_schema VARCHAR NOT NULL,
	datasource_characterization VARCHAR NULL,
	datatable_name VARCHAR NOT NULL,
	odmx_database VARCHAR NOT NULL,
	materialized_view_schema VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.datasource_description ADD CONSTRAINT pk_datasource_description
	PRIMARY KEY (datasource_id);

/* Add Comments */
COMMENT ON COLUMN odmx.datasource_description.datasource_timezone IS 'will come from CV';

COMMENT ON COLUMN odmx.datasource_description.sampling_feature_id IS 'SamolingfeatureID that the datasource is associated with';

COMMENT ON COLUMN odmx.datasource_description.datasource_path IS 'The Filename of the file which will be ingested for this datasource. Different files may have different rules. ';

COMMENT ON COLUMN odmx.datasource_description.feeder_database IS 'Feeder database that original data is stored in ';

COMMENT ON COLUMN odmx.datasource_description.feeder_schema IS 'Schema for original data datasource';

COMMENT ON COLUMN odmx.datasource_description.datatable_name IS 'Name of datatable. This is the same in datasource and Foreign Data Wrapper Databases';

COMMENT ON COLUMN odmx.datasource_description.odmx_database IS 'Foreign Data Wrapper Database name Typically ODMX project db';

COMMENT ON COLUMN odmx.datasource_description.materialized_view_schema IS 'Foreign data wrapper schema';


/******************** Add Table: odmx.datastream_person_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.datastream_person_bridge
(
	bridge_id INTEGER NOT NULL,
	datastream_id INTEGER NOT NULL,
	person_id INTEGER NOT NULL,
	person_role VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.datastream_person_bridge ADD CONSTRAINT pk_datastream_person_bridge
	PRIMARY KEY (bridge_id);


/******************** Add Table: odmx.datastream_provenance ************************/

/* Build Table Structure */
CREATE TABLE odmx.datastream_provenance
(
	datastream_provenance_id INTEGER DEFAULT nextval('odmx.datastream_provenance_datastream_provenance_id_seq'::regclass) NOT NULL,
	datastream_provenance_type VARCHAR NULL,
	datastream_provenance_description VARCHAR NULL,
	datastream_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.datastream_provenance ADD CONSTRAINT pk_datastream_provenance
	PRIMARY KEY (datastream_provenance_id);

/* Add Comments */
COMMENT ON COLUMN odmx.datastream_provenance.datastream_provenance_type IS 'A cv describing the provenance type';

COMMENT ON COLUMN odmx.datastream_provenance.datastream_provenance_description IS 'A free form text which allows us to describe more in detail the provenance of this datastream';

COMMENT ON TABLE odmx.datastream_provenance IS 'A table which provides information on the provenance associated with a datastream';


/******************** Add Table: odmx.datastream_provenance_files ************************/

/* Build Table Structure */
CREATE TABLE odmx.datastream_provenance_files
(
	datastream_provenance_file_id INTEGER DEFAULT nextval('odmx.datastream_provenance_files_datastream_provenance_file_id_seq'::regclass) NOT NULL,
	datastream_id INTEGER NULL,
	equipment_id INTEGER NULL,
	file_storage_name VARCHAR NOT NULL,
	file_storage_path VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.datastream_provenance_files ADD CONSTRAINT pk_datastream_provenance_files
	PRIMARY KEY (datastream_provenance_file_id);

/* Add Comments */
COMMENT ON TABLE odmx.datastream_provenance_files IS 'A link between files, datastreamids and instruments';


/******************** Add Table: odmx.phenocam_calculated_channel ************************/

/* Build Table Structure */
CREATE TABLE odmx.phenocam_calculated_channel
(
	phenocam_calculated_channel_id INTEGER DEFAULT nextval('odmx.phenocam_calculated_channel_phenocam_calculated_channel_id_seq'::regclass) NOT NULL,
	phenocam_location_id BIGINT NOT NULL,
	phenocam_cube_id BIGINT NOT NULL,
	datastream_id INTEGER NOT NULL,
	calculationarea_xcoord_top_left INTEGER NOT NULL,
	calculationarea_ycoord_top_left INTEGER NOT NULL,
	calculationarea_xcoord_top_right INTEGER NOT NULL,
	calculationarea_ycoord_top_right INTEGER NOT NULL,
	calculationarea_xcoord_bottom_right INTEGER NOT NULL,
	calculationarea_ycoord_bottom_right INTEGER NOT NULL,
	calculationarea_xcoord_bottom_left INTEGER NOT NULL,
	calculationarea_ycoord_bottom_left INTEGER NOT NULL,
	phenocam_channel VARCHAR(100) NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.phenocam_calculated_channel ADD CONSTRAINT pk_phenocam_calculated_channel
	PRIMARY KEY (phenocam_calculated_channel_id);

/* Add Comments */
COMMENT ON COLUMN odmx.phenocam_calculated_channel.datastream_id IS 'The ID of the datastream that is calculated';

COMMENT ON TABLE odmx.phenocam_calculated_channel IS 'A table which holds detail on calculated phenocamchannels';


/******************** Add Table: odmx.phenocam_cubes ************************/

/* Build Table Structure */
CREATE TABLE odmx.phenocam_cubes
(
	phenocam_cube_id INTEGER DEFAULT nextval('odmx.phenocam_cubes_phenocam_cube_id_seq'::regclass) NOT NULL,
	phenocam_dataset_id INTEGER NOT NULL,
	filter_setting1 VARCHAR(100) NULL,
	filter_setting2 VARCHAR(100) NULL,
	filter_setting3 BIGINT NULL,
	cubefile_directory_on_server VARCHAR NOT NULL,
	phenocam_cube_file_name_on_server VARCHAR(200) NOT NULL,
	first_image_datetime_utc TIMESTAMP NOT NULL,
	last_image_datetime_utc TIMESTAMP NOT NULL,
	number_images_in_cube INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.phenocam_cubes ADD CONSTRAINT pk_phenocam_cubes
	PRIMARY KEY (phenocam_cube_id);

/* Add Comments */
COMMENT ON COLUMN odmx.phenocam_cubes.phenocam_cube_id IS 'This is the unique ID of a PhenocamCube which was generated by processing a series of Phenocam Images';

COMMENT ON COLUMN odmx.phenocam_cubes.phenocam_dataset_id IS 'The id of the phenocam dataset. The dataset is a series of images associated with a specific camera';

COMMENT ON COLUMN odmx.phenocam_cubes.filter_setting1 IS 'A first filter setting. For now placeholder';

COMMENT ON COLUMN odmx.phenocam_cubes.filter_setting2 IS 'The second filter setting. For now placeholder';

COMMENT ON COLUMN odmx.phenocam_cubes.filter_setting3 IS 'The third Filter setting. For now placeholder';


/******************** Add Table: odmx.phenocam_data ************************/

/* Build Table Structure */
CREATE TABLE odmx.phenocam_data
(
	phenocam_dataset_id INTEGER DEFAULT nextval('odmx.phenocam_data_phenocam_dataset_id_seq'::regclass) NOT NULL,
	paf_project_id INTEGER NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	deployment_year INTEGER NOT NULL,
	first_image_datetime_utc TIMESTAMP NOT NULL,
	last_image_datetime_utc TIMESTAMP NOT NULL,
	images_in_dataset INTEGER NOT NULL,
	google_drive_folder_id VARCHAR NOT NULL,
	location_description VARCHAR NULL,
	camera_direction_angle FLOAT NOT NULL,
	camera_elevation_angle FLOAT NULL,
	camera_height FLOAT NULL,
	top_left_corner_image_lat FLOAT NULL,
	top_left_corner_image_long FLOAT NULL,
	top_right_corner_image_lat FLOAT NULL,
	top_right_corner_image_long FLOAT NULL,
	bottom_left_corner_image_lat FLOAT NULL,
	bottom_left_corner_image_long FLOAT NULL,
	bottom_right_corner_image_lat FLOAT NULL,
	bottom_right_corner_image_long FLOAT NULL,
	center_point_image_lat FLOAT NULL,
	center_point_image_long FLOAT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.phenocam_data ADD CONSTRAINT pk_phenocam_data
	PRIMARY KEY (phenocam_dataset_id);

/* Add Comments */
COMMENT ON COLUMN odmx.phenocam_data.camera_direction_angle IS 'The angle in degrees from North of the axis of the phenocam';

COMMENT ON COLUMN odmx.phenocam_data.camera_elevation_angle IS 'The angle (relative to horizontal) of the camera. Positive is looking up. Negative is looking down';


/******************** Add Table: odmx.phenocam_imgs ************************/

/* Build Table Structure */
CREATE TABLE odmx.phenocam_imgs
(
	phenocam_image_id BIGINT DEFAULT nextval('odmx.phenocam_imgs_phenocam_image_id_seq'::regclass) NOT NULL,
	phenocam_dataset_id INTEGER NOT NULL,
	phenocam_equipment_id INTEGER NULL,
	phenocam_image_name VARCHAR(200) NULL,
	observation_time_utc TIMESTAMP NULL,
	google_drive_id VARCHAR NOT NULL,
	image_width INTEGER NOT NULL,
	image_height INTEGER NOT NULL,
	image_rotation FLOAT NULL,
	exposure_time FLOAT NULL,
	aperture FLOAT NULL,
	flash_used BOOL NULL,
	focal_length FLOAT NULL,
	iso_speed INTEGER NULL,
	metering_mode VARCHAR NULL,
	sensor VARCHAR NULL,
	exposure_mode VARCHAR NULL,
	color_space VARCHAR NULL,
	white_balance VARCHAR NULL,
	exposure_bias FLOAT NULL,
	max_aperture_value FLOAT NULL,
	flag VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.phenocam_imgs ADD CONSTRAINT pk_phenocam_imgs
	PRIMARY KEY (phenocam_image_id);

/* Add Comments */
COMMENT ON COLUMN odmx.phenocam_imgs.phenocam_image_id IS 'The unique ID of a phenocamimage';

COMMENT ON COLUMN odmx.phenocam_imgs.phenocam_image_name IS 'The name of the phenocam image file. Note that does not need to be unique';

COMMENT ON COLUMN odmx.phenocam_imgs.observation_time_utc IS 'Date when the image was collected';

COMMENT ON COLUMN odmx.phenocam_imgs.google_drive_id IS 'The google drive ID of the file';


/******************** Add Table: odmx.qaqc_detail ************************/

/* Build Table Structure */
CREATE TABLE odmx.qaqc_detail
(
	qaq_detail_log_id INTEGER DEFAULT nextval('odmx.qaqc_detail_qaq_detail_log_id_seq'::regclass) NOT NULL,
	qaqc_log_id INTEGER NOT NULL,
	qaqc_detail VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.qaqc_detail ADD CONSTRAINT pk_qaqc_detail
	PRIMARY KEY (qaq_detail_log_id);

/* Add Comments */
COMMENT ON COLUMN odmx.qaqc_detail.qaqc_log_id IS 'Foreign key on QAQCLog table';

COMMENT ON TABLE odmx.qaqc_detail IS 'A table which provides for a free form entry of the QAQC Detail which can be used for reportin';


/******************** Add Table: odmx.qaqc_log ************************/

/* Build Table Structure */
CREATE TABLE odmx.qaqc_log
(
	qaqc_log_id INTEGER NOT NULL,
	datastream_id INTEGER NOT NULL,
	utc_time_start BIGINT NOT NULL,
	utc_time_end BIGINT NOT NULL,
	utc_time_entry BIGINT NOT NULL,
	qa_flag VARCHAR(1) NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.qaqc_log ADD CONSTRAINT pk_qaqc_log
	PRIMARY KEY (qaqc_log_id);

/* Add Comments */
COMMENT ON COLUMN odmx.qaqc_log.datastream_id IS 'The datastream that this entry refers to';

COMMENT ON COLUMN odmx.qaqc_log.utc_time_start IS 'the start of the Utctime where this log entry applies to. This allows us to mark contigous bloicks of data (e.g. our or range)';

COMMENT ON COLUMN odmx.qaqc_log.utc_time_end IS 'the end of the Utctime where this value applies to
The end of the Utctime where this log entry applies to';

COMMENT ON COLUMN odmx.qaqc_log.utc_time_entry IS 'The UTC time when we made the entry. Note that this is updated if the issue persists';

COMMENT ON COLUMN odmx.qaqc_log.qa_flag IS 'The QAQC Flag that the entry refers to';

COMMENT ON TABLE odmx.qaqc_log IS 'This table holds a log of qaqc issues. It is used for logging when things happen, and can be used in the alert architecture';


/******************** Add Table: odmx.sampling_feature_timeseries_datastreams ************************/

/* Build Table Structure */
CREATE TABLE odmx.sampling_feature_timeseries_datastreams
(
	datastream_id INTEGER DEFAULT nextval('odmx.sampling_feature_timeseries_datastreams_datastream_id_seq'::regclass) NOT NULL,
	datastream_uuid VARCHAR NULL,
	equipment_id INTEGER NULL,
	sampling_feature_id INTEGER NOT NULL,
	datastream_type VARCHAR NOT NULL,
	variable_id INTEGER NOT NULL,
	units_id INTEGER NOT NULL,
	datastream_database VARCHAR NULL,
	datastream_tablename VARCHAR NOT NULL,
	first_measurement_date TIMESTAMP NULL,
	last_measurement_date TIMESTAMP NULL,
	total_measurement_numbers BIGINT NULL,
	datastream_attribute VARCHAR NULL,
	datastream_access_level VARCHAR NULL,
	datastream_source_category VARCHAR NULL,
	datastream_classifier VARCHAR NULL
);

/* Add Primary Key */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT pk_sampling_feature_timeseries_datastreams
	PRIMARY KEY (datastream_id);

/* Add Comments */
COMMENT ON COLUMN odmx.sampling_feature_timeseries_datastreams.datastream_database IS 'The database which holds the DatastreamTable';

COMMENT ON COLUMN odmx.sampling_feature_timeseries_datastreams.datastream_attribute IS 'An optional text string which can be used to provide clarification in labeling on the datastream';

COMMENT ON TABLE odmx.sampling_feature_timeseries_datastreams IS 'This table contains timeseriesdata associated with different samplingfeatures';

/* Add Indexes */
CREATE UNIQUE INDEX sampling_feature_timeseries_datastreams_datastream_tablename_idx ON odmx.sampling_feature_timeseries_datastreams (datastream_tablename);


/******************** Add Table: odmx.timeseries_datastream_template ************************/

/* Build Table Structure */
CREATE TABLE odmx.timeseries_datastream_template
(
	utc_time BIGINT NOT NULL,
	data_value DOUBLE PRECISION NULL,
	qa_flag VARCHAR(1) NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.timeseries_datastream_template ADD CONSTRAINT pk_timeseries_datastream_template
	PRIMARY KEY (utc_time);

/* Add Comments */
COMMENT ON TABLE odmx.timeseries_datastream_template IS 'This table is a template for timeseriesdatastreams';


/******************** Add Table: odmx.variable_qa_min_max ************************/

/* Build Table Structure */
CREATE TABLE odmx.variable_qa_min_max
(
	variable_qa_min_max_id INTEGER DEFAULT nextval('odmx.variable_qa_min_max_variable_qa_min_max_id_seq'::regclass) NOT NULL,
	variable_id INTEGER NOT NULL,
	variable_term VARCHAR NOT NULL,
	min_valid_range FLOAT NOT NULL,
	max_valid_range FLOAT NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.variable_qa_min_max ADD CONSTRAINT pk_variable_qa_min_max
	PRIMARY KEY (variable_qa_min_max_id);

/* Add Comments */
COMMENT ON COLUMN odmx.variable_qa_min_max.variable_term IS 'The Variable Term ';

COMMENT ON COLUMN odmx.variable_qa_min_max.min_valid_range IS 'The Minimum of the Valid Range';

COMMENT ON COLUMN odmx.variable_qa_min_max.max_valid_range IS 'The  maximum of the valid range
The maximum of the valid range';

COMMENT ON TABLE odmx.variable_qa_min_max IS 'This table has the min and max values used for the QA/QC effort';


/******************** Add Table: odmx.soilprobe_monitoring ************************/

/* Build Table Structure */
CREATE TABLE odmx.soilprobe_monitoring
(
	soilprobe_monitoring_id INTEGER DEFAULT nextval('odmx.soilprobe_monitoring_soilprobe_monitoring_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	monitoring_survey_name VARCHAR(512) NOT NULL,
	first_measurement_date TIMESTAMP NOT NULL,
	last_measurement_date TIMESTAMP NOT NULL,
	ert_system_id VARCHAR(512) NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.soilprobe_monitoring ADD CONSTRAINT pk_soilprobe_monitoring
	PRIMARY KEY (soilprobe_monitoring_id);

/* Add Comments */
COMMENT ON COLUMN odmx.soilprobe_monitoring.sampling_feature_id IS 'This is the samplinfeatureid that the monitoring sruvey is associated with';

COMMENT ON COLUMN odmx.soilprobe_monitoring.monitoring_survey_name IS 'the name of the monitoring survey';

COMMENT ON TABLE odmx.soilprobe_monitoring IS 'this table keeps track of monitoring surveys';


/******************** Add Table: odmx.soilprobe_monitoring_ert_datastream ************************/

/* Build Table Structure */
CREATE TABLE odmx.soilprobe_monitoring_ert_datastream
(
	soilprobe_monitoring_ert_datastream_id INTEGER DEFAULT nextval('odmx.soilprobe_monitoring_ert_datastream_soilprobe_monitoring_ert_datastream_id_seq'::regclass) NOT NULL,
	soilprobe_monitoring_id INTEGER NOT NULL,
	datastream_id INTEGER NOT NULL,
	a_well INTEGER NOT NULL,
	a_electrode INTEGER NOT NULL,
	b_well INTEGER NOT NULL,
	b_electrode INTEGER NOT NULL,
	m_well INTEGER NOT NULL,
	m_electrode INTEGER NOT NULL,
	n_well INTEGER NOT NULL,
	n_electrode INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.soilprobe_monitoring_ert_datastream ADD CONSTRAINT pk_soilprobe_monitoring_ert_datastream
	PRIMARY KEY (soilprobe_monitoring_ert_datastream_id);


/******************** Add Table: odmx.soilprobe_monitoring_temperature_datastream ************************/

/* Build Table Structure */
CREATE TABLE odmx.soilprobe_monitoring_temperature_datastream
(
	soilprobe_monitoring_temperature_datastream_id INTEGER DEFAULT nextval('odmx.soilprobe_monitoring_temperature_datastream_soilprobe_monitoring_temperature_datastream_id_seq'::regclass) NOT NULL,
	soilprobe_monitoring_id INTEGER NOT NULL,
	datastream_id INTEGER NOT NULL,
	sensor_depth_meters FLOAT NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.soilprobe_monitoring_temperature_datastream ADD CONSTRAINT pk_soilprobe_monitoring_temperature_datastream
	PRIMARY KEY (soilprobe_monitoring_temperature_datastream_id);


/******************** Add Table: odmx.survey_electrode_geometry ************************/

/* Build Table Structure */
CREATE TABLE odmx.survey_electrode_geometry
(
	survey_electrode_geometry_id INTEGER DEFAULT nextval('odmx.survey_electrode_geometry_survey_electrode_geometry_id_seq'::regclass) NOT NULL,
	soilprobe_monitoring_id INTEGER NOT NULL,
	electrode_well INTEGER NOT NULL,
	electrode_number INTEGER NOT NULL,
	x_coordinate_meters FLOAT NOT NULL,
	y_coordinate_meters FLOAT NOT NULL,
	z_coordinate_meters FLOAT NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.survey_electrode_geometry ADD CONSTRAINT pk_survey_electrode_geometry
	PRIMARY KEY (survey_electrode_geometry_id);


/******************** Add Table: odmx.features_of_interest ************************/

/* Build Table Structure */
CREATE TABLE odmx.features_of_interest
(
	features_of_interest_id INTEGER DEFAULT nextval('odmx.features_of_interest_features_of_interest_id_seq'::regclass) NOT NULL,
	features_of_interest_type_cv VARCHAR NOT NULL,
	features_of_interest_name VARCHAR NOT NULL,
	features_of_interest_description VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.features_of_interest ADD CONSTRAINT pk_features_of_interest
	PRIMARY KEY (features_of_interest_id);


/******************** Add Table: odmx.related_features ************************/

/* Build Table Structure */
CREATE TABLE odmx.related_features
(
	relation_id INTEGER DEFAULT nextval('odmx.related_features_relation_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	related_feature_id INTEGER NOT NULL,
	spatial_offset_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.related_features ADD CONSTRAINT pk_related_features
	PRIMARY KEY (relation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.related_features.relation_id IS 'Primary key for a relationship table (i.e. named "Related...").';

COMMENT ON COLUMN odmx.related_features.sampling_feature_id IS 'Foregn key identifier of a Sampling Feature';

COMMENT ON COLUMN odmx.related_features.relationship_type_cv IS 'CV term describing the relationship between SamplingFeatures (e.g., is_child_of, is_fraction_of or is_composite_of).';

COMMENT ON COLUMN odmx.related_features.related_feature_id IS 'Foreign key identifier of a Sampling Feature that is the parent of the current Sampling Feature';

COMMENT ON COLUMN odmx.related_features.spatial_offset_id IS 'Foreign key identifier of a spatial offset from the feature parent';

COMMENT ON TABLE odmx.related_features IS 'Describes parrent/child relationships among Sampling Features';


/******************** Add Table: odmx.sampled_features ************************/

/* Build Table Structure */
CREATE TABLE odmx.sampled_features
(
	relation_id INTEGER NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	feature_of_interest_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.sampled_features ADD CONSTRAINT pk_sampled_features
	PRIMARY KEY (relation_id);

/* Add Comments */
COMMENT ON COLUMN odmx.sampled_features.relation_id IS 'Primary key for a relationship table';

COMMENT ON COLUMN odmx.sampled_features.sampling_feature_id IS 'Foregn key identifier of a Sampling Feature';

COMMENT ON COLUMN odmx.sampled_features.relationship_type_cv IS 'CV term describing the relationship between FeaturesOfInterst and SamplingFeatures (e.g., is_sample_of).';

COMMENT ON COLUMN odmx.sampled_features.feature_of_interest_id IS 'Foregn key identifier of a Feature of Interest';


/******************** Add Table: odmx.spatial_offsets ************************/

/* Build Table Structure */
CREATE TABLE odmx.spatial_offsets
(
	spatial_offset_id INTEGER DEFAULT nextval('odmx.spatial_offsets_spatial_offset_id_seq'::regclass) NOT NULL,
	spatial_offset_type_cv VARCHAR NOT NULL,
	offset1_value FLOAT NOT NULL,
	offset1_unit_id INTEGER NOT NULL,
	offset2_value FLOAT NULL,
	offset2_unit_id INTEGER NULL,
	offset3_value FLOAT NULL,
	offset3_unit_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.spatial_offsets ADD CONSTRAINT pk_spatial_offsets
	PRIMARY KEY (spatial_offset_id);

/* Add Comments */
COMMENT ON COLUMN odmx.spatial_offsets.spatial_offset_id IS 'Primary Key of SpatialOffset';

COMMENT ON COLUMN odmx.spatial_offsets.spatial_offset_type_cv IS 'Type of SpatialOffset, such as Depth, DepthInterval, HorizaontalRadial';

COMMENT ON COLUMN odmx.spatial_offsets.offset1_value IS 'Numerical value for 1st SpatialOffset, which is defined by SpatialOffsetType';

COMMENT ON COLUMN odmx.spatial_offsets.offset1_unit_id IS 'Units for 1st SpatialOffset, which is defined by SpatialOffsetType';

COMMENT ON COLUMN odmx.spatial_offsets.offset2_value IS 'Numerical value for 2nd SpatialOffset, which is defined by SpatialOffsetType';

COMMENT ON COLUMN odmx.spatial_offsets.offset2_unit_id IS 'Units for 2nd SpatialOffset, which is defined by SpatialOffsetType';

COMMENT ON COLUMN odmx.spatial_offsets.offset3_value IS 'Numerical value for 3rd SpatialOffset, which is defined by SpatialOffsetType';

COMMENT ON COLUMN odmx.spatial_offsets.offset3_unit_id IS 'Units for 3rd SpatialOffset, which is defined by SpatialOffsetType';

COMMENT ON TABLE odmx.spatial_offsets IS 'An explicit spatial relationship between a sampling feature relative to it''s parent.';


/******************** Add Table: odmx.spatial_references ************************/

/* Build Table Structure */
CREATE TABLE odmx.spatial_references
(
	spatial_reference_id INTEGER DEFAULT nextval('odmx.spatial_references_spatial_reference_id_seq'::regclass) NOT NULL,
	srs_code VARCHAR NULL,
	srs_name VARCHAR NOT NULL,
	srs_description VARCHAR NULL,
	srs_link VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.spatial_references ADD CONSTRAINT pk_spatial_references
	PRIMARY KEY (spatial_reference_id);

/* Add Comments */
COMMENT ON COLUMN odmx.spatial_references.spatial_reference_id IS 'Unique identifier';

COMMENT ON COLUMN odmx.spatial_references.srs_code IS 'SRS code for the spatial reference system';

COMMENT ON COLUMN odmx.spatial_references.srs_name IS 'Text name of the spatial reference system';

COMMENT ON COLUMN odmx.spatial_references.srs_description IS 'Text notes describing the spatial reference system';

COMMENT ON COLUMN odmx.spatial_references.srs_link IS 'A link to a description of or a formal specification of the spatial reference system.';

COMMENT ON TABLE odmx.spatial_references IS 'Describes spatial reference systems used to reference the coordinates for sites';


/******************** Add Table: odmx.specimen_collection ************************/

/* Build Table Structure */
CREATE TABLE odmx.specimen_collection
(
	specimen_collection_id INTEGER DEFAULT nextval('odmx.specimen_collection_specimen_collection_id_seq'::regclass) NOT NULL,
	specimen_collection_cv VARCHAR NOT NULL,
	specimen_collection_file VARCHAR NULL,
	specimen_collection_name VARCHAR NULL,
	specimen_collection_note VARCHAR NULL,
	parent_specimen_collection_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.specimen_collection ADD CONSTRAINT pk_specimen_collection
	PRIMARY KEY (specimen_collection_id);

/* Add Comments */
COMMENT ON COLUMN odmx.specimen_collection.specimen_collection_id IS 'Primary Key for the Specimen Collection';

COMMENT ON COLUMN odmx.specimen_collection.specimen_collection_cv IS 'A CV term defining the specimen collection';

COMMENT ON COLUMN odmx.specimen_collection.specimen_collection_name IS 'The name of the specimen collection';

COMMENT ON COLUMN odmx.specimen_collection.specimen_collection_note IS 'Note describing details on the specimen collection';

COMMENT ON COLUMN odmx.specimen_collection.parent_specimen_collection_id IS 'The ID of the Parent Specimen Collection';

COMMENT ON TABLE odmx.specimen_collection IS 'This has the specimen collection information';


/******************** Add Table: odmx.specimen_taxonomic_classifiers ************************/

/* Build Table Structure */
CREATE TABLE odmx.specimen_taxonomic_classifiers
(
	bridge_id INTEGER DEFAULT nextval('odmx.specimen_taxonomic_classifiers_bridge_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	taxonomic_classifier_id INTEGER NOT NULL,
	citation_id INTEGER NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.specimen_taxonomic_classifiers ADD CONSTRAINT pk_specimen_taxonomic_classifiers
	PRIMARY KEY (bridge_id);

/* Add Comments */
COMMENT ON COLUMN odmx.specimen_taxonomic_classifiers.bridge_id IS 'Primary key for a bridge table, enabling many-to-many joins.';

COMMENT ON COLUMN odmx.specimen_taxonomic_classifiers.sampling_feature_id IS 'Foreign key to SamplingFeatures.Specimens.';

COMMENT ON COLUMN odmx.specimen_taxonomic_classifiers.taxonomic_classifier_id IS 'Foreign key to TaxonomicClassifiers.';

COMMENT ON COLUMN odmx.specimen_taxonomic_classifiers.citation_id IS 'Foreign key to the attribution, or Citation, for the classification.';

COMMENT ON TABLE odmx.specimen_taxonomic_classifiers IS 'This cross-reference table allows Taxonomic Classification of Specimens as an annotation, rather than as a Result.';


/******************** Add Table: odmx.specimen_to_specimen_collection_bridge ************************/

/* Build Table Structure */
CREATE TABLE odmx.specimen_to_specimen_collection_bridge
(
	specimen_to_specimen_collection_bridge_id INTEGER DEFAULT nextval('odmx.specimen_to_specimen_collection_bridge_specimen_to_specimen_collection_bridge_id_seq'::regclass) NOT NULL,
	sampling_feature_id INTEGER NOT NULL,
	specimen_collection_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE odmx.specimen_to_specimen_collection_bridge ADD CONSTRAINT pk_specimen_to_specimen_collection_bridge
	PRIMARY KEY (specimen_to_specimen_collection_bridge_id);

/* Add Comments */
COMMENT ON TABLE odmx.specimen_to_specimen_collection_bridge IS 'this is a bridge between specimens and specimencollections';


/******************** Add Table: odmx.specimens ************************/

/* Build Table Structure */
CREATE TABLE odmx.specimens
(
	sampling_feature_id INTEGER NOT NULL,
	specimen_type_cv VARCHAR NOT NULL,
	specimen_medium_cv VARCHAR NOT NULL,
	is_field_specimen BOOL NOT NULL,
	specimen_collection_date_time TIMESTAMP NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.specimens ADD CONSTRAINT pk_specimens
	PRIMARY KEY (sampling_feature_id);

/* Add Comments */
COMMENT ON COLUMN odmx.specimens.sampling_feature_id IS 'Foreign key identifier for the Sampling Feature that is the specimen';

COMMENT ON COLUMN odmx.specimens.specimen_type_cv IS 'A CV term defining the type of specimen (e.g., aquatic sample, core, etc.)';

COMMENT ON COLUMN odmx.specimens.specimen_medium_cv IS 'A CV term defining the medium of the specimen (i.e. water, sediment, etc.)';

COMMENT ON COLUMN odmx.specimens.is_field_specimen IS 'A boolean indicating whether the specimen was collected in the field';

COMMENT ON COLUMN odmx.specimens.specimen_collection_date_time IS 'The UTC date and time that the specimen was collected at ';

COMMENT ON TABLE odmx.specimens IS 'Equivalent to O&M Sampling Feature Type specimen.  Describes physical samples or specimens.';


/******************** Add Table: odmx.model_affiliations ************************/

/* Build Table Structure */
CREATE TABLE odmx.model_affiliations
(
	bridge_id INTEGER DEFAULT nextval('odmx.model_affiliations_bridge_id_seq'::regclass) NOT NULL,
	model_id INTEGER NOT NULL,
	affiliation_id INTEGER NOT NULL,
	is_primary BOOL DEFAULT False NOT NULL,
	role_description VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.model_affiliations ADD CONSTRAINT pk_model_affiliations
	PRIMARY KEY (bridge_id);


/******************** Add Table: odmx.models ************************/

/* Build Table Structure */
CREATE TABLE odmx.models
(
	model_id INTEGER DEFAULT nextval('odmx.models_model_id_seq'::regclass) NOT NULL,
	model_code VARCHAR NOT NULL,
	model_name VARCHAR NOT NULL,
	model_description VARCHAR NULL,
	version VARCHAR NULL,
	model_link VARCHAR NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.models ADD CONSTRAINT pk_models
	PRIMARY KEY (model_id);

/* Add Comments */
COMMENT ON COLUMN odmx.models.model_link IS 'Unique identifier';

/* Add Unique Constraints */
ALTER TABLE odmx.models
	ADD CONSTRAINT uc_model_code UNIQUE (model_code);


/******************** Add Table: odmx.related_models ************************/

/* Build Table Structure */
CREATE TABLE odmx.related_models
(
	related_id INTEGER DEFAULT nextval('odmx.related_models_related_id_seq'::regclass) NOT NULL,
	model_id INTEGER NOT NULL,
	relationship_type_cv VARCHAR NOT NULL,
	related_model_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.related_models ADD CONSTRAINT pk_related_models
	PRIMARY KEY (related_id);


/******************** Add Table: odmx.simulations ************************/

/* Build Table Structure */
CREATE TABLE odmx.simulations
(
	simulation_id INTEGER DEFAULT nextval('odmx.simulations_simulation_id_seq'::regclass) NOT NULL,
	action_id INTEGER NOT NULL,
	simulation_name VARCHAR NOT NULL,
	simulation_description VARCHAR NULL,
	simulation_start_date_time TIMESTAMP NOT NULL,
	simulation_start_date_time_utc_offset INTEGER NOT NULL,
	simulation_end_date_time TIMESTAMP NOT NULL,
	simulation_end_date_time_utc_offset INTEGER NOT NULL,
	time_step_value FLOAT NOT NULL,
	time_step_units_id INTEGER NOT NULL,
	input_data_set_id INTEGER NULL,
	model_id INTEGER NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE odmx.simulations ADD CONSTRAINT pk_simulations
	PRIMARY KEY (simulation_id);



/* Remove Schemas */





/************ Add Foreign Keys ***************/

/* Add Foreign Key: fk_ActionAnnotations_Actions */
ALTER TABLE odmx.action_annotations ADD CONSTRAINT fk_action_annotations_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ActionAnnotations_Annotations */
ALTER TABLE odmx.action_annotations ADD CONSTRAINT fk_action_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Annotations_CV_AnnotationType */
ALTER TABLE odmx.annotations ADD CONSTRAINT fk_annotations_cv_annotation_type
	FOREIGN KEY (annotation_type_cv) REFERENCES odmx.cv_annotation_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Annotations_Citations */
ALTER TABLE odmx.annotations ADD CONSTRAINT fk_annotations_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Annotations_People */
ALTER TABLE odmx.annotations ADD CONSTRAINT fk_annotations_people
	FOREIGN KEY (annotator_id) REFERENCES odmx.persons (person_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CategoricalResultValueAnnotations_Annotations */
ALTER TABLE odmx.categorical_result_value_annotations ADD CONSTRAINT fk_categorical_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CategoricalResultValueAnnotations_CategoricalResultValues */
ALTER TABLE odmx.categorical_result_value_annotations ADD CONSTRAINT fk_categorical_result_value_annotations_categorical_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.categorical_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentAnnotations_Annotations */
ALTER TABLE odmx.equipment_annotations ADD CONSTRAINT fk_equipment_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentAnnotations_Equipment */
ALTER TABLE odmx.equipment_annotations ADD CONSTRAINT fk_equipment_annotations_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MeasurementResultValueAnnotations_MeasurementResultValues */
ALTER TABLE odmx.measurement_result_value_annotations ADD CONSTRAINT fk_measurement_result_value_annotations_measurement_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.measurement_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultValueAnnotations_Annotations */
ALTER TABLE odmx.measurement_result_value_annotations ADD CONSTRAINT fk_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodAnnotations_Annotations */
ALTER TABLE odmx.method_annotations ADD CONSTRAINT fk_method_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodAnnotations_Methods */
ALTER TABLE odmx.method_annotations ADD CONSTRAINT fk_method_annotations_methods
	FOREIGN KEY (method_id) REFERENCES odmx.methods (method_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PointCoverageResultValueAnnotations_Annotations */
ALTER TABLE odmx.point_coverage_result_value_annotations ADD CONSTRAINT fk_point_coverage_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PointCoverageResultValueAnnotations_PointCoverageResultValues */
ALTER TABLE odmx.point_coverage_result_value_annotations ADD CONSTRAINT fk_point_coverage_result_value_annotations_point_coverage_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.point_coverage_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ProfileResultValueAnnotations_Annotations */
ALTER TABLE odmx.profile_result_value_annotations ADD CONSTRAINT fk_profile_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ProfileResultValueAnnotations_ProfileResultValues */
ALTER TABLE odmx.profile_result_value_annotations ADD CONSTRAINT fk_profile_result_value_annotations_profile_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.profile_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultAnnotations_Annotations */
ALTER TABLE odmx.result_annotations ADD CONSTRAINT fk_result_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultAnnotations_Results */
ALTER TABLE odmx.result_annotations ADD CONSTRAINT fk_result_annotations_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureAnnotations_Annotations */
ALTER TABLE odmx.sampling_feature_annotations ADD CONSTRAINT fk_sampling_feature_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureAnnotations_SamplingFeatures */
ALTER TABLE odmx.sampling_feature_annotations ADD CONSTRAINT fk_sampling_feature_annotations_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResultValueAnnotations_Annotations */
ALTER TABLE odmx.section_result_value_annotations ADD CONSTRAINT fk_section_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResultValueAnnotations_SectionResultValues */
ALTER TABLE odmx.section_result_value_annotations ADD CONSTRAINT fk_section_result_value_annotations_section_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.section_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpectraResultValueAnnotations_Annotations */
ALTER TABLE odmx.spectra_result_value_annotations ADD CONSTRAINT fk_spectra_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpectraResultValueAnnotations_SpectraResultValues */
ALTER TABLE odmx.spectra_result_value_annotations ADD CONSTRAINT fk_spectra_result_value_annotations_spectra_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.spectra_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TimeseriesResultValueAnnotations_Annotations */
ALTER TABLE odmx.timeseries_result_value_annotations ADD CONSTRAINT fk_timeseries_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TimeseriesResultValueAnnotations_TimeseriesResultValues */
ALTER TABLE odmx.timeseries_result_value_annotations ADD CONSTRAINT fk_timeseries_result_value_annotations_timeseries_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.timeseries_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TrajectoryResultValueAnnotations_Annotations */
ALTER TABLE odmx.trajectory_result_value_annotations ADD CONSTRAINT fk_trajectory_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TrajectoryResultValueAnnotations_TrajectoryResultValues */
ALTER TABLE odmx.trajectory_result_value_annotations ADD CONSTRAINT fk_trajectory_result_value_annotations_trajectory_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.trajectory_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResultValueAnnotations_Annotations */
ALTER TABLE odmx.transect_result_value_annotations ADD CONSTRAINT fk_transect_result_value_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResultValueAnnotations_TransectResultValues */
ALTER TABLE odmx.transect_result_value_annotations ADD CONSTRAINT fk_transect_result_value_annotations_transect_result_values
	FOREIGN KEY (value_id) REFERENCES odmx.transect_result_values (value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_UnitsQuantityKindBridge_CV_QuantityKind */
ALTER TABLE odmx.units_quantity_kind_bridge ADD CONSTRAINT fk_units_quantity_kind_bridge_cv_quantity_kind
	FOREIGN KEY (term) REFERENCES odmx.cv_quantity_kind (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_UnitsQuantityKindBridge_CV_Units */
ALTER TABLE odmx.units_quantity_kind_bridge ADD CONSTRAINT fk_units_quantity_kind_bridge_cv_units
	FOREIGN KEY (units_id) REFERENCES odmx.cv_units (units_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ActionPeople_Actions */
ALTER TABLE odmx.action_by ADD CONSTRAINT fk_action_people_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ActionPeople_Affiliations */
ALTER TABLE odmx.action_by ADD CONSTRAINT fk_action_people_affiliations
	FOREIGN KEY (affiliation_id) REFERENCES odmx.affiliations (affiliation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Actions_CV_ActionType */
ALTER TABLE odmx.actions ADD CONSTRAINT fk_actions_cv_action_type
	FOREIGN KEY (action_type_cv) REFERENCES odmx.cv_action_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Actions_Methods */
ALTER TABLE odmx.actions ADD CONSTRAINT fk_actions_methods
	FOREIGN KEY (method_id) REFERENCES odmx.methods (method_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Affiliations_Organizations */
ALTER TABLE odmx.affiliations ADD CONSTRAINT fk_affiliations_organizations
	FOREIGN KEY (organization_id) REFERENCES odmx.organizations (organization_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Affiliations_People */
ALTER TABLE odmx.affiliations ADD CONSTRAINT fk_affiliations_people
	FOREIGN KEY (person_id) REFERENCES odmx.persons (person_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Datasets_CV_DatasetTypeCV */
ALTER TABLE odmx.datasets ADD CONSTRAINT fk_datasets_cv_dataset_type_cv
	FOREIGN KEY (dataset_type_cv) REFERENCES odmx.cv_dataset_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataSetsResults_DataSets */
ALTER TABLE odmx.datasets_results ADD CONSTRAINT fk_data_sets_results_data_sets
	FOREIGN KEY (dataset_id) REFERENCES odmx.datasets (dataset_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataSetsResults_Results */
ALTER TABLE odmx.datasets_results ADD CONSTRAINT fk_data_sets_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ExternalConnection_Actions */
ALTER TABLE odmx.external_connection ADD CONSTRAINT fk_external_connection_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ExternalConnection_Equipment */
ALTER TABLE odmx.external_connection ADD CONSTRAINT fk_external_connection_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ExternalConnection_SamplingFeatures */
ALTER TABLE odmx.external_connection ADD CONSTRAINT fk_external_connection_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_FeatureActions_Actions */
ALTER TABLE odmx.feature_actions ADD CONSTRAINT fk_feature_actions_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_FeatureActions_RelatedFeatures */
ALTER TABLE odmx.feature_actions ADD CONSTRAINT fk_feature_actions_related_features
	FOREIGN KEY (related_features_relation_id) REFERENCES odmx.related_features (relation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_FeatureActions_SamplingFeatures */
ALTER TABLE odmx.feature_actions ADD CONSTRAINT fk_feature_actions_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ImageEquipmentBridge_Equipment */
ALTER TABLE odmx.image_equipment_bridge ADD CONSTRAINT fk_image_equipment_bridge_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ImageEquipmentBridge_Images */
ALTER TABLE odmx.image_equipment_bridge ADD CONSTRAINT fk_image_equipment_bridge_images
	FOREIGN KEY (image_id) REFERENCES odmx.images (image_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ImagePersonBridge_Images */
ALTER TABLE odmx.image_persons_bridge ADD CONSTRAINT fk_image_person_bridge_images
	FOREIGN KEY (image_id) REFERENCES odmx.images (image_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ImagePersonBridge_Person */
ALTER TABLE odmx.image_persons_bridge ADD CONSTRAINT fk_image_person_bridge_person
	FOREIGN KEY (person_id) REFERENCES odmx.persons (person_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ImageSamplingFeatureBridge_Images */
ALTER TABLE odmx.image_sampling_feature_bridge ADD CONSTRAINT fk_image_sampling_feature_bridge_images
	FOREIGN KEY (image_id) REFERENCES odmx.images (image_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ImageSamplingFeatureBridge_SamplingFeatures */
ALTER TABLE odmx.image_sampling_feature_bridge ADD CONSTRAINT fk_image_sampling_feature_bridge_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_InstrumentActions_Actions */
ALTER TABLE odmx.instrument_actions ADD CONSTRAINT fk_instrument_actions_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_InstrumentActions_Equipment */
ALTER TABLE odmx.instrument_actions ADD CONSTRAINT fk_instrument_actions_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Methods_CV_MethodType */
ALTER TABLE odmx.methods ADD CONSTRAINT fk_methods_cv_method_type
	FOREIGN KEY (method_type_cv) REFERENCES odmx.cv_method_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Methods_Organizations */
ALTER TABLE odmx.methods ADD CONSTRAINT fk_methods_organizations
	FOREIGN KEY (organization_id) REFERENCES odmx.organizations (organization_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_OrganizationSamplingFeatureBridge_Organizations */
ALTER TABLE odmx.organization_sampling_feature_bridge ADD CONSTRAINT fk_organization_sampling_feature_bridge_organizations
	FOREIGN KEY (organization_id) REFERENCES odmx.organizations (organization_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_OrganizationSamplingFeatureBridge_SamplingFeatures */
ALTER TABLE odmx.organization_sampling_feature_bridge ADD CONSTRAINT fk_organization_sampling_feature_bridge_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Organizations_CV_OrganizationType */
ALTER TABLE odmx.organizations ADD CONSTRAINT fk_organizations_cv_organization_type
	FOREIGN KEY (organization_type_cv) REFERENCES odmx.cv_organization_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Organizations_Organizations */
ALTER TABLE odmx.organizations ADD CONSTRAINT fk_organizations_organizations
	FOREIGN KEY (parent_organization_id) REFERENCES odmx.organizations (organization_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedActions_Actions */
ALTER TABLE odmx.related_actions ADD CONSTRAINT fk_related_actions_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedActions_Actions_AreRelated */
ALTER TABLE odmx.related_actions ADD CONSTRAINT fk_related_actions_actions_are_related
	FOREIGN KEY (related_action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedActions_CV_RelationshipType */
ALTER TABLE odmx.related_actions ADD CONSTRAINT fk_related_actions_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Results_CV_ResultType */
ALTER TABLE odmx.results ADD CONSTRAINT fk_results_cv_result_type
	FOREIGN KEY (result_type_cv) REFERENCES odmx.cv_result_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Results_CV_Status */
ALTER TABLE odmx.results ADD CONSTRAINT fk_results_cv_status
	FOREIGN KEY (status_cv) REFERENCES odmx.cv_status (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Results_FeatureActions */
ALTER TABLE odmx.results ADD CONSTRAINT fk_results_feature_actions
	FOREIGN KEY (feature_action_id) REFERENCES odmx.feature_actions (feature_action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Results_ProcessingLevels */
ALTER TABLE odmx.results ADD CONSTRAINT fk_results_processing_levels
	FOREIGN KEY (processing_level_id) REFERENCES odmx.processing_levels (processing_level_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Results_Units */
ALTER TABLE odmx.results ADD CONSTRAINT fk_results_units
	FOREIGN KEY (units_id) REFERENCES odmx.cv_units (units_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Results_Variables */
ALTER TABLE odmx.results ADD CONSTRAINT fk_results_variables
	FOREIGN KEY (variable_id) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatures_CV_ElevationDatum */
ALTER TABLE odmx.sampling_features ADD CONSTRAINT fk_sampling_features_cv_elevation_datum
	FOREIGN KEY (elevation_datum_cv) REFERENCES odmx.cv_elevation_datum (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatures_CV_SamplingFeatureGeoType */
ALTER TABLE odmx.sampling_features ADD CONSTRAINT fk_sampling_features_cv_sampling_feature_geo_type
	FOREIGN KEY (sampling_feature_geotype_cv) REFERENCES odmx.cv_sampling_feature_geo_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatures_CV_SamplingFeatureType */
ALTER TABLE odmx.sampling_features ADD CONSTRAINT fk_sampling_features_cv_sampling_feature_type
	FOREIGN KEY (sampling_feature_type_cv) REFERENCES odmx.cv_sampling_feature_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeaturesAliases_SamplingFeatures */
ALTER TABLE odmx.sampling_features_aliases ADD CONSTRAINT fk_sampling_features_aliases_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TaxonomicClassifiers_CV_TaxonomicClassifierDomain */
ALTER TABLE odmx.taxonomic_classifiers ADD CONSTRAINT fk_taxonomic_classifiers_cv_taxonomic_classifier_domain
	FOREIGN KEY (taxonomic_classifier_domain_cv) REFERENCES odmx.cv_taxonomic_classifier_domain (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_VariableMapping_Variables */
ALTER TABLE odmx.variable_mapping ADD CONSTRAINT fk_variable_mapping_variables
	FOREIGN KEY (variable_id) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Variables_CV_Medium */
ALTER TABLE odmx.variables ADD CONSTRAINT fk_variables_cv_medium
	FOREIGN KEY (sampled_medium_cv) REFERENCES odmx.cv_medium (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Variables_CV_QuantityKind */
ALTER TABLE odmx.variables ADD CONSTRAINT fk_variables_cv_quantity_kind
	FOREIGN KEY (quantity_kind_cv) REFERENCES odmx.cv_quantity_kind (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Variables_CV_VariableDomain */
ALTER TABLE odmx.variables ADD CONSTRAINT fk_variables_cv_variable_domain
	FOREIGN KEY (variable_domain_cv) REFERENCES odmx.cv_variable_domain (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_VariablesTaxonomicClassifiersBridge_TaxonomicClassifiers */
ALTER TABLE odmx.variables_taxonomic_classifiers_bridge ADD CONSTRAINT fk_variables_taxonomic_classifiers_bridge_taxonomic_classifiers
	FOREIGN KEY (taxonomic_classifier_id) REFERENCES odmx.taxonomic_classifiers (taxonomic_classifier_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_VariablesTaxonomicClassifiersBridge_Variables */
ALTER TABLE odmx.variables_taxonomic_classifiers_bridge ADD CONSTRAINT fk_variables_taxonomic_classifiers_bridge_variables
	FOREIGN KEY (variable_id) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataQuality_CV_DataQualityType */
ALTER TABLE odmx.data_quality ADD CONSTRAINT fk_data_quality_cv_data_quality_type
	FOREIGN KEY (data_quality_type_cv) REFERENCES odmx.cv_data_quality_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ReferenceMaterialValues_Citations */
ALTER TABLE odmx.reference_material_values ADD CONSTRAINT fk_reference_material_values_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ReferenceMaterialValues_ReferenceMaterials */
ALTER TABLE odmx.reference_material_values ADD CONSTRAINT fk_reference_material_values_reference_materials
	FOREIGN KEY (reference_material_id) REFERENCES odmx.reference_materials (reference_material_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ReferenceMaterialValues_Variables */
ALTER TABLE odmx.reference_material_values ADD CONSTRAINT fk_reference_material_values_variables
	FOREIGN KEY (variable_id) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ReferenceMaterials_CV_Medium */
ALTER TABLE odmx.reference_materials ADD CONSTRAINT fk_reference_materials_cv_medium
	FOREIGN KEY (reference_material_medium_cv) REFERENCES odmx.cv_medium (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ReferenceMaterials_Organizations */
ALTER TABLE odmx.reference_materials ADD CONSTRAINT fk_reference_materials_organizations
	FOREIGN KEY (reference_material_organization_id) REFERENCES odmx.organizations (organization_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ReferenceMaterials_SamplingFeatures */
ALTER TABLE odmx.reference_materials ADD CONSTRAINT fk_reference_materials_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultNormalizationValues_ReferenceMaterialValues */
ALTER TABLE odmx.result_normalization_values ADD CONSTRAINT fk_result_normalization_values_reference_material_values
	FOREIGN KEY (normalized_by_reference_material_value_id) REFERENCES odmx.reference_material_values (reference_material_value_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultNormalizationValues_Results */
ALTER TABLE odmx.result_normalization_values ADD CONSTRAINT fk_result_normalization_values_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultsDataQuality_DataQuality */
ALTER TABLE odmx.results_data_quality ADD CONSTRAINT fk_results_data_quality_data_quality
	FOREIGN KEY (data_quality_id) REFERENCES odmx.data_quality (data_quality_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultsDataQuality_Results */
ALTER TABLE odmx.results_data_quality ADD CONSTRAINT fk_results_data_quality_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CalibrationActions_Actions */
ALTER TABLE odmx.calibration_actions ADD CONSTRAINT fk_calibration_actions_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CalibrationActions_InstrumentOutputVariables */
ALTER TABLE odmx.calibration_actions ADD CONSTRAINT fk_calibration_actions_instrument_output_variables
	FOREIGN KEY (instrument_output_variable_id) REFERENCES odmx.instrument_output_quantity_kind (instrument_output_quantity_kind_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CalibrationReferenceEquipment_CalibrationActions */
ALTER TABLE odmx.calibration_reference_equipment ADD CONSTRAINT fk_calibration_reference_equipment_calibration_actions
	FOREIGN KEY (action_id) REFERENCES odmx.calibration_actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CalibrationReferenceEquipment_Equipment */
ALTER TABLE odmx.calibration_reference_equipment ADD CONSTRAINT fk_calibration_reference_equipment_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CalibrationStandards_CalibrationActions */
ALTER TABLE odmx.calibration_standards ADD CONSTRAINT fk_calibration_standards_calibration_actions
	FOREIGN KEY (action_id) REFERENCES odmx.calibration_actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_FieldCalibrationStandards_ReferenceMaterials */
ALTER TABLE odmx.calibration_standards ADD CONSTRAINT fk_field_calibration_standards_reference_materials
	FOREIGN KEY (reference_material_id) REFERENCES odmx.reference_materials (reference_material_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataloggerFileColumns_CV_AggregationStatistic */
ALTER TABLE odmx.datalogger_file_columns ADD CONSTRAINT fk_datalogger_file_columns_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataloggerFileColumns_DataloggerFiles */
ALTER TABLE odmx.datalogger_file_columns ADD CONSTRAINT fk_datalogger_file_columns_datalogger_files
	FOREIGN KEY (datalogger_file_id) REFERENCES odmx.datalogger_files (datalogger_file_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataloggerFileColumns_InstrumentOutputQuantityKind */
ALTER TABLE odmx.datalogger_file_columns ADD CONSTRAINT fk_datalogger_file_columns_instrument_output_quantity_kind
	FOREIGN KEY (instrument_output_quantity_kind_id) REFERENCES odmx.instrument_output_quantity_kind (instrument_output_quantity_kind_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataloggerFileColumns_Results */
ALTER TABLE odmx.datalogger_file_columns ADD CONSTRAINT fk_datalogger_file_columns_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataloggerFiles_DataloggerProgramFiles */
ALTER TABLE odmx.datalogger_files ADD CONSTRAINT fk_datalogger_files_datalogger_program_files
	FOREIGN KEY (program_id) REFERENCES odmx.datalogger_program_files (program_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataloggerProgramFiles_Affiliations */
ALTER TABLE odmx.datalogger_program_files ADD CONSTRAINT fk_datalogger_program_files_affiliations
	FOREIGN KEY (affiliation_id) REFERENCES odmx.affiliations (affiliation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Equipment_EquipmentModels */
ALTER TABLE odmx.equipment ADD CONSTRAINT fk_equipment_equipment_models
	FOREIGN KEY (equipment_model_id) REFERENCES odmx.equipment_models (equipment_model_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Equipment_Organizations */
ALTER TABLE odmx.equipment ADD CONSTRAINT fk_equipment_organizations
	FOREIGN KEY (equipment_vendor_id) REFERENCES odmx.organizations (organization_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentModels_CV_EquipmentType */
ALTER TABLE odmx.equipment_models ADD CONSTRAINT fk_equipment_models_cv_equipment_type
	FOREIGN KEY (equipment_type_cv) REFERENCES odmx.cv_equipment_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentModels_Organizations */
ALTER TABLE odmx.equipment_models ADD CONSTRAINT fk_equipment_models_organizations
	FOREIGN KEY (equipment_model_manufacturer_id) REFERENCES odmx.organizations (organization_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentPersonBridge_Equipment */
ALTER TABLE odmx.equipment_persons_bridge ADD CONSTRAINT fk_equipment_person_bridge_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentPersonBridge_Persons */
ALTER TABLE odmx.equipment_persons_bridge ADD CONSTRAINT fk_equipment_person_bridge_persons
	FOREIGN KEY (person_id) REFERENCES odmx.persons (person_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentPersonsBridge_CV_PersonsRole */
ALTER TABLE odmx.equipment_persons_bridge ADD CONSTRAINT fk_equipment_persons_bridge_cv_persons_role
	FOREIGN KEY (person_role_cv) REFERENCES odmx.cv_persons_role (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentPosition_Equipment */
ALTER TABLE odmx.equipment_position ADD CONSTRAINT fk_equipment_position_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentActions_Actions */
ALTER TABLE odmx.equipment_used ADD CONSTRAINT fk_equipment_actions_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_EquipmentActions_Equipment */
ALTER TABLE odmx.equipment_used ADD CONSTRAINT fk_equipment_actions_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Heartbeat_CV_EquipmentStatus */
ALTER TABLE odmx.heartbeat ADD CONSTRAINT fk_heartbeat_cv_equipment_status
	FOREIGN KEY (equipment_status_cv) REFERENCES odmx.cv_equipment_status (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Heartbeat_Equipment */
ALTER TABLE odmx.heartbeat ADD CONSTRAINT fk_heartbeat_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_InstrumentOutputQuantityKind_Methods */
ALTER TABLE odmx.instrument_output_quantity_kind ADD CONSTRAINT fk_instrument_output_quantity_kind_methods
	FOREIGN KEY (instrument_method_id) REFERENCES odmx.methods (method_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_InstrumentOutputQuantityKind_Variables */
ALTER TABLE odmx.instrument_output_quantity_kind ADD CONSTRAINT fk_instrument_output_quantity_kind_variables
	FOREIGN KEY (instrument_standard_output_variable) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_InstrumentOutputVariables_CV_QuantityKind */
ALTER TABLE odmx.instrument_output_quantity_kind ADD CONSTRAINT fk_instrument_output_variables_cv_quantity_kind
	FOREIGN KEY (quantity_kind) REFERENCES odmx.cv_quantity_kind (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_InstrumentOutputVariables_CV_Units */
ALTER TABLE odmx.instrument_output_quantity_kind ADD CONSTRAINT fk_instrument_output_variables_cv_units
	FOREIGN KEY (instrument_raw_output_units_id) REFERENCES odmx.cv_units (units_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_InstrumentOutputVariables_EquipmentModels */
ALTER TABLE odmx.instrument_output_quantity_kind ADD CONSTRAINT fk_instrument_output_variables_equipment_models
	FOREIGN KEY (equipment_model_id) REFERENCES odmx.equipment_models (equipment_model_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MaintenanceActions_Actions */
ALTER TABLE odmx.maintenance_actions ADD CONSTRAINT fk_maintenance_actions_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedEquipment_CV_RelationshipType */
ALTER TABLE odmx.related_equipment ADD CONSTRAINT fk_related_equipment_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedEquipment_Equipment */
ALTER TABLE odmx.related_equipment ADD CONSTRAINT fk_related_equipment_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedEquipment_Equipment_AreRelated */
ALTER TABLE odmx.related_equipment ADD CONSTRAINT fk_related_equipment_equipment_are_related
	FOREIGN KEY (related_equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ActionExtensionPropertyValues_Actions */
ALTER TABLE odmx.action_extension_property_values ADD CONSTRAINT fk_action_extension_property_values_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ActionExtensionPropertyValues_ExtensionProperties */
ALTER TABLE odmx.action_extension_property_values ADD CONSTRAINT fk_action_extension_property_values_extension_properties
	FOREIGN KEY (property_id) REFERENCES odmx.extension_properties (property_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CitationExtensionPropertyValues_Citations */
ALTER TABLE odmx.citation_extension_property_values ADD CONSTRAINT fk_citation_extension_property_values_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CitationExtensionPropertyValues_ExtensionProperties */
ALTER TABLE odmx.citation_extension_property_values ADD CONSTRAINT fk_citation_extension_property_values_extension_properties
	FOREIGN KEY (property_id) REFERENCES odmx.extension_properties (property_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ExtensionProperties_CV_PropertyDataType */
ALTER TABLE odmx.extension_properties ADD CONSTRAINT fk_extension_properties_cv_property_data_type
	FOREIGN KEY (property_data_type_cv) REFERENCES odmx.cv_property_data_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodExtensionPropertyValues_ExtensionProperties */
ALTER TABLE odmx.method_extension_property_values ADD CONSTRAINT fk_method_extension_property_values_extension_properties
	FOREIGN KEY (property_id) REFERENCES odmx.extension_properties (property_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodExtensionPropertyValues_Methods */
ALTER TABLE odmx.method_extension_property_values ADD CONSTRAINT fk_method_extension_property_values_methods
	FOREIGN KEY (method_id) REFERENCES odmx.methods (method_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultExtensionPropertyValues_ExtensionProperties */
ALTER TABLE odmx.result_extension_property_values ADD CONSTRAINT fk_result_extension_property_values_extension_properties
	FOREIGN KEY (property_id) REFERENCES odmx.extension_properties (property_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultExtensionPropertyValues_Results */
ALTER TABLE odmx.result_extension_property_values ADD CONSTRAINT fk_result_extension_property_values_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureExtensionPropertyValues_ExtensionProperties */
ALTER TABLE odmx.sampling_feature_extension_property_values ADD CONSTRAINT fk_sampling_feature_extension_property_values_extension_properties
	FOREIGN KEY (property_id) REFERENCES odmx.extension_properties (property_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureExtensionPropertyValues_SamplingFeatures */
ALTER TABLE odmx.sampling_feature_extension_property_values ADD CONSTRAINT fk_sampling_feature_extension_property_values_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_VariableExtensionPropertyValues_ExtensionProperties */
ALTER TABLE odmx.variable_extension_property_values ADD CONSTRAINT fk_variable_extension_property_values_extension_properties
	FOREIGN KEY (property_id) REFERENCES odmx.extension_properties (property_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_VariableExtensionPropertyValues_Variables */
ALTER TABLE odmx.variable_extension_property_values ADD CONSTRAINT fk_variable_extension_property_values_variables
	FOREIGN KEY (variable_id) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CitationExternalIdentifiers_Citations */
ALTER TABLE odmx.citation_external_identifiers ADD CONSTRAINT fk_citation_external_identifiers_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CitationExternalIdentifiers_ExternalIdentifierSystems */
ALTER TABLE odmx.citation_external_identifiers ADD CONSTRAINT fk_citation_external_identifiers_external_identifier_systems
	FOREIGN KEY (external_identifier_system_id) REFERENCES odmx.external_identifier_systems (external_identifier_system_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ExternalIdentifierSystems_Organizations */
ALTER TABLE odmx.external_identifier_systems ADD CONSTRAINT fk_external_identifier_systems_organizations
	FOREIGN KEY (identifier_system_organization_id) REFERENCES odmx.organizations (organization_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodExternalIdentifiers_ExternalIdentifierSystems */
ALTER TABLE odmx.method_external_identifiers ADD CONSTRAINT fk_method_external_identifiers_external_identifier_systems
	FOREIGN KEY (external_identifier_system_id) REFERENCES odmx.external_identifier_systems (external_identifier_system_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodExternalIdentifiers_Methods */
ALTER TABLE odmx.method_external_identifiers ADD CONSTRAINT fk_method_external_identifiers_methods
	FOREIGN KEY (method_id) REFERENCES odmx.methods (method_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PersonExternalIdentifiers_ExternalIdentifierSystems */
ALTER TABLE odmx.person_external_identifiers ADD CONSTRAINT fk_person_external_identifiers_external_identifier_systems
	FOREIGN KEY (external_identifier_system_id) REFERENCES odmx.external_identifier_systems (external_identifier_system_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PersonExternalIdentifiers_People */
ALTER TABLE odmx.person_external_identifiers ADD CONSTRAINT fk_person_external_identifiers_people
	FOREIGN KEY (person_id) REFERENCES odmx.persons (person_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RefMaterialExtIdentifiers_ExtIdentifierSystems */
ALTER TABLE odmx.reference_material_external_identifiers ADD CONSTRAINT fk_ref_material_ext_identifiers_ext_identifier_systems
	FOREIGN KEY (external_identifier_system_id) REFERENCES odmx.external_identifier_systems (external_identifier_system_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RefMaterialExtIdentifiers_RefMaterials */
ALTER TABLE odmx.reference_material_external_identifiers ADD CONSTRAINT fk_ref_material_ext_identifiers_ref_materials
	FOREIGN KEY (reference_material_id) REFERENCES odmx.reference_materials (reference_material_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureExternalIdentifiers_ExternalIdentifierSystems */
ALTER TABLE odmx.sampling_feature_external_identifiers ADD CONSTRAINT fk_sampling_feature_external_identifiers_external_identifier_systems
	FOREIGN KEY (external_identifier_system_id) REFERENCES odmx.external_identifier_systems (external_identifier_system_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureExternalIdentifiers_SamplingFeatures */
ALTER TABLE odmx.sampling_feature_external_identifiers ADD CONSTRAINT fk_sampling_feature_external_identifiers_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpatialReferenceExternalIdentifiers_ExternalIdentifierSystems */
ALTER TABLE odmx.spatial_reference_external_identifiers ADD CONSTRAINT fk_spatial_reference_external_identifiers_external_identifier_systems
	FOREIGN KEY (external_identifier_system_id) REFERENCES odmx.external_identifier_systems (external_identifier_system_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpatialReferenceExternalIdentifiers_SpatialReferences */
ALTER TABLE odmx.spatial_reference_external_identifiers ADD CONSTRAINT fk_spatial_reference_external_identifiers_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TaxonomicClassifierExtIDs_ExtIDSystems */
ALTER TABLE odmx.taxonomic_classifier_external_identifiers ADD CONSTRAINT fk_taxonomic_classifier_ext_i_ds_ext_id_systems
	FOREIGN KEY (external_identifier_system_id) REFERENCES odmx.external_identifier_systems (external_identifier_system_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TaxonomicClassifierExtIDs_TaxonomicClassifiers */
ALTER TABLE odmx.taxonomic_classifier_external_identifiers ADD CONSTRAINT fk_taxonomic_classifier_ext_i_ds_taxonomic_classifiers
	FOREIGN KEY (taxonomic_classifier_id) REFERENCES odmx.taxonomic_classifiers (taxonomic_classifier_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_VariableExternalIdentifiers_ExternalIdentifierSystems */
ALTER TABLE odmx.variable_external_identifiers ADD CONSTRAINT fk_variable_external_identifiers_external_identifier_systems
	FOREIGN KEY (external_identifier_system_id) REFERENCES odmx.external_identifier_systems (external_identifier_system_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_VariableExternalIdentifiers_Variables */
ALTER TABLE odmx.variable_external_identifiers ADD CONSTRAINT fk_variable_external_identifiers_variables
	FOREIGN KEY (variable_id) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ActionDirectives_Actions */
ALTER TABLE odmx.action_directives ADD CONSTRAINT fk_action_directives_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ActionDirectives_Directives */
ALTER TABLE odmx.action_directives ADD CONSTRAINT fk_action_directives_directives
	FOREIGN KEY (directive_id) REFERENCES odmx.directives (directive_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Directives_CV_DirectiveType */
ALTER TABLE odmx.directives ADD CONSTRAINT fk_directives_cv_directive_type
	FOREIGN KEY (directive_type_cv) REFERENCES odmx.cv_directive_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpecimenBatchPostions_FeatureActions */
ALTER TABLE odmx.specimen_batch_positions ADD CONSTRAINT fk_specimen_batch_postions_feature_actions
	FOREIGN KEY (feature_action_id) REFERENCES odmx.feature_actions (feature_action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Assembly_AssemblyEvent */
ALTER TABLE odmx.assembly ADD CONSTRAINT fk_assembly_assembly_event
	FOREIGN KEY (assembly_event_id) REFERENCES odmx.assembly_event (assembly_event_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MAGMetadata_AssembledContigs */
ALTER TABLE odmx.binning_event ADD CONSTRAINT fk_mag_metadata_assembled_contigs
	FOREIGN KEY (assembled_contigs_id) REFERENCES odmx.assembly (assembled_contigs_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeContigsMags_Contigs */
ALTER TABLE odmx.bridge_contigs_mags ADD CONSTRAINT fk_bridge_contigs_mags_contigs
	FOREIGN KEY (contigs_id) REFERENCES odmx.contigs (contigs_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeContigsMags_MAGS */
ALTER TABLE odmx.bridge_contigs_mags ADD CONSTRAINT fk_bridge_contigs_mags_mags
	FOREIGN KEY (mags_id) REFERENCES odmx.mags (mags_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeGenesGeneAnnotations_GeneAnnotations */
ALTER TABLE odmx.bridge_genes_gene_annotations ADD CONSTRAINT fk_bridge_genes_gene_annotations_gene_annotations
	FOREIGN KEY (gene_annotation_id) REFERENCES odmx.gene_annotations (gene_annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeGenesGeneAnnotations_Genes */
ALTER TABLE odmx.bridge_genes_gene_annotations ADD CONSTRAINT fk_bridge_genes_gene_annotations_genes
	FOREIGN KEY (gene_id) REFERENCES odmx.genes (gene_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeMagAnnotationEventGeneAnnotation_GeneAnnotations */
ALTER TABLE odmx.bridge_mag_annotation_event_gene_annotation ADD CONSTRAINT fk_bridge_mag_annotation_event_gene_annotation_gene_annotations
	FOREIGN KEY (gene_annotation_id) REFERENCES odmx.gene_annotations (gene_annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeMagAnnotationEventGeneAnnotation_MAGAnnotationEvent */
ALTER TABLE odmx.bridge_mag_annotation_event_gene_annotation ADD CONSTRAINT fk_bridge_mag_annotation_event_gene_annotation_mag_annotation_event
	FOREIGN KEY (mag_annotation_event_id) REFERENCES odmx.mag_annotation_event (mag_annotation_event_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeMagsMagCollections_MAGCollections */
ALTER TABLE odmx.bridge_mags_mag_collections ADD CONSTRAINT fk_bridge_mags_mag_collections_mag_collections
	FOREIGN KEY (mag_collections_id) REFERENCES odmx.mag_collections (mag_collections_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeMagsMagCollections_MAGS */
ALTER TABLE odmx.bridge_mags_mag_collections ADD CONSTRAINT fk_bridge_mags_mag_collections_mags
	FOREIGN KEY (mags_id) REFERENCES odmx.mags (mags_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeQcdReadsAssemblyEvent_AssemblyEvent */
ALTER TABLE odmx.bridge_qcd_reads_assembly_event ADD CONSTRAINT fk_bridge_qcd_reads_assembly_event_assembly_event
	FOREIGN KEY (assembly_event_id) REFERENCES odmx.assembly_event (assembly_event_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeQcdReadsAssemblyEvent_QcdReads */
ALTER TABLE odmx.bridge_qcd_reads_assembly_event ADD CONSTRAINT fk_bridge_qcd_reads_assembly_event_qcd_reads
	FOREIGN KEY (qcd_reads_id) REFERENCES odmx.qcd_reads (qcd_reads_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Contigs_BinningEvent */
ALTER TABLE odmx.contigs ADD CONSTRAINT fk_contigs_binning_event
	FOREIGN KEY (mag_binning_event_id) REFERENCES odmx.binning_event (mag_binning_event_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Coverage_MAGS */
ALTER TABLE odmx.coverage ADD CONSTRAINT fk_coverage_mags
	FOREIGN KEY (mags_id) REFERENCES odmx.mags (mags_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Coverage_Specimens */
ALTER TABLE odmx.coverage ADD CONSTRAINT fk_coverage_specimens
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.specimens (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ExtractedDNA_Specimens */
ALTER TABLE odmx.extracted_dna ADD CONSTRAINT fk_extracted_dna_specimens
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.specimens (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MAGAnnotation_MAGS */
ALTER TABLE odmx.mag_annotation_event ADD CONSTRAINT fk_mag_annotation_mags
	FOREIGN KEY (mags_id) REFERENCES odmx.mags (mags_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MAGS_BinningEvent */
ALTER TABLE odmx.mags ADD CONSTRAINT fk_mags_binning_event
	FOREIGN KEY (mag_binning_event_id) REFERENCES odmx.binning_event (mag_binning_event_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_QcdReads_RawReads */
ALTER TABLE odmx.qcd_reads ADD CONSTRAINT fk_qcd_reads_raw_reads
	FOREIGN KEY (raw_reads_id) REFERENCES odmx.raw_reads (raw_reads_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RawReads_ExtractedDNA */
ALTER TABLE odmx.raw_reads ADD CONSTRAINT fk_raw_reads_extracted_dna
	FOREIGN KEY (extracted_dnaid) REFERENCES odmx.extracted_dna (extracted_dnaid)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RawReads_SequencingFacility */
ALTER TABLE odmx.raw_reads ADD CONSTRAINT fk_raw_reads_sequencing_facility
	FOREIGN KEY (sequencing_facility_id) REFERENCES odmx.sequencing_facility (sequencing_facility_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_AuthorLists_Citations */
ALTER TABLE odmx.author_lists ADD CONSTRAINT fk_author_lists_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_AuthorLists_People */
ALTER TABLE odmx.author_lists ADD CONSTRAINT fk_author_lists_people
	FOREIGN KEY (person_id) REFERENCES odmx.persons (person_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataSetCitations_Citations */
ALTER TABLE odmx.dataset_citations ADD CONSTRAINT fk_data_set_citations_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DataSetCitations_DataSets */
ALTER TABLE odmx.dataset_citations ADD CONSTRAINT fk_data_set_citations_data_sets
	FOREIGN KEY (data_set_id) REFERENCES odmx.datasets (dataset_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DatasetCitations_CV_RelationshipType */
ALTER TABLE odmx.dataset_citations ADD CONSTRAINT fk_dataset_citations_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodCitations_CV_RelationshipType */
ALTER TABLE odmx.method_citations ADD CONSTRAINT fk_method_citations_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodCitations_Citations */
ALTER TABLE odmx.method_citations ADD CONSTRAINT fk_method_citations_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MethodCitations_Methods */
ALTER TABLE odmx.method_citations ADD CONSTRAINT fk_method_citations_methods
	FOREIGN KEY (method_id) REFERENCES odmx.methods (method_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedAnnotations_Annotations */
ALTER TABLE odmx.related_annotations ADD CONSTRAINT fk_related_annotations_annotations
	FOREIGN KEY (annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedAnnotations_Annotations_AreRelated */
ALTER TABLE odmx.related_annotations ADD CONSTRAINT fk_related_annotations_annotations_are_related
	FOREIGN KEY (related_annotation_id) REFERENCES odmx.annotations (annotation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedAnnotations_CV_RelationshipType */
ALTER TABLE odmx.related_annotations ADD CONSTRAINT fk_related_annotations_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedCitations_CV_RelationshipType */
ALTER TABLE odmx.related_citations ADD CONSTRAINT fk_related_citations_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedCitations_Citations */
ALTER TABLE odmx.related_citations ADD CONSTRAINT fk_related_citations_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedCitations_Citations_AreRelated */
ALTER TABLE odmx.related_citations ADD CONSTRAINT fk_related_citations_citations_are_related
	FOREIGN KEY (related_citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedDatasets_CV_RelationshipType */
ALTER TABLE odmx.related_datasets ADD CONSTRAINT fk_related_datasets_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedDatasets_DataSets */
ALTER TABLE odmx.related_datasets ADD CONSTRAINT fk_related_datasets_data_sets
	FOREIGN KEY (data_set_id) REFERENCES odmx.datasets (dataset_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedDatasets_DataSets_AreRelated */
ALTER TABLE odmx.related_datasets ADD CONSTRAINT fk_related_datasets_data_sets_are_related
	FOREIGN KEY (related_dataset_id) REFERENCES odmx.datasets (dataset_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedResults_CV_RelationshipType */
ALTER TABLE odmx.related_results ADD CONSTRAINT fk_related_results_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedResults_Results */
ALTER TABLE odmx.related_results ADD CONSTRAINT fk_related_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedResults_Results_AreRelated */
ALTER TABLE odmx.related_results ADD CONSTRAINT fk_related_results_results_are_related
	FOREIGN KEY (related_result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultDerivationEquations_DerivationEquations */
ALTER TABLE odmx.result_derivation_equations ADD CONSTRAINT fk_result_derivation_equations_derivation_equations
	FOREIGN KEY (derivation_equation_id) REFERENCES odmx.derivation_equations (derivation_equation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ResultDerivationEquations_Results */
ALTER TABLE odmx.result_derivation_equations ADD CONSTRAINT fk_result_derivation_equations_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CategoricalResultValues_CategoricalResults */
ALTER TABLE odmx.categorical_result_values ADD CONSTRAINT fk_categorical_result_values_categorical_results
	FOREIGN KEY (result_id) REFERENCES odmx.categorical_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CategoricalResults_CV_QualityCode */
ALTER TABLE odmx.categorical_results ADD CONSTRAINT fk_categorical_results_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CategoricalResults_Results */
ALTER TABLE odmx.categorical_results ADD CONSTRAINT fk_categorical_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CategoricalResults_SpatialReferences */
ALTER TABLE odmx.categorical_results ADD CONSTRAINT fk_categorical_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MeasurementResultValues_CV_AggregationStatistic */
ALTER TABLE odmx.measurement_result_values ADD CONSTRAINT fk_measurement_result_values_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MeasurementResultValues_CV_CensorCode */
ALTER TABLE odmx.measurement_result_values ADD CONSTRAINT fk_measurement_result_values_cv_censor_code
	FOREIGN KEY (censor_code_cv) REFERENCES odmx.cv_censor_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MeasurementResultValues_CV_QualityCode */
ALTER TABLE odmx.measurement_result_values ADD CONSTRAINT fk_measurement_result_values_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MeasurementResultValues_MeasurementResults */
ALTER TABLE odmx.measurement_result_values ADD CONSTRAINT fk_measurement_result_values_measurement_results
	FOREIGN KEY (result_id) REFERENCES odmx.measurement_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MeasurementResults_Results */
ALTER TABLE odmx.measurement_results ADD CONSTRAINT fk_measurement_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_MeasurementResults_SpatialReferences */
ALTER TABLE odmx.measurement_results ADD CONSTRAINT fk_measurement_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PointCoverageResultValues_CV_CensorCode */
ALTER TABLE odmx.point_coverage_result_values ADD CONSTRAINT fk_point_coverage_result_values_cv_censor_code
	FOREIGN KEY (censor_code_cv) REFERENCES odmx.cv_censor_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PointCoverageResultValues_CV_QualityCode */
ALTER TABLE odmx.point_coverage_result_values ADD CONSTRAINT fk_point_coverage_result_values_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PointCoverageResultValues_PointCoverageResults */
ALTER TABLE odmx.point_coverage_result_values ADD CONSTRAINT fk_point_coverage_result_values_point_coverage_results
	FOREIGN KEY (result_id) REFERENCES odmx.point_coverage_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PointCoverageResults_CV_AggregationStatistic */
ALTER TABLE odmx.point_coverage_results ADD CONSTRAINT fk_point_coverage_results_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PointCoverageResults_Results */
ALTER TABLE odmx.point_coverage_results ADD CONSTRAINT fk_point_coverage_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PointCoverageResults_SpatialReferences */
ALTER TABLE odmx.point_coverage_results ADD CONSTRAINT fk_point_coverage_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ProfileResultValues_CV_CensorCode */
ALTER TABLE odmx.profile_result_values ADD CONSTRAINT fk_profile_result_values_cv_censor_code
	FOREIGN KEY (censor_code_cv) REFERENCES odmx.cv_censor_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ProfileResultValues_CV_QualityCode */
ALTER TABLE odmx.profile_result_values ADD CONSTRAINT fk_profile_result_values_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ProfileResultValues_ProfileResults */
ALTER TABLE odmx.profile_result_values ADD CONSTRAINT fk_profile_result_values_profile_results
	FOREIGN KEY (result_id) REFERENCES odmx.profile_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ProfileResults_CV_AggregationStatistic */
ALTER TABLE odmx.profile_results ADD CONSTRAINT fk_profile_results_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ProfileResults_Results */
ALTER TABLE odmx.profile_results ADD CONSTRAINT fk_profile_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ProfileResults_SpatialReferences */
ALTER TABLE odmx.profile_results ADD CONSTRAINT fk_profile_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResultValues_CV_AggregationStatistic */
ALTER TABLE odmx.section_result_values ADD CONSTRAINT fk_section_result_values_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResultValues_CV_CensorCode */
ALTER TABLE odmx.section_result_values ADD CONSTRAINT fk_section_result_values_cv_censor_code
	FOREIGN KEY (censor_code_cv) REFERENCES odmx.cv_censor_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResultValues_CV_QualityCode */
ALTER TABLE odmx.section_result_values ADD CONSTRAINT fk_section_result_values_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResultValues_SectionResults */
ALTER TABLE odmx.section_result_values ADD CONSTRAINT fk_section_result_values_section_results
	FOREIGN KEY (result_id) REFERENCES odmx.section_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResults_CV_AggregationStatistic */
ALTER TABLE odmx.section_results ADD CONSTRAINT fk_section_results_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResults_Results */
ALTER TABLE odmx.section_results ADD CONSTRAINT fk_section_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SectionResults_SpatialReferences */
ALTER TABLE odmx.section_results ADD CONSTRAINT fk_section_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpectraResultValues_CV_CensorCode */
ALTER TABLE odmx.spectra_result_values ADD CONSTRAINT fk_spectra_result_values_cv_censor_code
	FOREIGN KEY (censor_code_cv) REFERENCES odmx.cv_censor_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpectraResultValues_CV_QualityCode */
ALTER TABLE odmx.spectra_result_values ADD CONSTRAINT fk_spectra_result_values_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpectraResultValues_SpectraResults */
ALTER TABLE odmx.spectra_result_values ADD CONSTRAINT fk_spectra_result_values_spectra_results
	FOREIGN KEY (result_id) REFERENCES odmx.spectra_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpectraResults_CV_AggregationStatistic */
ALTER TABLE odmx.spectra_results ADD CONSTRAINT fk_spectra_results_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpectraResults_Results */
ALTER TABLE odmx.spectra_results ADD CONSTRAINT fk_spectra_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpectraResults_SpatialReferences */
ALTER TABLE odmx.spectra_results ADD CONSTRAINT fk_spectra_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TimeseriesResultValues_CV_CensorCode */
ALTER TABLE odmx.timeseries_result_values ADD CONSTRAINT fk_timeseries_result_values_cv_censor_code
	FOREIGN KEY (censor_code_cv) REFERENCES odmx.cv_censor_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TimeseriesResultValues_CV_QualityCode */
ALTER TABLE odmx.timeseries_result_values ADD CONSTRAINT fk_timeseries_result_values_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TimeseriesResultValues_TimeseriesResults */
ALTER TABLE odmx.timeseries_result_values ADD CONSTRAINT fk_timeseries_result_values_timeseries_results
	FOREIGN KEY (result_id) REFERENCES odmx.timeseries_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TimeseriesResults_CV_AggregationStatistic */
ALTER TABLE odmx.timeseries_results ADD CONSTRAINT fk_timeseries_results_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TimeseriesResults_Results */
ALTER TABLE odmx.timeseries_results ADD CONSTRAINT fk_timeseries_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TimeseriesResults_SpatialReferences */
ALTER TABLE odmx.timeseries_results ADD CONSTRAINT fk_timeseries_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TrajectoryResultValues_CV_CensorCode */
ALTER TABLE odmx.trajectory_result_values ADD CONSTRAINT fk_trajectory_result_values_cv_censor_code
	FOREIGN KEY (censor_code_cv) REFERENCES odmx.cv_censor_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TrajectoryResultValues_CV_QualityCode */
ALTER TABLE odmx.trajectory_result_values ADD CONSTRAINT fk_trajectory_result_values_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TrajectoryResultValues_TrajectoryResults */
ALTER TABLE odmx.trajectory_result_values ADD CONSTRAINT fk_trajectory_result_values_trajectory_results
	FOREIGN KEY (result_id) REFERENCES odmx.trajectory_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TrajectoryResults_CV_AggregationStatistic */
ALTER TABLE odmx.trajectory_results ADD CONSTRAINT fk_trajectory_results_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TrajectoryResults_Results */
ALTER TABLE odmx.trajectory_results ADD CONSTRAINT fk_trajectory_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TrajectoryResults_SpatialReferences */
ALTER TABLE odmx.trajectory_results ADD CONSTRAINT fk_trajectory_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResultValues_CV_AggregationStatistic */
ALTER TABLE odmx.transect_result_values ADD CONSTRAINT fk_transect_result_values_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResultValues_CV_CensorCode */
ALTER TABLE odmx.transect_result_values ADD CONSTRAINT fk_transect_result_values_cv_censor_code
	FOREIGN KEY (censor_code_cv) REFERENCES odmx.cv_censor_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResultValues_CV_QualityCode */
ALTER TABLE odmx.transect_result_values ADD CONSTRAINT fk_transect_result_values_cv_quality_code
	FOREIGN KEY (quality_code_cv) REFERENCES odmx.cv_quality_code (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResultValues_TransectResults */
ALTER TABLE odmx.transect_result_values ADD CONSTRAINT fk_transect_result_values_transect_results
	FOREIGN KEY (result_id) REFERENCES odmx.transect_results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResults_CV_AggregationStatistic */
ALTER TABLE odmx.transect_results ADD CONSTRAINT fk_transect_results_cv_aggregation_statistic
	FOREIGN KEY (aggregation_statistic_cv) REFERENCES odmx.cv_aggregation_statistic (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResults_Results */
ALTER TABLE odmx.transect_results ADD CONSTRAINT fk_transect_results_results
	FOREIGN KEY (result_id) REFERENCES odmx.results (result_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_TransectResults_SpatialReferences */
ALTER TABLE odmx.transect_results ADD CONSTRAINT fk_transect_results_spatial_references
	FOREIGN KEY (spatial_reference_id) REFERENCES odmx.spatial_references (spatial_reference_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_CalculatedDatastreamExpression_SamplingFeatureTimeseriesDatastreams */
ALTER TABLE odmx.calculated_datastream_expression ADD CONSTRAINT fk_calculated_datastream_expression_sampling_feature_timeseries_datastreams
	FOREIGN KEY (datastream_id) REFERENCES odmx.sampling_feature_timeseries_datastreams (datastream_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DatasourceDescription_SamplingFeatures */
ALTER TABLE odmx.datasource_description ADD CONSTRAINT fk_datasource_description_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeDatastreamPerson_CV_PersonsRole */
ALTER TABLE odmx.datastream_person_bridge ADD CONSTRAINT fk_bridge_datastream_person_cv_persons_role
	FOREIGN KEY (person_role) REFERENCES odmx.cv_persons_role (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeDatastreamPerson_Persons */
ALTER TABLE odmx.datastream_person_bridge ADD CONSTRAINT fk_bridge_datastream_person_persons
	FOREIGN KEY (person_id) REFERENCES odmx.persons (person_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_BridgeDatastreamPerson_SamplingFeatureTimeseriesDatastreams */
ALTER TABLE odmx.datastream_person_bridge ADD CONSTRAINT fk_bridge_datastream_person_sampling_feature_timeseries_datastreams
	FOREIGN KEY (datastream_id) REFERENCES odmx.sampling_feature_timeseries_datastreams (datastream_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DatastreamProvenance_SamplingFeatureTimeseriesDatastreams */
ALTER TABLE odmx.datastream_provenance ADD CONSTRAINT fk_datastream_provenance_sampling_feature_timeseries_datastreams
	FOREIGN KEY (datastream_id) REFERENCES odmx.sampling_feature_timeseries_datastreams (datastream_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DatastreamProvenanceFiles_Equipment */
ALTER TABLE odmx.datastream_provenance_files ADD CONSTRAINT fk_datastream_provenance_files_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_DatastreamProvenanceFiles_SamplingFeatureTimeseriesDatastreams */
ALTER TABLE odmx.datastream_provenance_files ADD CONSTRAINT fk_datastream_provenance_files_sampling_feature_timeseries_datastreams
	FOREIGN KEY (datastream_id) REFERENCES odmx.sampling_feature_timeseries_datastreams (datastream_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PhenocamCalculatedChannel_samplingfeatures_timeseriesdatastreams */
ALTER TABLE odmx.phenocam_calculated_channel ADD CONSTRAINT fk_phenocam_calculated_channel_samplingfeatures_timeseriesdatastreams
	FOREIGN KEY (datastream_id) REFERENCES odmx.sampling_feature_timeseries_datastreams (datastream_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_phenocamcubes_phenocamdata */
ALTER TABLE odmx.phenocam_cubes ADD CONSTRAINT fk_phenocamcubes_phenocamdata
	FOREIGN KEY (phenocam_dataset_id) REFERENCES odmx.phenocam_data (phenocam_dataset_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PhenocamData_SamplingFeatures */
ALTER TABLE odmx.phenocam_data ADD CONSTRAINT fk_phenocam_data_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_PhenocamImgs_PhenocamData */
ALTER TABLE odmx.phenocam_imgs ADD CONSTRAINT fk_phenocam_imgs_phenocam_data
	FOREIGN KEY (phenocam_dataset_id) REFERENCES odmx.phenocam_data (phenocam_dataset_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_QAQCDetail_QAQCLog */
ALTER TABLE odmx.qaqc_detail ADD CONSTRAINT fk_qaqc_detail_qaqc_log
	FOREIGN KEY (qaqc_log_id) REFERENCES odmx.qaqc_log (qaqc_log_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureTimeseriesDatastreams_CV_DatastreamAccessLevel */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT fk_sampling_feature_timeseries_datastreams_cv_datastream_access_level
	FOREIGN KEY (datastream_access_level) REFERENCES odmx.cv_datastream_access_level (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureTimeseriesDatastreams_CV_DatastreamClassifier */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT fk_sampling_feature_timeseries_datastreams_cv_datastream_classifier
	FOREIGN KEY (datastream_classifier) REFERENCES odmx.cv_datastream_classifier (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureTimeseriesDatastreams_CV_DatastreamSourceCategory */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT fk_sampling_feature_timeseries_datastreams_cv_datastream_source_category
	FOREIGN KEY (datastream_source_category) REFERENCES odmx.cv_datastream_source_category (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureTimeseriesDatastreams_CV_DatastreamType */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT fk_sampling_feature_timeseries_datastreams_cv_datastream_type
	FOREIGN KEY (datastream_type) REFERENCES odmx.cv_datastream_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureTimeseriesDatastreams_CV_Units */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT fk_sampling_feature_timeseries_datastreams_cv_units
	FOREIGN KEY (units_id) REFERENCES odmx.cv_units (units_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureTimeseriesDatastreams_Equipment */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT fk_sampling_feature_timeseries_datastreams_equipment
	FOREIGN KEY (equipment_id) REFERENCES odmx.equipment (equipment_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureTimeseriesDatastreams_SamplingFeatures */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT fk_sampling_feature_timeseries_datastreams_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SamplingFeatureTimeseriesDatastreams_Variables */
ALTER TABLE odmx.sampling_feature_timeseries_datastreams ADD CONSTRAINT fk_sampling_feature_timeseries_datastreams_variables
	FOREIGN KEY (variable_id) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_VariableQAMinMax_Variables */
ALTER TABLE odmx.variable_qa_min_max ADD CONSTRAINT fk_variable_qa_min_max_variables
	FOREIGN KEY (variable_id) REFERENCES odmx.variables (variable_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SoilprobeMonitoringERTDatastream_SoilprobeMonitoring */
ALTER TABLE odmx.soilprobe_monitoring_ert_datastream ADD CONSTRAINT fk_soilprobe_monitoring_ert_datastream_soilprobe_monitoring
	FOREIGN KEY (soilprobe_monitoring_id) REFERENCES odmx.soilprobe_monitoring (soilprobe_monitoring_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SoilprobeMonitoringTemperatureDatastream_SoilprobeMonitoring */
ALTER TABLE odmx.soilprobe_monitoring_temperature_datastream ADD CONSTRAINT fk_soilprobe_monitoring_temperature_datastream_soilprobe_monitoring
	FOREIGN KEY (soilprobe_monitoring_id) REFERENCES odmx.soilprobe_monitoring (soilprobe_monitoring_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SurveyElectrodeGeometry_SoilprobeMonitoring */
ALTER TABLE odmx.survey_electrode_geometry ADD CONSTRAINT fk_survey_electrode_geometry_soilprobe_monitoring
	FOREIGN KEY (soilprobe_monitoring_id) REFERENCES odmx.soilprobe_monitoring (soilprobe_monitoring_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_featuresofinterest_cv_featureofinteresttype */
ALTER TABLE odmx.features_of_interest ADD CONSTRAINT fk_featuresofinterest_cv_featureofinteresttype
	FOREIGN KEY (features_of_interest_type_cv) REFERENCES odmx.cv_features_of_interest_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_FeatureParents_SamplingFeatures */
ALTER TABLE odmx.related_features ADD CONSTRAINT fk_feature_parents_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_FeatureParents_SpatialOffsets */
ALTER TABLE odmx.related_features ADD CONSTRAINT fk_feature_parents_spatial_offsets
	FOREIGN KEY (spatial_offset_id) REFERENCES odmx.spatial_offsets (spatial_offset_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedFeatures_CV_RelationshipType */
ALTER TABLE odmx.related_features ADD CONSTRAINT fk_related_features_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedFeatures_SamplingFeatures */
ALTER TABLE odmx.related_features ADD CONSTRAINT fk_related_features_sampling_features
	FOREIGN KEY (related_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SampledFeatures_CV_RelationshipType */
ALTER TABLE odmx.sampled_features ADD CONSTRAINT fk_sampled_features_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SampledFeatures_FeatureOfInterest */
ALTER TABLE odmx.sampled_features ADD CONSTRAINT fk_sampled_features_feature_of_interest
	FOREIGN KEY (feature_of_interest_id) REFERENCES odmx.features_of_interest (features_of_interest_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SampledFeatures_SamplingFeatures */
ALTER TABLE odmx.sampled_features ADD CONSTRAINT fk_sampled_features_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpatialOffsets_CV_SpatialOffsetType */
ALTER TABLE odmx.spatial_offsets ADD CONSTRAINT fk_spatial_offsets_cv_spatial_offset_type
	FOREIGN KEY (spatial_offset_type_cv) REFERENCES odmx.cv_spatial_offset_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpecimenCollection_CV_SpecimenCollection */
ALTER TABLE odmx.specimen_collection ADD CONSTRAINT fk_specimen_collection_cv_specimen_collection
	FOREIGN KEY (specimen_collection_cv) REFERENCES odmx.cv_specimen_collection (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpecimenCollection_SpecimenCollection */
ALTER TABLE odmx.specimen_collection ADD CONSTRAINT fk_specimen_collection_specimen_collection
	FOREIGN KEY (parent_specimen_collection_id) REFERENCES odmx.specimen_collection (specimen_collection_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpecimenTaxonomicClassifiers_Citations */
ALTER TABLE odmx.specimen_taxonomic_classifiers ADD CONSTRAINT fk_specimen_taxonomic_classifiers_citations
	FOREIGN KEY (citation_id) REFERENCES odmx.citations (citation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpecimenTaxonomicClassifiers_Specimens */
ALTER TABLE odmx.specimen_taxonomic_classifiers ADD CONSTRAINT fk_specimen_taxonomic_classifiers_specimens
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.specimens (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpecimenTaxonomicClassifiers_TaxonomicClassifiers */
ALTER TABLE odmx.specimen_taxonomic_classifiers ADD CONSTRAINT fk_specimen_taxonomic_classifiers_taxonomic_classifiers
	FOREIGN KEY (taxonomic_classifier_id) REFERENCES odmx.taxonomic_classifiers (taxonomic_classifier_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpecimenToSpecimenCollectionBridge_SpecimenCollection */
ALTER TABLE odmx.specimen_to_specimen_collection_bridge ADD CONSTRAINT fk_specimen_to_specimen_collection_bridge_specimen_collection
	FOREIGN KEY (specimen_collection_id) REFERENCES odmx.specimen_collection (specimen_collection_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_SpecimenToSpecimenCollectionBridge_Specimens */
ALTER TABLE odmx.specimen_to_specimen_collection_bridge ADD CONSTRAINT fk_specimen_to_specimen_collection_bridge_specimens
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.specimens (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Specimens_CV_Medium */
ALTER TABLE odmx.specimens ADD CONSTRAINT fk_specimens_cv_medium
	FOREIGN KEY (specimen_medium_cv) REFERENCES odmx.cv_medium (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Specimens_CV_SpecimenType */
ALTER TABLE odmx.specimens ADD CONSTRAINT fk_specimens_cv_specimen_type
	FOREIGN KEY (specimen_type_cv) REFERENCES odmx.cv_specimen_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Specimens_SamplingFeatures */
ALTER TABLE odmx.specimens ADD CONSTRAINT fk_specimens_sampling_features
	FOREIGN KEY (sampling_feature_id) REFERENCES odmx.sampling_features (sampling_feature_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ModelAffiliations_Affiliations */
ALTER TABLE odmx.model_affiliations ADD CONSTRAINT fk_model_affiliations_affiliations
	FOREIGN KEY (affiliation_id) REFERENCES odmx.affiliations (affiliation_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_ModelAffiliations_Models */
ALTER TABLE odmx.model_affiliations ADD CONSTRAINT fk_model_affiliations_models
	FOREIGN KEY (model_id) REFERENCES odmx.models (model_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedModels_CV_RelationshipType */
ALTER TABLE odmx.related_models ADD CONSTRAINT fk_related_models_cv_relationship_type
	FOREIGN KEY (relationship_type_cv) REFERENCES odmx.cv_relationship_type (term)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_RelatedModels_Models */
ALTER TABLE odmx.related_models ADD CONSTRAINT fk_related_models_models
	FOREIGN KEY (model_id) REFERENCES odmx.models (model_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Simulations_Actions */
ALTER TABLE odmx.simulations ADD CONSTRAINT fk_simulations_actions
	FOREIGN KEY (action_id) REFERENCES odmx.actions (action_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_Simulations_Models */
ALTER TABLE odmx.simulations ADD CONSTRAINT fk_simulations_models
	FOREIGN KEY (model_id) REFERENCES odmx.models (model_id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;
/* ================================================================
   ================================================================ */

